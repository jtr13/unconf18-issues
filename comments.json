[
 {
  "id": 324554329,
  "url": "https://github.com/ropensci/unconf18/issues/75",
  "title": "Collaboration workflow for users who are willing to use RStudio",
  "created_by": "lauracion",
  "created_at": "5/18/2018",
  "body": "## Summary for another of the projects that came up while discussing #42\r\n\r\n@jzelner's wrote: \"package approach for users who are willing to collaborate using RStudio:\r\n\r\n1. Compile to a zipfile or other archive, with a) an RDS file containing all of the R objects needed in the course of generating the final PDF/HTML/MD document, b) a directory of binary or text files (e.g. figures, csv files), c) a requirements.txt style manifest listing both what is in the archive and any R dependencies. \r\n\r\n2. At document-generation time, the archive is mounted and accessed without expanding it into the filesystem, and executed like a normal RMD.\"",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/75/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#75"
 },
 {
  "id": 324597304,
  "url": "https://github.com/ropensci/unconf18/issues/78",
  "title": "Code of conduct template package + tools/packages for promoting a diverse and welcoming environment",
  "created_by": "lcolladotor",
  "created_at": "5/18/2018",
  "body": "Hi,\r\n\r\nI have a simple idea (I think) that could maybe grow into one or more packages/tools.\r\n\r\nThe initial idea is the following one. I've seen that my co-workers have felt more comfortable and empowered by the code of conduct we have at http://research.libd.org/rstatsclub/#coc that is adapted from http://unconf18.ropensci.org/coc.html. I know that the R Consortium requires code of conducts (based on https://wiki.r-consortium.org/view/R_Consortium_and_the_R_Community_Code_of_Conduct) for activities they sponsor. So I was thinking that it would be useful to have a small package that has a set of code of conduct templates that helps you make your own for your website, conference, event, GitHub repo, etc. The minimal version would be to change the name of the event and the set of emails of those whom participants should contact. I think that if code of conducts were in many more websites that it could help make the community even more welcoming than what it is right now.\r\n\r\nFrom this idea, I thought that it could be expanded a bit more. Some ideas were:\r\n\r\n* Maybe something like http://blog.revolutionanalytics.com/2018/03/twitter-bot-or-not.html that predicts if someone is supporting diversity? Could be by inferring a gender ratio of those the account follows. Could be based on language sentiment (is that the right term?) and if the account tweets \"angry\" stuff or not. Could be a package + shiny app. I mention gender ratio with the idea that if you follow a narrow set of individuals, you will miss out on other perspectives that can potentially influence the way you act. For example, I've seen others call out some types of aggressions that I wasn't noticing, which then lead me to ask myself if I was doing them or not. Could be adapted and made useful for helping https://github.com/ropensci/unconf18/issues/57.\r\n* Using the above tool to check how supportive were the tweets from a given conference (by checking a hashtag or a set of hashtags), as a way to help conference organizers identify potential issues that are in conflict with the code of conduct. Here I'm thinking that it's easier to diffuse a situation earlier rather than later.\r\n* A shiny app or tool where others can sign up to help rate as either a tweet is supportive or unsupportive (or other categories). You could use it when you are not sure that your tweet was ok and want to get some feedback from others (probably others wouldn't be allowed to see your name/twitter handle) or if you want to study a select number of tweets from a user(s). This could then help inform the model for the first bullet point. This app/tool could be expanded to posts in the rstudio community website or elsewhere -- though it's probably best if you can then get the content of the text automatically like you can for tweets.\r\n\r\nI'm thinking about Twitter for several of these because you can get the tweet content programatically. But it could be expanded beyond this. Also, I have some experience with shiny apps and R packages, but not with analyzing tweets, text sentiment and other skills needed for implementing these suggestions. Plus, these are rough ideas and they would need to be polished to make sure that they can be used to promote diversity and a welcoming environment rather than discriminate.\r\n\r\nSummary:\r\n\r\n* Package or app with code of conduct templates as a way to help disseminate them.\r\n* Discuss other tools (shiny apps? packages?) that could help:\r\n  - predict if a twitter account is diverse/supportive,\r\n  - help check tweets with a given hashtag to identify potential problematic tweets and take action early rather than later (from a conference organizer's perspective),\r\n  - use humans to help check tweets's supportiveness and generate data that could then help these models.\r\n\r\n\r\n\r\nBest,\r\nLeo",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/78/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#78"
 },
 {
  "id": 324580815,
  "url": "https://github.com/ropensci/unconf18/issues/77",
  "title": "GitHubBerries: get notified of new release of r package not on CRAN",
  "created_by": "czeildi",
  "created_at": "5/18/2018",
  "body": "Inspired by CranBerries and new ropensci pkgs I am imagining a way to get notified about new releases of r packages on GitHub ( not yet on cran or never will be on cran.) there is a growing number of such packages. \r\n\r\n- get notified of selected packages\r\n- Twitter not for new release of \"significant\" packages (based on stars/forks/ commits) ??\r\n\r\nI imagine this is easiest if package has Travis CI but should be possible otherwise with GitHub API",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390404302",
    "html_url": "https://github.com/ropensci/unconf18/issues/77#issuecomment-390404302",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/77",
    "id": 390404302,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/19/2018",
    "updated_at": "2018-05-19T13:16:34Z",
    "author_association": "MEMBER",
    "body": "There used to be a service called Sibbel sending you notifications of releases of repos one had starred but it shut down. Maybe there are equivalents out there? "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/77/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#77"
 },
 {
  "id": 324346050,
  "url": "https://github.com/ropensci/unconf18/issues/72",
  "title": "Tools and guidance on basic dataset metadata standards, files and formats.",
  "created_by": "annakrystalli",
  "created_at": "5/18/2018",
  "body": "As a results of teaching Research Data Management to first year primarily biology and ecology PhD students using R for the passed 4 yrs, I’ve been thinking a lot about metadata. In particular what the most basic level we teach students should be and what sort of files and formats to use. \r\n\r\nI tried to teach them to create Ecological Metadata Language objects ([EML](http://www.dcc.ac.uk/resources/metadata-standards/eml-ecological-metadata-language)) using pkg [`eml2`](https://github.com/cboettig/eml2) last year but I wouldn’t consider my attempt successful. It seemed too much for them at this point in their studies and not critical enough to spend more of the limited time we had together on it.\r\n\r\nBut what I’ve tried to do since and feel I wanted them to ultimately get out of the session was to learn to prepare metadata files that are:\r\n- Easy to produce and understand right from the start\r\n- Useful in analyses\r\n- Have good API to more complex metadata storage frameworks (ie through [`csvy`](https://github.com/leeper/csvy), `eml2` etc) that they can get to grips with further down the line, as and when it’s required.\r\n\r\nSo I’ve been thinking about R functionality that could help with both the task of creating said basic files and establishing best metadata management practice. Some of the features I’ve envisaged would help guide or semi-/automate some of the requirements identified in [rOpenSci Analysis Best Practice Guidelines](https://docs.google.com/document/d/1OYcWJUk-MiM2C1TIHB1Rn6rXoF5fHwRX-7_C12Blx8g/edit#heading=h.dyoxrtoo15mm) as still being human powered, eg.  \r\n- Know your data (list of variables described, visualise your data, data dictionary, data format)\r\n- Description of root dataset (s) \r\n- Informative titles/labels \r\n\r\nI made a start putting some useful functionality together in nascent package [`metadatar`](https://github.com/annakrystalli/metadatar) (see draft README for quick demo of some of the functions) that I used successfully for teaching.  The main function creates a metadata table for a given dataset, with a row for each column of the original dataset.  The basic metadata fields are based on the EML attribute table and the function tries to automatically populate some of the fields but the rest need to be entered manually still. However, it would be great if this stage could be integrated with the excellent suggestions in issue #52 and perhaps through #68? (I need to get my head round CEDAR a bit more to understand how this might fit in).\r\n\r\nTo show students how keeping good metadata about variables can be useful in analyses, there’s also a function to extract more informative variable descriptions and units for plotting and presenting results in tables from the metadata table.\r\n\r\nWould love to hear other people’s thoughts on this and their own current and ideal approaches to these issues and perhaps even work on developing some more tools for this during the unconf. It feels like a topic that could perhaps be integrated with issue #52?\r\n\r\n## Summary of proposal\r\n\r\n- Discuss and define what the minimum metadata standard should be and the objects/file formats they should be compiled and stored in.\r\n- Consider what the best way to make such information available during analyses (ie as attributes of a data.frame/tibble?).\r\n- Further develop functionality to help researchers/analysts produce such files.\r\n- Link to tools that can help with ontologies (eg #52)\r\n- Define a context that could be used to link the basic fields in the metadata table to  basic fields in different standards? \r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390262795",
    "html_url": "https://github.com/ropensci/unconf18/issues/72#issuecomment-390262795",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/72",
    "id": 390262795,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T16:34:35Z",
    "author_association": "MEMBER",
    "body": "This sounds great!  Might also have tie-ins to #41 ?\r\n\r\nTo throw a bit more into the mix, I think Google's [Dataset](https://developers.google.com/search/docs/data-types/dataset) description would be worth some exploring too, both because 'hey, if Google supports it, that could definitely help with discovery' and also because I think it's a pretty light-weight / user-friendly approach (says my sample size of `n=1`).  \r\n\r\n@sckott and I have tossed around the idea of using this to get a better picture of exactly what datasets rOpenSci packages can access, e.g. [movebank example](https://search.google.com/structured-data/testing-tool/u/0/#url=https%3A%2F%2Fgithub.com%2Fcboettig%2Fmovebank%2Fraw%2Fmaster%2Finst%2Fextdata%2Fdatasauce.json), [GBIF](https://search.google.com/structured-data/testing-tool/u/0/#url=https%3A%2F%2Fraw.githubusercontent.com%2Fropensci%2Frgbif%2Fmaster%2Finst%2Fextdata%2Fdata.json).  \r\n\r\nI think it would be nice to think of a prototype package that could help generate the basic bits (i.e. bibliographic info, spatial & temporal coverage of the data, data type), and also help you quickly and easily *do something* cool with that metadata (i.e. search interface, indicate the region on a map, period in time, etc).  I think getting immediate value to the researcher back out is an important missing piece of metadata descriptions; adding metadata often feels both way too painful and too altruistic.  \r\n\r\nA nice feature of Google's Dataset description is that it's JSON, so basically equivalent to an R list object already, but since it's all in the https://schema.org context, we get links to ontologies \"for free\" (such as the W3C's [DCAT](https://www.w3.org/TR/vocab-dcat/)) because these maps are already built in OWL in the schema.org definitions.  Other cases one would have to map more 'manually' but that might be easier anyway!  We have some very sketchy outlines for working with Schema.org in https://github.com/ropenscilabs/datasauce"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/72/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#72"
 },
 {
  "id": 324551302,
  "url": "https://github.com/ropensci/unconf18/issues/73",
  "title": "Input text through Google Doc and display compiled Rmd",
  "created_by": "lauracion",
  "created_at": "5/18/2018",
  "body": "## Summary for one of the projects that came up while discussing #42  \r\n\r\nThe objective is to write body text (as well as captions, etc.), in the google doc with very easy, flexible, and robust markup, and then import that information into a compiled document and mix it with code-generated outputs. [rchie](https://github.com/ropensci/rchie) parses [ArchieML](http://archieml.org/) for the purpose of pulling text written in Google Docs into R and uses it to build R markdown docs where the text came from Google Docs. The project consists on further advancing this - more details [here](https://github.com/noamross/rmd-rant#strategy-2-having-collaborators-provide-input-text-only).",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/73/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#73"
 },
 {
  "id": 316021999,
  "url": "https://github.com/ropensci/unconf18/issues/31",
  "title": "Summarize change of packages since previous versions",
  "created_by": "czeildi",
  "created_at": "4/19/2018",
  "body": "In a bigger project or if you take up a project after some period you may want to update your packages and after such an update you may need to make several changes to your code. This can happen without any package management system or with packrat / checkpoint / docker etc. Even if you use packrat / checkpoint / docker in order to ensure reproducibility you would like to update dependencies from time to time: either you need somehing specific from a newer version or you just know that sooner or later you have to update and the longer you wait the more difficult it will be. However, you should be able to assess beforehand the amount of work needed after an update.\r\n\r\nI propose a package which could generate a digestible summary of all the changes in the dependencies of your project between current state and newest versions. It would ideally work with or without an existing depedency manager.\r\n\r\n- identify current versions of dependencies and their newest versions\r\n- collect news from cran (+github) (+ any other repository)\r\n- create an html / web page from these, ideally organized by breaking changes / new features / fixes\r\n\r\nImprovement possibilities:\r\n\r\n- work for subset of packages\r\n- work for cran newest and dev versions as well\r\n- idetify usages in your code\r\n- propose how to change your code: copy pastable code / functions to reformat if possible (ie only rename)\r\n-  parse changes from code instead of news.md: would be more accurate\r\n\r\nrelated:\r\n\r\n- generate news.md skeleton based on code changes since last package version\r\n\r\nI believe we could build on several existing packages: possibly containerit to identify dependencies, gh to pull news from github\r\n\r\nrelated:\r\nhttps://twitter.com/noamross/status/989904927093936128",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/31/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#31"
 },
 {
  "id": 320901331,
  "url": "https://github.com/ropensci/unconf18/issues/49",
  "title": "Percentiles and z scores in maternal child health",
  "created_by": "monicagerber",
  "created_at": "5/7/2018",
  "body": "I often need to calculate percentiles, z scores, and other measures of growth in maternal & child health research. There are some SAS macros out there and a couple of R packages. The 2 R packages I found don't have all of the measures I need and are a bit clunky to use with tidyverse packages. There are other measures that don't have a SAS macro or R package, just a data table of LMS parameters in a manuscript (PDF). Ideally these methods would be available all in one place in an R package!\r\n\r\nHere some things the package could calculate:\r\n\r\n1. Percentiles and z scores for BMI using the CDC reference charts (SAS program: https://www.cdc.gov/nccdphp/dnpao/growthcharts/resources/sas.htm). I've found 1 package (childsds) that does this, but does not have all of the options as the SAS macro. Importantly, it doesn't calculate %BMIp95 (percent of the 95th percentile of BMI), which is being used more in obesity research. The zscorer package only uses WHO growth charts. The CDC charts are standard in US pediatric obesity research. I have been in contact with the author of the SAS macro and he is very nice and fully supportive of turning this into an R package!\r\n\r\n2. Birth weight for gestational age z-score. I haven't seen a publicly available program for this. I use a SAS program copied from another analyst. (Ref: Oken, E., Kleinman, K. P., Rich-Edwards, J., & Gillman, M. W. (2003). A nearly continuous measure of birth weight for gestational age using a United States national reference. BMC pediatrics, 3(1), 6.) \r\n\r\n3. Child blood pressure percentiles.  (https://sites.google.com/a/channing.harvard.edu/bernardrosner/pediatric-blood-press/childhood-blood-pressure/childhoodbppctsas)\r\n\r\nEventually this could also include measures of maternal gestational weight gain.\r\n\r\nAfter speaking with Stefanie about this, it seems like this could be a good project for someone who hasn't made an R package (myself included). The calculations aren't too difficult.   ",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/49/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#49"
 },
 {
  "id": 323284156,
  "url": "https://github.com/ropensci/unconf18/issues/62",
  "title": "Test project / package after hypothetical package update",
  "created_by": "czeildi",
  "created_at": "5/15/2018",
  "body": "Related to #31 and also the following comment of @noamross in #35 \r\n\r\n> If you want to do live testing of a package, like seeing what system files/folders it modifies, I'm working on a Dockerized setup for our standard package tests: https://github.com/noamross/launchboat, so one could run tests in an isolated environment before installing.\r\n\r\nBefore updating a dependency to the newest version see which tests would break.\r\n\r\nI can imagine this as a service (or maybe Rhub can already do this??) or a local version with Docker ensuring a separate environment. ",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/62/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#62"
 },
 {
  "id": 317478609,
  "url": "https://github.com/ropensci/unconf18/issues/40",
  "title": "Modular tools for a drat / mini-cran repository",
  "created_by": "cboettig",
  "created_at": "4/25/2018",
  "body": "rOpenSci maintains a [drat](https://github.com/eddelbuettel/drat) repository that is built nightly by Circle-CI (with the help of [drat.builder](https://github.com/richfitz/drat.builder)) at http://packages.ropensci.org.  At the moment the utility of this is somewhat minimal; it provides an alternative to `devtools::install_github()` an hosts some supplemental data packages too large for CRAN.\r\n\r\nMaintaining a cran-like repo of development versions could be a lot more compelling if we explored some additional features.   I think some of these could also be seen as useful services / perks of for a maintainer having their package on-boarded. Ideally these would be implemented in modular tools other groups could adopt on ad-hoc basis as well.  What would you like to see?\r\n\r\n- prebuilt binaries (Mac, Windows, even Linux?)  Could significantly reduce install times when downloading packages, possibly useful for CI setups too.   (I believe @jeroen has some thoughts here). \r\n\r\n- Nightly builds.  Particularly useful for packages that interact with an API that might introduce a breaking change.  Currently we do this already via Travis, but with so many rOpenSci packages that can back up Travis builds of packages under active development.\r\n\r\n- Dashboard summaries: a convenient dashboard to see which rOpenSci packages are failing tests on what platform, how frequently they have been downloaded (from the drat/mini-cran, also from CRAN), GitHub issues, other information.  \r\n\r\n- security features.  Previous unconfs (@hrbrmstr and others) have brainstormed about what a secure package repository might look like, signed packages etc.  A working platform (with binaries too!) might give us an interesting platform to try out these ideas? \r\n\r\n- reverse dependency checks. particularly for packages in our ecosystem that depend on other rOpenSci packages. \r\n\r\n- ... Other ideas?\r\n\r\n\r\nWould love to see feedback / interest flushing out any of the above as well as suggestions for other related services you could imagine for such an rOpenSci central repository.  ",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/40/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#40"
 },
 {
  "id": 323710145,
  "url": "https://github.com/ropensci/unconf18/issues/68",
  "title": "R package wrapper to the CEDAR API",
  "created_by": "karawoo",
  "created_at": "5/16/2018",
  "body": "I know there will be a number of metadata nerds in attendance, this one's for you 😀 \r\n\r\n[CEDAR](https://metadatacenter.org/) provides tools for capturing metadata through templates and forms that can reduce the pain and error-prone-ness of typical metadata generation. I'm proposing an R package wrapper to the [CEDAR API](https://resource.metadatacenter.org/api/). Should be a pretty straightforward project that we could do in two days (or at least make good headway).\r\n\r\nI've been in touch with the program manager from CEDAR in the past and they seemed excited about community collaborations. As far as I know, no one has been working on a CEDAR R package yet.\r\n",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/68/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#68"
 },
 {
  "id": 322735054,
  "url": "https://github.com/ropensci/unconf18/issues/56",
  "title": "R in Minecraft, the next generation",
  "created_by": "revodavid",
  "created_at": "5/14/2018",
  "body": "At ROpenSci 2017, a team created the [miner package](https://github.com/ropenscilabs/miner) with R functions to control the Minecraft world. The goal was to provide a framework for young people to learn R, motivated by their desire to automate the construction of objects in Minecraft or to control the world in other way. An accompanying package, [craft](https://github.com/ropenscilabs/craft), was also created with functions to implement some larger-scale projects (for example, an `elsify` function to give the player the power Elsa to freeze water behind their feet). A [bookdown book](https://ropenscilabs.github.io/miner_book/) collected these projects into book form.\r\n\r\nWith a small team and another couple of days, we could get the `miner` package ready for CRAN, and add additional examples to `craft` and the book. Things we could work on include:\r\n\r\n- Cleaning up the API, in particular making location functions more consistent, and using R vectors instead of separate x, z, y arguments\r\n- Making the server connection more robust (right now it tends to disconnect every few minutes)\r\n- Providing a cleaner interface to Minecraft block types\r\n- Creating an up-to-date Docker image for the Spigot server, and simplifying the installation process\r\n\r\nThe Spigot/RaspberryJuice server is a bit limited too; there's no way to change the orientation of the player, for example. We might be able to explore other Minecraft APIs and see if they're more suitable for this project.\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389322800",
    "html_url": "https://github.com/ropensci/unconf18/issues/56#issuecomment-389322800",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/56",
    "id": 389322800,
    "user": {
     "login": "seaaan",
     "id": 10538357,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10538357?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seaaan",
     "html_url": "https://github.com/seaaan",
     "followers_url": "https://api.github.com/users/seaaan/followers",
     "following_url": "https://api.github.com/users/seaaan/following{/other_user}",
     "gists_url": "https://api.github.com/users/seaaan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seaaan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seaaan/subscriptions",
     "organizations_url": "https://api.github.com/users/seaaan/orgs",
     "repos_url": "https://api.github.com/users/seaaan/repos",
     "events_url": "https://api.github.com/users/seaaan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seaaan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:41:45Z",
    "author_association": "NONE",
    "body": "This sounds fun! If the project I proposed doesn't work out I'd like to work on this. "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/56/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#56"
 },
 {
  "id": 323600914,
  "url": "https://github.com/ropensci/unconf18/issues/67",
  "title": "packrat: ease the use of external libraries",
  "created_by": "czeildi",
  "created_at": "5/16/2018",
  "body": "First case: a team collaborates on a project w `packrat` and one of the team members would like to use a package not closely related to the project like `colorout`. Afaik you can add this package as external package but then it would be required as external package for all project members. You can work around this by manipulating .Rprofile files but it is quite cumbersome.\r\n\r\nSecond case: There are some \"meta\" packages which do not necessarily have place as project dependencies like `usethis`, `lintr`, `goodpractice`, `covr`, `pkgdown` etc. I take advantage of these packages in almost all of my project but I do not necessarily want to add them as dependencies. I can use `packrat::with_extlib` but I run into the issue that it is not enough to specify the main package like `pkgdown` but also all their dependencies not present in my project which varies and makes it somewhat cumbersome to use. I think we could automate this.\r\n\r\n```r\r\npackrat::with_extlib(c(\"pkgdown\", \"rstudioapi\", \"highlight\", \"debugme\", \"callr\", \"rematch\"), build_site())\r\n```\r\n\r\ntagging @kevinushey as the developer of `packrat` - what do you think? Is there already solution I missed? ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389597774",
    "html_url": "https://github.com/ropensci/unconf18/issues/67#issuecomment-389597774",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/67",
    "id": 389597774,
    "user": {
     "login": "kevinushey",
     "id": 1976582,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1976582?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/kevinushey",
     "html_url": "https://github.com/kevinushey",
     "followers_url": "https://api.github.com/users/kevinushey/followers",
     "following_url": "https://api.github.com/users/kevinushey/following{/other_user}",
     "gists_url": "https://api.github.com/users/kevinushey/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/kevinushey/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/kevinushey/subscriptions",
     "organizations_url": "https://api.github.com/users/kevinushey/orgs",
     "repos_url": "https://api.github.com/users/kevinushey/repos",
     "events_url": "https://api.github.com/users/kevinushey/events{/privacy}",
     "received_events_url": "https://api.github.com/users/kevinushey/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T17:18:08Z",
    "author_association": "NONE",
    "body": "I'd be open to discussing a better solution here. I think `packrat::with_extlib()` is not really the best solution here; there is likely something a little more ergonomic we could do.\r\n\r\nI wonder if the simplest solution might be the right solution -- just provide some simple mechanism for putting the user library on the library search path, so that `library(pkgdown)` can find `pkgdown` in the user library even if not installed in the Packrat private library.\r\n\r\nThere's also `packrat::opts$external.packages()`, which is a 'smarter' version of the above where we attempt to symlink user packages into `packrat/lib-ext`, which we do always put on the library search path."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/67/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#67"
 },
 {
  "id": 313564235,
  "url": "https://github.com/ropensci/unconf18/issues/22",
  "title": "Git + R nirvana: how to get there",
  "created_by": "jennybc",
  "created_at": "4/11/2018",
  "body": "The tools most of us use to accomplish Git/GitHub magic **from R** are the RStudio IDE and the [git2r](https://github.com/ropensci/git2r) package (part of the rOpenSci org).\r\n\r\nUnder the hood, these exploit different tools to enact Git operations: system Git (RStudio IDE) and libgit2 (git2r). This means that various aspects of Git configuration can be good to go for one but not the other. This is mostly about configuring credentials for Git remotes, e.g. setting up SSH keys.\r\n\r\nI've done a fair amount of testing and documenting for [Happy Git](http://happygitwithr.com). But I think initial setup could become even easier and better documented with respect to tricky bits, such as using passphrase-protected SSH keys on Windows. I'd love to stress-test and improve setup instructions for Git so that more people have more success across Mac/Windows/Linux for command line Git (--> RStudio IDE) and git2r (--> devtools, usethis, etc.).",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382194317",
    "html_url": "https://github.com/ropensci/unconf18/issues/22#issuecomment-382194317",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/22",
    "id": 382194317,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/17/2018",
    "updated_at": "2018-04-17T23:48:41Z",
    "author_association": "NONE",
    "body": "> But I think initial setup could become even easier and better documented with respect to tricky bits...\r\n\r\nI totally agree. Considering the key role of Git and GitHub in data science workflows, and how nicely integrated these tools are with RStudio, I think the resources for people to learn remain scarce. For example, there is only one RStudio webinar on GitHub and RStudio ([Managing Change Part 2](https://www.rstudio.com/resources/webinars/)), which -- I believe -- doesn't cover SSH keys, and was recorded before RStudio included a terminal."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388659759",
    "html_url": "https://github.com/ropensci/unconf18/issues/22#issuecomment-388659759",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/22",
    "id": 388659759,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/13/2018",
    "updated_at": "2018-05-13T22:14:05Z",
    "author_association": "NONE",
    "body": "A little off-topic but still related to git2r. A tool to [Automatically generate list of contributors](https://github.com/r-lib/devtools/issues/1279) has already been packaged up?\r\n\r\n>  I have local code to achieve this and will package up at some point\r\n-- @hadley\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/22/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#22"
 },
 {
  "id": 304880890,
  "url": "https://github.com/ropensci/unconf18/issues/13",
  "title": "Create educational docs/blog for claims like “R can’t be used in production”!",
  "created_by": "ghost",
  "created_at": "3/13/2018",
  "body": "Rstudio is looking for Director of Education who can help with this project.\r\n https://hire.withgoogle.com/public/jobs/rstudiocom/view/P_AAAAAACAAADJv_c3liAM2t\r\n\r\nHow can we ensure that uptake of R is not limited by misconceptions like “R isn’t a real programming language” or “R can’t be used in production”?\r\n\r\nBut, why don't we, as a community of R users, work on a doc or blog post where the data scientists talk about their experience of using R for a lot of things than just statistics that can help remove this kind of a stigma that is being told to young and aspiring data scientists like me. In all honesty, when I started learning data science, the instructors were pretty harsh in their view about R without even knowing it's full capabilities.\r\n\r\nWhy can't we collaborate with an open-source business like RStudio and work with to help promote R for higher level programming?",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382182444",
    "html_url": "https://github.com/ropensci/unconf18/issues/13#issuecomment-382182444",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/13",
    "id": 382182444,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/17/2018",
    "updated_at": "2018-04-18T11:31:50Z",
    "author_association": "NONE",
    "body": "I like your idea. In crafting the writting, Would you consider ideas from behavioral psycology? That is not my field but I find it fascinating and potentially useful. \r\n\r\nWhat most quickly comes to my mind are ideas from the book [Switch: How to Change Things When Change Is Hard](http://heathbrothers.com/books/switch/), by the Heath brothers. The book presents a model to facilitate change that can be summarized in this image:\r\n\r\n![](http://www.joshuanhook.com/wp-content/uploads/2017/02/elephant-030.png) \r\n\r\nExamples:\r\n* Direct the rider: Provide convincing evidence for why to change. \r\n* Motivate the elephant: Make people _feel_ they need to change.\r\n* Shape the path: Provide systems, workflows, convensions that facilitate change.\r\n\r\nAnother idea that comes to my mind is about how to influence people. Here I'm inspired by [How to win friends and influence people](https://www.amazon.com/How-Win-Friends-Influence-People/dp/0671027034), by Dale Carnegie, and a bunch of other books ([audible books including free-link](http://bit.ly/share-wisdom)). I think the most influential way to drive change is by asking questions and listening. \r\n\r\nI suggest creating a friendly forum, maybe a meetup, where \"speakers\" of different programming languagges solve the same problem. This should enrich everyone's hearts and minds, including R users.\r\n\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/13/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#13"
 },
 {
  "id": 323037484,
  "url": "https://github.com/ropensci/unconf18/issues/59",
  "title": "Building meta-packages (e.g. tidyverse) to centralize multiple packages",
  "created_by": "maurolepore",
  "created_at": "5/14/2018",
  "body": "Do you find yourself repeatedly installing or loading the same packages? How about building a meta-package? \r\n\r\nThe main goal of a meta-package is to install and load other packages (a famous example is the __tidyverse__ package). But also you may use the pkgdown website of a meta-package as a kind of meeting point for all the packages it gathers (e.g. [tidyverse](https://www.tidyverse.org/); [fgeo](https://forestgeo.github.io/fgeo/)).\r\n\r\nIt turns out that building a meta-package is surprisingly simple. The source code of the __tidyverse__ is an excellent template. You could use it to build your own meta-package, or we could generalize it to create a package that creates a meta-package. Is this getting too meta?\r\n:)",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390099150",
    "html_url": "https://github.com/ropensci/unconf18/issues/59#issuecomment-390099150",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/59",
    "id": 390099150,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T05:32:51Z",
    "author_association": "NONE",
    "body": "Summary: Building a package to create a meta-package, such as the __tidyverse__."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/59/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#59"
 },
 {
  "id": 323190269,
  "url": "https://github.com/ropensci/unconf18/issues/60",
  "title": "Discussion: Time management strategies and work-life balance",
  "created_by": "maurolepore",
  "created_at": "5/15/2018",
  "body": "The great amount and quality of work that some people do seems impossible. Such people include @jennybc, @jimhester, @hadley, and many others from rOpenSci. What they achieve would not only take me a new brain, but also 10 lives, 60 marriages, and all of my mental health. What habits, strategies, and tools do they have and use?\r\n\r\nIn some countries kids learn time management skills early, at school. Not where I grew up, and likely now in too many other places. As an adult I learned some helpful strategies, but I continue to drift to bad habits and poor work-life balance. I would love to casually discuss this issue and learn from your experience.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390098195",
    "html_url": "https://github.com/ropensci/unconf18/issues/60#issuecomment-390098195",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/60",
    "id": 390098195,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T05:25:30Z",
    "author_association": "NONE",
    "body": "Summary: Discussion on what habits, strategies, and tools people use to manage their time effectively, to achieve their goals at work and in life."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/60/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#60"
 },
 {
  "id": 323597868,
  "url": "https://github.com/ropensci/unconf18/issues/66",
  "title": "Testing and reporting performance regressions / tracking performance over time",
  "created_by": "jimhester",
  "created_at": "5/16/2018",
  "body": "There were two issues last year https://github.com/ropensci/unconf17/issues/90, https://github.com/ropensci/unconf17/issues/56 devoted to a service which would allow package authors to track performance of their package over time.\r\n\r\nI think this is still an unmet need, maybe it would not be too much work to create a web service to do the storage and reporting for this with [plumber](https://www.rplumber.io/)?",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390348051",
    "html_url": "https://github.com/ropensci/unconf18/issues/66#issuecomment-390348051",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/66",
    "id": 390348051,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:22:59Z",
    "author_association": "NONE",
    "body": "Yes, I have this need! "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/66/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#66"
 },
 {
  "id": 322766447,
  "url": "https://github.com/ropensci/unconf18/issues/57",
  "title": "Foster an LGBTQ community for R",
  "created_by": "revodavid",
  "created_at": "5/14/2018",
  "body": "R-Ladies has been enormously successful at promoting gender diversity within the R community, and bringing many new women (and their diverse perspectives) into the R community. Can we do something similar for the LGBTQ community?\r\n\r\nThere are some differences between the communities we'd need to consider:\r\n\r\n- The LGBTQ community is much smaller than the R-Ladies community; would the intersection of R and LGBTQ be large enough to sustain a vibrant community? \r\n- On that note, there are many LGBTQ allies in the R community; how could we incorporate allies into this community as well?\r\n- Are there existing LGBTQ communities for data science / machine learning? Perhaps we could form an R community there?\r\n- R-Ladies is already very welcoming to diverse participants generally; perhaps a program within R-Ladies would make the most sense.\r\n- How would LGBTQ participants best like to engage within such a community? Thinking here about private forums vs public forums, etc.\r\n- Other thoughts/issues? (Please suggest in the comments.)\r\n\r\nI propose we form a small group to discuss these issues and to make some recommendations for fostering an LGBTQ community as a part of the R community.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388779796",
    "html_url": "https://github.com/ropensci/unconf18/issues/57#issuecomment-388779796",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/57",
    "id": 388779796,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T11:06:12Z",
    "author_association": "NONE",
    "body": "Couple examples (albeit much more general than this would be):\r\n* https://lesbianswhotech.org/\r\n* https://outintech.com/\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389267697",
    "html_url": "https://github.com/ropensci/unconf18/issues/57#issuecomment-389267697",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/57",
    "id": 389267697,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T18:29:53Z",
    "author_association": "NONE",
    "body": "As someone who is is part of the LGBTQ community and in the R community, this is worth thinking about. I've often felt a bit compartmentalized in my academic career and my identity, and I would welcome any group supporting both."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389285547",
    "html_url": "https://github.com/ropensci/unconf18/issues/57#issuecomment-389285547",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/57",
    "id": 389285547,
    "user": {
     "login": "bduckles",
     "id": 6986662,
     "avatar_url": "https://avatars2.githubusercontent.com/u/6986662?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bduckles",
     "html_url": "https://github.com/bduckles",
     "followers_url": "https://api.github.com/users/bduckles/followers",
     "following_url": "https://api.github.com/users/bduckles/following{/other_user}",
     "gists_url": "https://api.github.com/users/bduckles/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bduckles/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bduckles/subscriptions",
     "organizations_url": "https://api.github.com/users/bduckles/orgs",
     "repos_url": "https://api.github.com/users/bduckles/repos",
     "events_url": "https://api.github.com/users/bduckles/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bduckles/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:29:47Z",
    "author_association": "NONE",
    "body": "Would love to join this discussion about the LGBTQ community (also including intersex/nonbinary people) and possibly also expanding it to talk about racial/ethnic minority groups as well. How might we talk about welcoming people to the R community who are not cis, hetero white males?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389288868",
    "html_url": "https://github.com/ropensci/unconf18/issues/57#issuecomment-389288868",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/57",
    "id": 389288868,
    "user": {
     "login": "stefaniebutland",
     "id": 11927811,
     "avatar_url": "https://avatars0.githubusercontent.com/u/11927811?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stefaniebutland",
     "html_url": "https://github.com/stefaniebutland",
     "followers_url": "https://api.github.com/users/stefaniebutland/followers",
     "following_url": "https://api.github.com/users/stefaniebutland/following{/other_user}",
     "gists_url": "https://api.github.com/users/stefaniebutland/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stefaniebutland/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stefaniebutland/subscriptions",
     "organizations_url": "https://api.github.com/users/stefaniebutland/orgs",
     "repos_url": "https://api.github.com/users/stefaniebutland/repos",
     "events_url": "https://api.github.com/users/stefaniebutland/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stefaniebutland/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:40:55Z",
    "author_association": "COLLABORATOR",
    "body": "I'd love to join this discussion with open ears. Safe to say we'd publish an rOpenSci blog post on this if someone / a group decides to write something up after the discussion. \r\n\r\nFor example, last year, this post by Shannon Ellis https://ropensci.org/blog/2017/06/23/community/ came out of this unconf17 issue that became a lunch time discussion https://github.com/ropensci/unconf17/issues/63."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/57/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#57"
 },
 {
  "id": 323822071,
  "url": "https://github.com/ropensci/unconf18/issues/70",
  "title": ".rprofile interviews :: the next evolution",
  "created_by": "kellobri",
  "created_at": "5/16/2018",
  "body": "I have a wild and crazy idea for iterating on the [.rprofile interview series](https://ropensci.org/tags/rprofile/) from last year. I'd like to continue doing .rprofiles this year, and anyone/everyone is welcome to join me in interviewing or being interviewer: [unconf17 Issue](https://github.com/ropensci/unconf17/issues/64)\r\n\r\nBut I'd also like to try something new. Possibly to be called `.Renviron Interviews`?\r\n\r\n.Renviron Interviews focus less on personal career/life topics and more on personal workflows/demos. **_If you have a process or package or R-related life skill that you're highly opinionated about, I think it would make an awesome .Renviron piece._** I'm imagining the process would go something like: \r\n\r\n1. An interviewer and interviewee sit together in front of a computer.\r\n2. They turn screen capture on.\r\n3. They turn audio recording on.\r\n4. The interviewee shows the interviewer how to do something or use something, using their favorite tools, workflow and opinionated development practices.\r\n5. The interviewer asks questions about what's going on.\r\n6. The interviewer transcribes and edits the audio into written form, and selectively chooses pieces of the recorded screen capture to edit into short GIFs.\r\n7. The interviewee makes their own edits or suggestions.\r\n8. You have an awesome .Renviron!\r\n\r\nThis could be a disaster! I've never tried it before! Does anyone want to participate? I'd love to hear feedback or nominations for interviews you'd like to see.\r\n\r\nProps as always to @stefaniebutland for ideation and inspiration 🥇 ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389935363",
    "html_url": "https://github.com/ropensci/unconf18/issues/70#issuecomment-389935363",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/70",
    "id": 389935363,
    "user": {
     "login": "karawoo",
     "id": 4452678,
     "avatar_url": "https://avatars2.githubusercontent.com/u/4452678?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/karawoo",
     "html_url": "https://github.com/karawoo",
     "followers_url": "https://api.github.com/users/karawoo/followers",
     "following_url": "https://api.github.com/users/karawoo/following{/other_user}",
     "gists_url": "https://api.github.com/users/karawoo/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/karawoo/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/karawoo/subscriptions",
     "organizations_url": "https://api.github.com/users/karawoo/orgs",
     "repos_url": "https://api.github.com/users/karawoo/repos",
     "events_url": "https://api.github.com/users/karawoo/events{/privacy}",
     "received_events_url": "https://api.github.com/users/karawoo/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T16:52:57Z",
    "author_association": "NONE",
    "body": "I love this idea! I'd like to tentatively volunteer to participate and demo how I use [magit](https://github.com/magit/magit)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389948949",
    "html_url": "https://github.com/ropensci/unconf18/issues/70#issuecomment-389948949",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/70",
    "id": 389948949,
    "user": {
     "login": "amoeba",
     "id": 563,
     "avatar_url": "https://avatars2.githubusercontent.com/u/563?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/amoeba",
     "html_url": "https://github.com/amoeba",
     "followers_url": "https://api.github.com/users/amoeba/followers",
     "following_url": "https://api.github.com/users/amoeba/following{/other_user}",
     "gists_url": "https://api.github.com/users/amoeba/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/amoeba/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/amoeba/subscriptions",
     "organizations_url": "https://api.github.com/users/amoeba/orgs",
     "repos_url": "https://api.github.com/users/amoeba/repos",
     "events_url": "https://api.github.com/users/amoeba/events{/privacy}",
     "received_events_url": "https://api.github.com/users/amoeba/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T17:38:28Z",
    "author_association": "NONE",
    "body": "(I'd love to see that @karawoo!)\r\n\r\nI like this idea. I was instantly reminded of Hadley's [video](https://www.youtube.com/watch?v=boKFxBniUH0) or sites like [emacsrocks](http://emacsrocks.com/) or [usethis](https://usesthis.com/). 👍 on transcribing to text and GIFs as a medium. Your idea is kind of a blend of these types of things which is great!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389952015",
    "html_url": "https://github.com/ropensci/unconf18/issues/70#issuecomment-389952015",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/70",
    "id": 389952015,
    "user": {
     "login": "kellobri",
     "id": 4359210,
     "avatar_url": "https://avatars2.githubusercontent.com/u/4359210?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/kellobri",
     "html_url": "https://github.com/kellobri",
     "followers_url": "https://api.github.com/users/kellobri/followers",
     "following_url": "https://api.github.com/users/kellobri/following{/other_user}",
     "gists_url": "https://api.github.com/users/kellobri/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/kellobri/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/kellobri/subscriptions",
     "organizations_url": "https://api.github.com/users/kellobri/orgs",
     "repos_url": "https://api.github.com/users/kellobri/repos",
     "events_url": "https://api.github.com/users/kellobri/events{/privacy}",
     "received_events_url": "https://api.github.com/users/kellobri/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T17:47:59Z",
    "author_association": "NONE",
    "body": "Yes @amoeba - I was inspired by that video from Hadley and also [this one from Julia](https://youtu.be/evTuL-RcRpc). Resources like these are really cool, but they take a lot of planning and prep to put together - unless you're a super confident boss and can just rep 'em out. \r\n\r\nI'm hoping that the more laid back, _'I know someone will edit the heck out of this'_ approach will lower the scariness-to-entry for some folks and inspire the creation of more content like this."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389977301",
    "html_url": "https://github.com/ropensci/unconf18/issues/70#issuecomment-389977301",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/70",
    "id": 389977301,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T19:12:47Z",
    "author_association": "NONE",
    "body": "If you need any assistance in the gif department, you know I'm down! "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/70/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#70"
 },
 {
  "id": 320960930,
  "url": "https://github.com/ropensci/unconf18/issues/50",
  "title": "color palette aggregator/modifier tool",
  "created_by": "cstawitz",
  "created_at": "5/7/2018",
  "body": "There are loads of packages/ways to choose color palettes for R graphics, but I still end up doing a lot of iterations through many packages until I find a suitable color palette. \r\n\r\n**Existing packages (please add):**\r\n`colorspace` has a GUI that makes choosing colors easy with a preview function for different types of plots and a slider for Hue, Chroma, Luminance, and Power, but doesn't integrate seamlessly with other color packages. 'RColorBrewer' [(here)](http://colorbrewer2.org/#type=sequential&scheme=YlGn&n=9) has many palettes but you have to use the `colorRampPalette()` function to get more than 9 or 11 colors. `hues` allows you to pick palettes with many colors, but requires numeric HCL inputs for colors. There are many great palettes out there (i.e. [Beyonce](http://beyoncepalettes.tumblr.com/) or `wesanderson` ) in addition, but checking how your graph looks across palettes from different packages requires loading and knowing the different syntax of each.\r\n\r\n**Idea:**\r\nA one-stop-shop for colors in R that combines the best of existing tools.  The goal would be to change the workflow from iterating across multiple packages to find a suitable palette to using one tool that:\r\n1. Aggregates and displays color palettes across packages\r\n2. Allows users to increase/decrease the number of colors in these palettes\r\n3. Pick and choose colors from predefined palettes to create your own custom palette\r\n4. Adds transparency or ensure colorblind-friendly schemes\r\n5. Get immediate previews of what a/your graph would look like when you change any of these options\r\n\r\nmy colleague Margaret Siple inspired this idea  \r\n\r\n \r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387212135",
    "html_url": "https://github.com/ropensci/unconf18/issues/50#issuecomment-387212135",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/50",
    "id": 387212135,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/7/2018",
    "updated_at": "2018-05-07T21:27:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great idea! My go-to comprehensive list is [`r-color-palettes`](https://github.com/EmilHvitfeldt/r-color-palettes), but it's neither interactive, nor does it quantify how many colours are available. A more interactive tool would be fantastic."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387213439",
    "html_url": "https://github.com/ropensci/unconf18/issues/50#issuecomment-387213439",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/50",
    "id": 387213439,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/7/2018",
    "updated_at": "2018-05-07T21:33:10Z",
    "author_association": "NONE",
    "body": "Love the focus on color vision deficiency (CVD) friendliness"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387316739",
    "html_url": "https://github.com/ropensci/unconf18/issues/50#issuecomment-387316739",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/50",
    "id": 387316739,
    "user": {
     "login": "OmaymaS",
     "id": 13340411,
     "avatar_url": "https://avatars3.githubusercontent.com/u/13340411?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/OmaymaS",
     "html_url": "https://github.com/OmaymaS",
     "followers_url": "https://api.github.com/users/OmaymaS/followers",
     "following_url": "https://api.github.com/users/OmaymaS/following{/other_user}",
     "gists_url": "https://api.github.com/users/OmaymaS/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/OmaymaS/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/OmaymaS/subscriptions",
     "organizations_url": "https://api.github.com/users/OmaymaS/orgs",
     "repos_url": "https://api.github.com/users/OmaymaS/repos",
     "events_url": "https://api.github.com/users/OmaymaS/events{/privacy}",
     "received_events_url": "https://api.github.com/users/OmaymaS/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T07:52:18Z",
    "author_association": "NONE",
    "body": "The options and interactivity reminds me of [colorbrewer2.org](http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3). It helps picking a palette taking in consideration the given criteria."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389700987",
    "html_url": "https://github.com/ropensci/unconf18/issues/50#issuecomment-389700987",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/50",
    "id": 389700987,
    "user": {
     "login": "cstawitz",
     "id": 7132710,
     "avatar_url": "https://avatars1.githubusercontent.com/u/7132710?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cstawitz",
     "html_url": "https://github.com/cstawitz",
     "followers_url": "https://api.github.com/users/cstawitz/followers",
     "following_url": "https://api.github.com/users/cstawitz/following{/other_user}",
     "gists_url": "https://api.github.com/users/cstawitz/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cstawitz/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cstawitz/subscriptions",
     "organizations_url": "https://api.github.com/users/cstawitz/orgs",
     "repos_url": "https://api.github.com/users/cstawitz/repos",
     "events_url": "https://api.github.com/users/cstawitz/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cstawitz/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T23:51:11Z",
    "author_association": "NONE",
    "body": "**Summary:** an interactive application that aggregates color palettes, allows users to choose and combine palette colors, preview and iterate easily, and makes transparency and CVD friendliness a one-click step. Doesn't require manually loading or learning syntax of existing palette solutions."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/50/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#50"
 },
 {
  "id": 324572536,
  "url": "https://github.com/ropensci/unconf18/issues/76",
  "title": "Incorporate word doc track changes back into R markdown",
  "created_by": "goldingn",
  "created_at": "5/18/2018",
  "body": "I know a lot of folks who are put off using R markdown for reports and scientific papers because they know it'll be hard to incorporate the inevitable Word doc tracked changes they'll get back from their collaborators/supervisors. \r\n\r\nI *think* pandoc could be used to convert both the original and edited doc back to markdown, and that could then be diffed to find the changes in text part of the markdown (if it's a word doc, only text will have changed). It may then be possible to detect how those bits of text correspond to the R markdown document, and apply the changes there. \r\n\r\nIt would also be nice to automate rendering of the changes. That can be done for pdfs via latexdiff: http://timotheepoisot.fr/2014/07/10/markdown-track-changes/\r\nHTML might be trickier.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390351927",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390351927",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390351927,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:48:22Z",
    "author_association": "NONE",
    "body": "This is a whim and not something I've thought much about. If someone says \"this has already been done\" or \"this is not possible\" then I'll be very happy to have my choice of project narrowed :) "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390352497",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390352497",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390352497,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:52:21Z",
    "author_association": "NONE",
    "body": "Somewhat related to #73"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390354690",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390354690",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390354690,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T23:07:00Z",
    "author_association": "NONE",
    "body": "OK, so this definitely duplicates part of #42. In fact it probably serves as a half-decent summary of another project idea from that thread: automating @mmulvahill's workflow for dealing with track changes from word"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390361021",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390361021",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390361021,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T23:59:22Z",
    "author_association": "NONE",
    "body": "> It may then be possible to detect how those bits of text correspond to the R markdown document, and apply the changes there.\r\n\r\nI'm thinking you could just `grep()` for text matching that which changed in the original document, grabbing some sentences on either side to disambiguate multiple matches.\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390361397",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390361397",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390361397,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T00:02:09Z",
    "author_association": "NONE",
    "body": "a stretch goal could be to incorporate word comments into the R markdown using [this handy little trick](https://github.com/ropensci/unconf18/issues/74#issuecomment-390337985)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390363001",
    "html_url": "https://github.com/ropensci/unconf18/issues/76#issuecomment-390363001",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/76",
    "id": 390363001,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T00:15:04Z",
    "author_association": "NONE",
    "body": "I talk to myself in GitHub issues quite a lot."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/76/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#76"
 },
 {
  "id": 314289414,
  "url": "https://github.com/ropensci/unconf18/issues/23",
  "title": "parallel progress bars",
  "created_by": "goldingn",
  "created_at": "4/13/2018",
  "body": "Getting progress bars and other information in the console for big jobs running in parallel is something I've wanted for a *looong* time. It is possible to get [GUI progress bars on windows](http://blog.revolutionanalytics.com/2015/03/creating-progress-bar-with-foreach-parallel-processing.html) (using TK), but this method apparently doesn't work on mac/linux, and doesn't print to the console.\r\n\r\nIt would be awesome if this functionality could be integrated with the [future](https://github.com/HenrikBengtsson/future) package, so that it can be used on any parallel backed the future API supports. It would be super awesome if we could enable export of the widely used progress bars in [`utils`](https://rdrr.io/r/utils/txtProgressBar.html), and the swanky progress bars in [`progress`](https://github.com/r-lib/progress).\r\n\r\nThere are technical hurdles around with communication between processes and differences between operating systems, but it's definitely achievable. I've put together a gist<sup>1</sup> with a prototype that does this the dumb (but generalisable) way; writing progress information to tempfiles which are read by the main process:\r\n```r\r\nlibrary (future)\r\nsource(\"https://gist.githubusercontent.com/goldingn/d5a3aebfbc63eaadd92f0ff5ca811a5d/raw/12b552722020626e3f7014e1d9314266287acee0/parallel_progress.R\")\r\n\r\nfoo <- function (n) {\r\n  for (i in seq_len(n)) {\r\n    update_parallel_progress(i, n)\r\n    Sys.sleep(runif(1))\r\n  }\r\n  \"success!\"\r\n}\r\n\r\nplan(multiprocess)\r\nfuture_replicate(4, foo(30))\r\n```\r\n![parallel_progress](https://user-images.githubusercontent.com/4450731/38763057-68d44cf2-3fd7-11e8-8f2e-a30d22e06669.gif)\r\n\r\nThere are various ways this could be improved:\r\n\r\n - Printing progress bars rather than just a percentage process (preferably just embedding bars from the utils and progress packages).\r\n - Sending progress information from processes running on another file system (e.g. remote servers<sup>2</sup>)\r\n - Handling more processes than threads\r\n - Handling sequential execution\r\n - Proper integration with the future package\r\n\r\nRelated discussions:\r\n\r\n[Re. progress information in `future`](https://github.com/HenrikBengtsson/future/issues/141) in which @HenrikBengtsson says he'd rather it were a separate package, and suggests using [`processx`](https://github.com/r-lib/processx).\r\n\r\n[Re. multiple progress bars in progress](https://github.com/r-lib/progress/issues/26) - having progress bars on separate lines isn't trivial since not all consoles allow overwriting of more than one line of output.\r\n\r\nHeads up to @HenrikBengtsson and @gaborcsardi, in case they know of progress on this topic that I'm not aware of!\r\n\r\n---\r\n\r\n<sup>1</sup> https://gist.github.com/goldingn/d5a3aebfbc63eaadd92f0ff5ca811a5d \r\n<sup>2</sup> my main motivation for this is getting live console progress bars for [greta](https://greta-dev.github.io/greta) jobs running on Google CloudML",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381399060",
    "html_url": "https://github.com/ropensci/unconf18/issues/23#issuecomment-381399060",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/23",
    "id": 381399060,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/15/2018",
    "updated_at": "2018-04-15T11:27:28Z",
    "author_association": "NONE",
    "body": "See also the `future` progress bar in `furrr` https://twitter.com/dvaughan32/status/985471691852742656"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381415938",
    "html_url": "https://github.com/ropensci/unconf18/issues/23#issuecomment-381415938",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/23",
    "id": 381415938,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/15/2018",
    "updated_at": "2018-04-15T15:43:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a really important issue for me as well, and I've implemented the basis of the `RcppParallel` necessities too. This is also by \"dumb\" file dump, after spending  several days poring through loads of TBB code and finding no better idea. A merge of both R and C++ approaches would likely be really helpful. An **R** function for C++ code injection should also be possible because it's just appended to the end of an `RcppParallel::worker::operator` call."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381419743",
    "html_url": "https://github.com/ropensci/unconf18/issues/23#issuecomment-381419743",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/23",
    "id": 381419743,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/15/2018",
    "updated_at": "2018-04-15T16:36:06Z",
    "author_association": "NONE",
    "body": "Awesome! Yeah, it would be great if we could handle both R & C++ in the same package.\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390362317",
    "html_url": "https://github.com/ropensci/unconf18/issues/23#issuecomment-390362317",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/23",
    "id": 390362317,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T00:08:40Z",
    "author_association": "NONE",
    "body": "The `greta.live` reference above relates to producing live-streaming plots of an ongoing analysis (MCMC in this case, but it could be anything). That would require very similar functionality, in having a master process providing information to the users, from log files written by the subprocesses.\r\n\r\nWriting this parallel progress bar code in a general way would make similar problems like that easily achievable."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390365117",
    "html_url": "https://github.com/ropensci/unconf18/issues/23#issuecomment-390365117",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/23",
    "id": 390365117,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T00:37:13Z",
    "author_association": "NONE",
    "body": "Also, we could think about supporting progress bars for jobs running on remote machines (e.g. using `future`'s `plan(remote)`) with the awesome looking rOpenSci [`ssh` package](https://github.com/ropensci/ssh)"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/23/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#23"
 },
 {
  "id": 321757058,
  "url": "https://github.com/ropensci/unconf18/issues/54",
  "title": "Code review tools",
  "created_by": "noamross",
  "created_at": "5/9/2018",
  "body": "This is a fork of #37 \r\n\r\nDevelop tools to help R code reviewers better understand the code they are reviewing and make the process easier and more robust, especially for new reviewers.\r\n\r\nExpand on or consolidate https://github.com/ropenscilabs/pkgreviewr, https://github.com/lockedata/PackageReviewR, and https://github.com/noamross/launchboat\r\n\r\nI note that, for non-R package code, there are also guides and tools from last year's **checker** unconf project: https://github.com/ropenscilabs/checkers\r\n\r\n@maelle @boshek @goldingn @annakrystalli",
  "state": "open",
  "comments": [],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/54/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#54"
 },
 {
  "id": 318527442,
  "url": "https://github.com/ropensci/unconf18/issues/45",
  "title": "Meta-Redux: Shiny App to Help You Choose What to Work On",
  "created_by": "seankross",
  "created_at": "4/27/2018",
  "body": "Hello fellow Excel jockeys, metadata journalists, and SPSS licensees,\r\n\r\nJust like last year (https://github.com/ropensci/unconf17/issues/84) I set up a little app to help you browse proposed projects: https://jhubiostatistics.shinyapps.io/runconf18-app/. If there are other features you want to see in the app let me know on the [project repo](https://github.com/seankross/runconf17-app) or better yet send me a pull request! ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385088313",
    "html_url": "https://github.com/ropensci/unconf18/issues/45#issuecomment-385088313",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/45",
    "id": 385088313,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/27/2018",
    "updated_at": "2018-04-27T20:41:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was waiting fur that reincarnation - thanks @seankross "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385402876",
    "html_url": "https://github.com/ropensci/unconf18/issues/45#issuecomment-385402876",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/45",
    "id": 385402876,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T13:47:39Z",
    "author_association": "MEMBER",
    "body": "@seankross we've now added labels to issues and they come with emojis. 💃  @noamross made me notice the emojis are rendered as text, not emojis, in your app. Do you think this could be solved easily? No worry if not, of course."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385506756",
    "html_url": "https://github.com/ropensci/unconf18/issues/45#issuecomment-385506756",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/45",
    "id": 385506756,
    "user": {
     "login": "seankross",
     "id": 1819813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1819813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seankross",
     "html_url": "https://github.com/seankross",
     "followers_url": "https://api.github.com/users/seankross/followers",
     "following_url": "https://api.github.com/users/seankross/following{/other_user}",
     "gists_url": "https://api.github.com/users/seankross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seankross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seankross/subscriptions",
     "organizations_url": "https://api.github.com/users/seankross/orgs",
     "repos_url": "https://api.github.com/users/seankross/repos",
     "events_url": "https://api.github.com/users/seankross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seankross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T19:42:06Z",
    "author_association": "NONE",
    "body": "@maelle Fixed: https://github.com/seankross/runconf17-app/pull/1 Thank you @noamross!"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/45/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#45"
 },
 {
  "id": 314428661,
  "url": "https://github.com/ropensci/unconf18/issues/25",
  "title": "Tools for discovering new packages (again)",
  "created_by": "mpadge",
  "created_at": "4/15/2018",
  "body": "Direct follow-on from last year's [two](https://github.com/ropensci/unconf17/issues/78) related [issues](https://github.com/ropensci/unconf17/issues/49) issues thanks to @sfirke. The [`flipper` package](https://github.com/ropenscilabs/flipper) is kinda developed, kinda stalled, but I personally would love to get that a bit more developed. It currently does full heavyweight text analysis  of `DESCRIPTION` files of all CRAN packages and produces a document similarity matrix that is used to connect one package to another.\r\n\r\nThe original vision of @njtierney was a standard swipe interface which we re-branded \"flip\" to enable quick and easy package browsing. In current state, one can simply:\r\n```\r\nflipper::flip (\"package about a bunch of interesting stuff\")\r\n```\r\nAnd it'll find a starting point in the matrix and then traverse strongest connections. We think that alone is kinda nifty, so please try! Required/desired refinements include:\r\n\r\n1. Refining methods of traversing the matrix, including incorporating user stats with all associated concerns raised in [previous issue](https://github.com/ropensci/unconf17/issues/49). Extension to an ML framework would be very straightforward, because the whole thing works on fixed-sized binary vectors (like/dislike next jump along vector).\r\n2. As @jimhester pointed out in [original issue](https://github.com/ropensci/unconf17/issues/78), trawling `man` files is likely to be even more informative. The infrastructure for this is all there, but it might push the limits of text similarity matrix processing?\r\n3. Extension to all non-CRAN packages on github (I know there's a list somewhere, and @maelle has her excellent [`is_package` function](https://github.com/ropenscilabs/ghrecipes/blob/master/R/is_package.R) for repo enquiry.)\r\n3. Slick flippable interface\r\n\r\nThat's all it would take to have most of the infrastructure there for one to type some text and start flipping through R packages until one discovered something desirable, interesting, or at least unexpected.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384149801",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-384149801",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 384149801,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T03:28:01Z",
    "author_association": "NONE",
    "body": "What about incorporating something like https://github.com/ropenscilabs/packagemetrics to the information returned, so that when searching for a package you get not only a description, but indicators of popularity and quality?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384178480",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-384178480",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 384178480,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T06:48:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's actually a great example. Incorporating new data means either a new network weighting matrix (for edges, or relationships between packages), or a new vector of nodal properties. I've been mostly concentrating on the former, but `packagemetrics` is a great example of the latter. These are computationally much cheaper, and equally important. Nodal vectors then need to be translated into edge matrices to guide traversal algorithms, and I also haven't explored that translation yet at all. `packagemetrics` would provide a fine opportunity to develop that too."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384220571",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-384220571",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 384220571,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T09:18:54Z",
    "author_association": "NONE",
    "body": "Possibly a project of its own, but one of the ways in which I discover packages is through use cases, often in the form of blog posts. I have yet to come up with an idea that wouldn't be \"hackable\" in some capacity (i.e. there'd be nothing to stop someone to load a bunch of packages just for the pings, or whatever), but I'd be curious to think about a way of somehow highlighting package (or even function) usage in a way that ties back to the package itself- package usage in the wild, if you will. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384221675",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-384221675",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 384221675,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T09:22:55Z",
    "author_association": "MEMBER",
    "body": "Ah I love this @batpigandme! I've thought about adding this to the guidelines for rOpenSci packages https://github.com/ropensci/onboarding-meta/issues/39 , in practice it'd be a list inside README which is maybe not optimal since the README is often .Rbuildignored. But the README lives in the pkgdown website."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384221928",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-384221928",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 384221928,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T09:23:55Z",
    "author_association": "MEMBER",
    "body": "obviously I'm open to suggestions of better ways to save this information in the package docs!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385951054",
    "html_url": "https://github.com/ropensci/unconf18/issues/25#issuecomment-385951054",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/25",
    "id": 385951054,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/2/2018",
    "updated_at": "2018-05-02T11:47:55Z",
    "author_association": "NONE",
    "body": "It occurs to me that some of this work would be applicable to the editorial need of finding _authors_.  For instance, given a package submission, could we identify packages with similar uses, dependencies, or even code patterns? If so, that package's author might make a good reviewer for the submission, and the same analysis could also alert us to overlap between the submission and another package.\r\n\r\nThat said, I'm painfully aware that journals have such systems for finding potential reviewers for manuscripts and the results are rarely really helpful.  Not sure if they are just based on keyword matching or something like that, though."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/25/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#25"
 },
 {
  "id": 318972807,
  "url": "https://github.com/ropensci/unconf18/issues/47",
  "title": "Batch File Processing Workflow",
  "created_by": "laderast",
  "created_at": "4/30/2018",
  "body": "Hi Everyone,\r\n\r\nI've been kicking this idea around for a little bit. Our group does a lot of batch processing of input files when we run our pipeline for flow cytometry data. Sometimes the output of a step will fail, and we have to flag the files that fail so they aren't passed through further steps in the pipeline.\r\n\r\nWhen I do this currently, I basically build file manifests (location of files with relevant metadata) and run some sort of processing in R. I was thinking maybe by incorporating data assertions (like with assertr), we can have a workflow that shows when files pass a step, and flags those files that fail a processing step. In the end, we can display to users of the pipeline which files passed and which files didn't, and which steps.\r\n\r\nMaybe there's a little germ of an idea here that might work for the unconf. I'm not sure, so I'm putting it out there.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385476331",
    "html_url": "https://github.com/ropensci/unconf18/issues/47#issuecomment-385476331",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/47",
    "id": 385476331,
    "user": {
     "login": "karthik",
     "id": 138494,
     "avatar_url": "https://avatars2.githubusercontent.com/u/138494?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/karthik",
     "html_url": "https://github.com/karthik",
     "followers_url": "https://api.github.com/users/karthik/followers",
     "following_url": "https://api.github.com/users/karthik/following{/other_user}",
     "gists_url": "https://api.github.com/users/karthik/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/karthik/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/karthik/subscriptions",
     "organizations_url": "https://api.github.com/users/karthik/orgs",
     "repos_url": "https://api.github.com/users/karthik/repos",
     "events_url": "https://api.github.com/users/karthik/events{/privacy}",
     "received_events_url": "https://api.github.com/users/karthik/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T17:51:18Z",
    "author_association": "MEMBER",
    "body": "Drake can do a lot of what you are asking for (cc @wlandau-lilly). `vis_drake_graph` on your Drake plan should show you steps that failed (in red). Fixing those should only re-run those steps and not everything from scratch. You might take a look at https://github.com/ropensci/drake and see if it's something that matches your needs."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385478773",
    "html_url": "https://github.com/ropensci/unconf18/issues/47#issuecomment-385478773",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/47",
    "id": 385478773,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T18:00:01Z",
    "author_association": "NONE",
    "body": "+1 to that! Suppose we're working with [this data analysis workflow](https://ropensci.github.io/drake/articles/drake.html) and one of our functions does not work.\r\n\r\n```r\r\ncreate_plot <- function(data) {\r\n  ggplot(data, aes(x = Petal.Width, fill = Species)) +\r\n    geom_histogram(binwidth = 0.25) +\r\n    theme_gray(20) +\r\n    BAD_LAYER\r\n}\r\n```\r\n\r\nWe run our workflow and see.\r\n\r\n```r\r\n> make(plan)\r\ntarget raw_data\r\ntarget data\r\ntarget fit\r\ntarget hist\r\nfail hist\r\nError: Target `hist`` failed. Call `diagnose(hist)` for details. Error message:\r\n  object 'BAD_LAYER' not found\r\n```\r\n\r\nDiagnostics include warnings, errors, messages, and other context.\r\n\r\n```r\r\n> diagnose(hist)\r\n> diagnose(hist)\r\n$target\r\n[1] \"hist\"\r\n\r\n$messages\r\nNULL\r\n\r\n$error\r\n<simpleError in create_plot(data): object 'BAD_LAYER' not found>\r\n```\r\n\r\nYou can list the failed targets programatically.\r\n\r\n```r\r\n> failed()\r\n[1] \"hist\"\r\n```\r\n\r\nAs Karthik mentioned, these failures are shown in the dependency graph.\r\n\r\n```r\r\nconfig <- drake_config(plan)\r\nvis_drake_graph(config, targets_only = TRUE, full_legend = FALSE)\r\n```\r\n\r\n![capture](https://user-images.githubusercontent.com/1580860/39442170-60113bee-4c7e-11e8-808d-b863b9d81e2a.PNG)\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385486142",
    "html_url": "https://github.com/ropensci/unconf18/issues/47#issuecomment-385486142",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/47",
    "id": 385486142,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T18:25:27Z",
    "author_association": "NONE",
    "body": "Ah, very cool. I didn't know about Drake!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388654847",
    "html_url": "https://github.com/ropensci/unconf18/issues/47#issuecomment-388654847",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/47",
    "id": 388654847,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/13/2018",
    "updated_at": "2018-05-13T20:46:40Z",
    "author_association": "NONE",
    "body": "@laderast, would `purrr::safely()` and `purrr::possibly()` help you?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389269216",
    "html_url": "https://github.com/ropensci/unconf18/issues/47#issuecomment-389269216",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/47",
    "id": 389269216,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T18:34:42Z",
    "author_association": "NONE",
    "body": "Thanks @maurolepore - `purrr::safely()` is a nice approach"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/47/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#47"
 },
 {
  "id": 316028198,
  "url": "https://github.com/ropensci/unconf18/issues/32",
  "title": "teach clean code principles with examples in R",
  "created_by": "czeildi",
  "created_at": "4/19/2018",
  "body": "Writing clean code is important for efficient work in every programming language. However, most of the resources available (at least what I encountered so far) contain examples in primarily object oriented languages making it less accessible for R programmers who are not software engineers.\r\n\r\nClean code makes it easier to collaborate, to avoid bugs and write working code faster. It also helps with understanding code written by others.\r\n\r\nI envision a blog post series / bookdown with the relevant principles adopted from the Clean Code book with examples in R, focusing on every day R users and not necessarily those writing production R code. (i.e. do not mention error classes or R6 classes but focus on the most common use cases) \r\n\r\nSee:\r\n- https://cran.r-project.org/web/packages/cleanr/index.html \r\n- [Robert C Martin: Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882)",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388029375",
    "html_url": "https://github.com/ropensci/unconf18/issues/32#issuecomment-388029375",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/32",
    "id": 388029375,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/10/2018",
    "updated_at": "2018-05-10T11:37:49Z",
    "author_association": "NONE",
    "body": "Is there an online version of this book anywhere? I'd be curious to see what it's all about!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388569857",
    "html_url": "https://github.com/ropensci/unconf18/issues/32#issuecomment-388569857",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/32",
    "id": 388569857,
    "user": {
     "login": "czeildi",
     "id": 9638790,
     "avatar_url": "https://avatars3.githubusercontent.com/u/9638790?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/czeildi",
     "html_url": "https://github.com/czeildi",
     "followers_url": "https://api.github.com/users/czeildi/followers",
     "following_url": "https://api.github.com/users/czeildi/following{/other_user}",
     "gists_url": "https://api.github.com/users/czeildi/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/czeildi/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/czeildi/subscriptions",
     "organizations_url": "https://api.github.com/users/czeildi/orgs",
     "repos_url": "https://api.github.com/users/czeildi/repos",
     "events_url": "https://api.github.com/users/czeildi/events{/privacy}",
     "received_events_url": "https://api.github.com/users/czeildi/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/12/2018",
    "updated_at": "2018-05-12T17:18:00Z",
    "author_association": "NONE",
    "body": "@batpigandme afaik the book is not available for free but there's ebook version."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388890765",
    "html_url": "https://github.com/ropensci/unconf18/issues/32#issuecomment-388890765",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/32",
    "id": 388890765,
    "user": {
     "login": "czeildi",
     "id": 9638790,
     "avatar_url": "https://avatars3.githubusercontent.com/u/9638790?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/czeildi",
     "html_url": "https://github.com/czeildi",
     "followers_url": "https://api.github.com/users/czeildi/followers",
     "following_url": "https://api.github.com/users/czeildi/following{/other_user}",
     "gists_url": "https://api.github.com/users/czeildi/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/czeildi/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/czeildi/subscriptions",
     "organizations_url": "https://api.github.com/users/czeildi/orgs",
     "repos_url": "https://api.github.com/users/czeildi/repos",
     "events_url": "https://api.github.com/users/czeildi/events{/privacy}",
     "received_events_url": "https://api.github.com/users/czeildi/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T17:04:46Z",
    "author_association": "NONE",
    "body": "We just held a workshop on this topic with @paljenczy at [eRum 2018](http://2018.erum.io/#talk-2-303) and we created a [cheatsheet](https://github.com/czeildi/erum-2018-clean-r-code/blob/infra/clean_r_code_cheatsheet_2018-05-08.pdf) which could be a starting point for a more in-depth material.\r\n\r\n@hadley I also thought about differences and similarities with your styleguide book http://style.tidyverse.org For one part the styleguide seems to be a subset of the clean code topic. I think style as a more local thing and clean code (like organizing functions) as a more global topic which makes sense at a somewhat larger scale. But you also touch these topics, like in the section on function design [here](http://style.tidyverse.org/functions.html#design).\r\n\r\nActually I think that at the unconf I'd like to work on a project more about actual coding but outside the unconf I'd love to think more and possibly collaborate around this topic. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389226936",
    "html_url": "https://github.com/ropensci/unconf18/issues/32#issuecomment-389226936",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/32",
    "id": 389226936,
    "user": {
     "login": "hadley",
     "id": 4196,
     "avatar_url": "https://avatars3.githubusercontent.com/u/4196?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hadley",
     "html_url": "https://github.com/hadley",
     "followers_url": "https://api.github.com/users/hadley/followers",
     "following_url": "https://api.github.com/users/hadley/following{/other_user}",
     "gists_url": "https://api.github.com/users/hadley/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hadley/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hadley/subscriptions",
     "organizations_url": "https://api.github.com/users/hadley/orgs",
     "repos_url": "https://api.github.com/users/hadley/repos",
     "events_url": "https://api.github.com/users/hadley/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hadley/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T16:19:27Z",
    "author_association": "MEMBER",
    "body": "@czeildi I think your cheatsheet is a little too prescriptive; we should chat about it in person."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/32/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#32"
 },
 {
  "id": 317425571,
  "url": "https://github.com/ropensci/unconf18/issues/33",
  "title": "Finally build out the Security CRAN Task View",
  "created_by": "hrbrmstr",
  "created_at": "4/24/2018",
  "body": "I started a repo but time is an enemy. A cpl of days in the Evergreen City could end up. @davidski had a stellar idea to use rOpenSci Unconf 2018 as a potential place to get'er done and I'll gladly lead the way to do this.\r\n\r\nIt won't take both days and folks can likely be involved in other projects before/during/after this one.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384126537",
    "html_url": "https://github.com/ropensci/unconf18/issues/33#issuecomment-384126537",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/33",
    "id": 384126537,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:59:08Z",
    "author_association": "NONE",
    "body": "Can you give some examples of what you'd include?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384158632",
    "html_url": "https://github.com/ropensci/unconf18/issues/33#issuecomment-384158632",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/33",
    "id": 384158632,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:39:48Z",
    "author_association": "MEMBER",
    "body": "Cool idea! When starting my inventory of rOpenSci packages to improve the categories of our registries I identified these rOpenSci packages as \"security\" related\r\nhttps://github.com/ropensci/acme\r\nhttps://github.com/ropensci/cyphr\r\nhttps://github.com/ropensci/agent"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384242355",
    "html_url": "https://github.com/ropensci/unconf18/issues/33#issuecomment-384242355",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/33",
    "id": 384242355,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T10:36:52Z",
    "author_association": "NONE",
    "body": "Sure @elinw! I think of it as a pretty broad category since it wld have bits in it for working with various data format, metadata for data format, encryption, web scraping, getting metadata for IP addresses, domains & urls. Plus building security tools, getting metadata from sites like Twitter/Facebook; API interfaces to security and security metadata services, etc.\r\n\r\n## rOpenSci\r\n\r\n- https://github.com/ropensci/cyphr\r\n- https://github.com/ropensci/vcr\r\n- https://github.com/ropensci/crul\r\n- https://github.com/ropensci/tabulizer\r\n- https://github.com/ropensci/pdftools\r\n- https://github.com/ropensci/rtika\r\n- https://github.com/ropensci/tesseract\r\n- https://github.com/ropensci/jqr\r\n- https://github.com/ropensci/jsonvalidate\r\n- https://github.com/ropensci/webservices\r\n- https://github.com/ropensci/gitr\r\n- https://github.com/ropensci/ghql\r\n- https://github.com/ropensci/ftp\r\n- https://github.com/ropensci/antiword\r\n- https://github.com/ropensci/graphql\r\n- https://github.com/ropensci/RSelenium\r\n- https://github.com/ropensci/extractr\r\n- https://github.com/ropensci/acme\r\n- https://github.com/ropensci/agent\r\n\r\n## r-lib\r\n\r\n- https://github.com/r-lib/keyring\r\n- https://github.com/r-lib/cli\r\n- https://github.com/r-lib/httr\r\n- https://github.com/r-lib/gargle\r\n- https://github.com/r-lib/gh\r\n- https://github.com/r-lib/crayon\r\n- https://github.com/r-lib/whoami\r\n- https://github.com/r-lib/pingr\r\n- https://github.com/r-lib/httrmock\r\n- https://github.com/r-lib/async\r\n- https://github.com/r-lib/xml2\r\n- https://github.com/r-lib/processx\r\n\r\n## jeroen\r\n\r\n- https://github.com/jeroen/openssl\r\n- https://github.com/jeroen/jsonlite\r\n- https://github.com/jeroen/sys\r\n- https://github.com/jeroen/v8\r\n- https://github.com/jeroen/libssh\r\n- https://github.com/jeroen/brotli\r\n- https://github.com/jeroen/bcrypt\r\n- https://github.com/jeroen/rprotobuf\r\n- https://github.com/rstudio/httpuv\r\n- https://github.com/jeroen/gpg\r\n- https://github.com/jeroen/js\r\n- https://github.com/jeroen/sodium\r\n- https://github.com/jeroen/webp\r\n- https://github.com/jeroen/ipfs\r\n- https://github.com/jeroen/git\r\n- https://github.com/jeroen/curl\r\n\r\n## johndharrison\r\n\r\n- https://github.com/johndharrison/wdman\r\n- https://github.com/johndharrison/seleniumPipes\r\n- https://github.com/johndharrison/semver\r\n- https://github.com/johndharrison/HARtools\r\n- https://github.com/johndharrison/webpagetestr\r\n\r\n## rstudio\r\n\r\n- https://github.com/rstudio/webdriver\r\n- https://github.com/rstudio/graphframes\r\n- https://github.com/rstudio/swagger\r\n- https://github.com/rstudio/htmltools\r\n- https://github.com/rstudio/rscrypt\r\n- https://github.com/rstudio/r2d3\r\n- https://github.com/rstudio/reticulate\r\n- https://github.com/rstudio/keras\r\n- https://github.com/rstudio/sparklyr\r\n- https://github.com/rstudio/packrat\r\n- https://github.com/rstudio/tensorflow\r\n- https://github.com/rstudio/websocket\r\n\r\n## CRAN\r\n\r\n- https://cran.rstudio.com/web/packages/RCurl/index.html\r\n- https://cran.rstudio.com/web/packages/XML/index.html\r\n\r\n## Misc\r\n\r\n- https://github.com/SymbolixAU/rapidjsonr\r\n- https://github.com/greenore/RSeleniumUtilities\r\n- https://github.com/christophergandrud/d3Network\r\n- https://github.com/gaborcsardi/secret\r\n- https://github.com/hadley/rvest\r\n\r\n## mkearney\r\n\r\n- https://github.com/mkearney/rtweet\r\n- https://github.com/mkearney/botrnot\r\n- https://github.com/mkearney/textfeatures\r\n\r\n## Ironholds\r\n\r\n- https://github.com/Ironholds/webreadr\r\n- https://github.com/Ironholds/urltools\r\n- https://github.com/Ironholds/triebeard\r\n- https://github.com/Ironholds/whoapi\r\n- https://github.com/Ironholds/primes\r\n\r\n## themains\r\n\r\n- https://github.com/themains/rdomains\r\n- https://github.com/themains/dmoz_csv\r\n- https://github.com/themains/virustotal\r\n- https://github.com/themains/trusted\r\n- https://github.com/themains/know_your_ip\r\n- https://github.com/themains/abuse_ip_db\r\n\r\n## hrbrmstr\r\n\r\n- https://github.com/hrbrmstr/urlscan\r\n- https://github.com/hrbrmstr/iptools\r\n- https://github.com/hrbrmstr/curlconverter\r\n- https://github.com/hrbrmstr/inet\r\n- https://github.com/hrbrmstr/exiv\r\n- https://github.com/hrbrmstr/ndjson\r\n- https://github.com/hrbrmstr/dnsflare\r\n- https://github.com/hrbrmstr/misinfo\r\n- https://github.com/hrbrmstr/ipinfo\r\n- https://github.com/hrbrmstr/rpdns\r\n- https://github.com/hrbrmstr/longurl\r\n- https://github.com/hrbrmstr/sslsaran\r\n- https://github.com/hrbrmstr/rgeocodio\r\n- https://github.com/hrbrmstr/splashr\r\n- https://github.com/hrbrmstr/shodan\r\n- https://github.com/hrbrmstr/htmltidy\r\n- https://github.com/hrbrmstr/getdns\r\n- https://github.com/hrbrmstr/wand\r\n- https://github.com/hrbrmstr/mqtt\r\n- https://github.com/hrbrmstr/porc\r\n- https://github.com/hrbrmstr/burrp\r\n- https://github.com/hrbrmstr/decapitated\r\n- https://github.com/hrbrmstr/mrt\r\n- https://github.com/hrbrmstr/greynoise\r\n- https://github.com/hrbrmstr/spiderbar\r\n- https://github.com/hrbrmstr/webhose\r\n- https://github.com/hrbrmstr/securitytxt\r\n- https://github.com/hrbrmstr/rappalyzer\r\n- https://github.com/hrbrmstr/keybase\r\n- https://github.com/hrbrmstr/jericho\r\n- https://github.com/hrbrmstr/wayback\r\n- https://github.com/hrbrmstr/pastebin\r\n- https://github.com/hrbrmstr/tlsobs\r\n- https://github.com/hrbrmstr/ipv4-heatmap\r\n- https://github.com/hrbrmstr/cymruservices\r\n- https://github.com/hrbrmstr/censys\r\n- https://github.com/hrbrmstr/ipapi\r\n- https://github.com/hrbrmstr/uaparserjs\r\n- https://github.com/hrbrmstr/myip\r\n- https://github.com/hrbrmstr/ssllabs\r\n- https://github.com/hrbrmstr/blocklist\r\n- https://github.com/hrbrmstr/passivetotal\r\n- https://github.com/hrbrmstr/threatcrowd\r\n- https://github.com/hrbrmstr/mhn\r\n- https://github.com/hrbrmstr/czdaptools\r\n- https://github.com/hrbrmstr/zoneparser\r\n- https://github.com/hrbrmstr/domaintools\r\n- https://github.com/hrbrmstr/whoisxmlapi\r\n- https://github.com/hrbrmstr/passwordrandom\r\n- https://github.com/hrbrmstr/punycode\r\n- https://github.com/hrbrmstr/ripal\r\n- https://github.com/hrbrmstr/ip-intel"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384242467",
    "html_url": "https://github.com/ropensci/unconf18/issues/33#issuecomment-384242467",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/33",
    "id": 384242467,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T10:37:20Z",
    "author_association": "NONE",
    "body": "NOTE: The above is far from comprehensive but shld help give an idea of the pkg diversity."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/33/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#33"
 },
 {
  "id": 323389179,
  "url": "https://github.com/ropensci/unconf18/issues/64",
  "title": "An on-boarding process for 'research compendia'?",
  "created_by": "cboettig",
  "created_at": "5/15/2018",
  "body": "A late submission here, but the notion of a research compendium has been a frequent theme at previous unconfs, including the [reproducibility guide](https://ropensci.github.io/reproducibility-guide/) (@iamciera et al), [rrrpkg](https://github.com/ropensci/rrrpkg) (@jennybc et al), [checkers](https://github.com/ropenscilabs/checkers) (@noamross et al), also @benmarwick's [rrtools](https://github.com/benmarwick/rrtools) etc.  Despite this, I think there are still quite a lot of open questions as to what exactly a compendium is, what tooling we need to support it, etc.  \r\n\r\nGiven the success of the ropensci onboarding process in fostering discussion, promoting norms and boosting the visibility of packages, I wonder if a similar approach would be viable for reviewing/collating/promoting research compendia?  Just as a compendium is generally viewed as something less than/simpler than a package, I imagine the review process would be somewhat of a lower bar; primarily a way to verify: \"can I reproduce the outputs presented here\"? and \"can I understand what's going on here and how it's organized?\"  At the same time, it could be a good venue for learning about ways to improve (i.e. \"this looks computationally intensive, you might want to talk to @wlandau about using `drake` here, or \"you might want to put the associated data on Zenodo\", etc.\r\n\r\nSo I have this vague notion that a similar on-boarding process could help build momentum/community/examples of research compendia, but there are still plenty of open questions as to how to pull this off.  Should this be done under the auspices of rOpenSci or only synergistically?  Should there be a more explicit journal connection, or a JOSS-like journal/index of compendia?  How well would this work across domains? And most importantly, is there sufficient interest (editors/reviewers) to pull this off at all?  \r\n\r\n(idea originally based on discussion with @benmarwick at a DataONE meeting last fall, summarized here: https://github.com/benmarwick/onboarding-reproducible-compendia, but could go in different directions).  \r\n\r\n\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389320375",
    "html_url": "https://github.com/ropensci/unconf18/issues/64#issuecomment-389320375",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/64",
    "id": 389320375,
    "user": {
     "login": "stefaniebutland",
     "id": 11927811,
     "avatar_url": "https://avatars0.githubusercontent.com/u/11927811?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stefaniebutland",
     "html_url": "https://github.com/stefaniebutland",
     "followers_url": "https://api.github.com/users/stefaniebutland/followers",
     "following_url": "https://api.github.com/users/stefaniebutland/following{/other_user}",
     "gists_url": "https://api.github.com/users/stefaniebutland/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stefaniebutland/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stefaniebutland/subscriptions",
     "organizations_url": "https://api.github.com/users/stefaniebutland/orgs",
     "repos_url": "https://api.github.com/users/stefaniebutland/repos",
     "events_url": "https://api.github.com/users/stefaniebutland/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stefaniebutland/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:32:18Z",
    "author_association": "COLLABORATOR",
    "body": "tagging @annakrystalli "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389324489",
    "html_url": "https://github.com/ropensci/unconf18/issues/64#issuecomment-389324489",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/64",
    "id": 389324489,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:48:52Z",
    "author_association": "NONE",
    "body": "Much of the work of the checkers project was actually in starting a [research compendium review guide](https://docs.google.com/document/d/1OYcWJUk-MiM2C1TIHB1Rn6rXoF5fHwRX-7_C12Blx8g/edit#heading=h.dyoxrtoo15mm) which might be of use. "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/64/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#64"
 },
 {
  "id": 315378179,
  "url": "https://github.com/ropensci/unconf18/issues/29",
  "title": "ROpenSci storage for package caching",
  "created_by": "mpadge",
  "created_at": "4/18/2018",
  "body": "Lots of packages need caching. When things get complicated enough, packages may need to access their own eternal data to do their internal stuff. This means caching somewhere, somehow, in a form that is reliable and available. This costs money.\r\n> Oh, I don't have any of that; okay, I can't do that package.\r\n\r\nAnd there it ends. How about considering applications to ROpenSci to (financially) support caching via some suitable provider? The [`flipper` package](https://github.com/ropenscilabs/flipper) is a case in point. This works at the moment because it only trawls the `CRAN_package_db`. We would like to extend this to all [`man/` directories](https://github.com/ropensci/unconf18/issues/26#issuecomment-382140279), all non-CRAN packages on github, and [many potential other places](https://github.com/ropenscilabs/flipper/issues/6). This is impossible without some sorta cloudy caching scheme.\r\n\r\nAny chance of ROpenSci having an application scheme whereby those with existing ROpenSci packages apply for access to a wee chunk of server space?",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382478445",
    "html_url": "https://github.com/ropensci/unconf18/issues/29#issuecomment-382478445",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/29",
    "id": 382478445,
    "user": {
     "login": "ldecicco-USGS",
     "id": 1105215,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1105215?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ldecicco-USGS",
     "html_url": "https://github.com/ldecicco-USGS",
     "followers_url": "https://api.github.com/users/ldecicco-USGS/followers",
     "following_url": "https://api.github.com/users/ldecicco-USGS/following{/other_user}",
     "gists_url": "https://api.github.com/users/ldecicco-USGS/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ldecicco-USGS/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ldecicco-USGS/subscriptions",
     "organizations_url": "https://api.github.com/users/ldecicco-USGS/orgs",
     "repos_url": "https://api.github.com/users/ldecicco-USGS/repos",
     "events_url": "https://api.github.com/users/ldecicco-USGS/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ldecicco-USGS/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T19:32:39Z",
    "author_association": "NONE",
    "body": "I was literally just crafting a proposal for a caching process for `drake`! I think it's a slightly different use-case than what you are proposing here, but maybe we can combine forces and think of all the caching use-cases and needs.  (See #30 )"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382584002",
    "html_url": "https://github.com/ropensci/unconf18/issues/29#issuecomment-382584002",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/29",
    "id": 382584002,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-19T01:54:17Z",
    "author_association": "NONE",
    "body": "When it comes to caching, I am a huge fan of @richfitz's [`storr`](https://github.com/richfitz/storr) package. It's a general key-value storr with an expanding variety of backends (\"drivers\"), including `storr_rds()` and `storr_dbi()`. Maybe a remote `storr` driver would help here? Related: http://richfitz.github.io/storr/articles/external.html."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/29/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#29"
 },
 {
  "id": 322640736,
  "url": "https://github.com/ropensci/unconf18/issues/55",
  "title": "Write answers to common questions that R users ask about R packages",
  "created_by": "maurolepore",
  "created_at": "5/13/2018",
  "body": "I propose to write answers to the commonly asked questions about R packages, targetting specifically an imaginary R user with no background. \r\n\r\nThis issue is motivated by the discussion with comments by @jennybc and @batpigandme ([thread](https://twitter.com/JennyBryan/status/951493844687663104)). A draft is [here](https://github.com/maurolepore/pkg6w). I would love some help to finish it. Major edits are welcome and I'm happy to move the article wherever.\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39973095-4717c106-56e9-11e8-8618-783ee5ff12c0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39973119-a559da42-56e9-11e8-8f32-e7902d18b65f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39973290-1c0200d2-56ec-11e8-8945-0faf34cf095c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39973088-2db1b906-56e9-11e8-8349-3304b0ba0f39.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39973347-b7bceed8-56ec-11e8-9051-db933d99fada.png)\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390100655",
    "html_url": "https://github.com/ropensci/unconf18/issues/55#issuecomment-390100655",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/55",
    "id": 390100655,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T05:43:47Z",
    "author_association": "NONE",
    "body": "Summary: Write answers to the commonly asked questions about R packages, targetting specifically an imaginary R user with no background.\r\n\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/55/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#55"
 },
 {
  "id": 323280018,
  "url": "https://github.com/ropensci/unconf18/issues/61",
  "title": "Color coded errors/warnings/messages/printed text",
  "created_by": "czeildi",
  "created_at": "5/15/2018",
  "body": "By default errors, warnings and messages are all printed red in R which can be confusing as red usually means something wrong but a message can be just informative. I think it would be nice to provide an easy way to create colored messages, like by default red for error, yellow for warning, blue for friendly information etc. With the **crayon** package this should not be too difficult.\r\n\r\nI am thinking about a way that maybe the end-user should be able to control this, or the creator of the package. We could distinguish style further based on the class of the condition.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389230677",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-389230677",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 389230677,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T16:31:34Z",
    "author_association": "NONE",
    "body": "Fun idea.\r\n\r\nPackages like `usethis` have implemented this for many of their printed outputs:\r\n\r\nhttps://github.com/r-lib/usethis/blob/bb191e95ef1b0e3aa304e7267d1d968975414450/R/style.R#L11-L13\r\n\r\nOff the top of my head I can't quite think of a way that you could modify errors, warnings and message other than `tryCatch` which seems a little awkward. Probably a better way though.\r\n\r\nI do really love coloured output though and I do think it is worth the effort. \r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389287848",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-389287848",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 389287848,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:37:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's all just standard ANSI colour codes. Even `crayon` is nothing other than simple pre- and post-pending the appropriate codes:\r\n```\r\n> col_green <- \"\\033[32m\\033[47m\" # 32m = yellow; 47m = white background\r\n> col_blue <- \"\\033[34m\\033[1m\\033[43m\" # 34m = blue; 1m = bold; 43m = Yellow BG\r\n> col0 <- \"\\033[22m\\033[39m\\033[49m\" # 22m = normal weight; 49m = normal BG\r\n> message (col_green, \"blah\", col0)\r\n> warning (col_blue, \"blah\", col0)\r\n```\r\nProbably best not to mess with `message` and `warning`, but `col_message(\"my message\", \"blue\")` would do it."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389498131",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-389498131",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 389498131,
    "user": {
     "login": "czeildi",
     "id": 9638790,
     "avatar_url": "https://avatars3.githubusercontent.com/u/9638790?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/czeildi",
     "html_url": "https://github.com/czeildi",
     "followers_url": "https://api.github.com/users/czeildi/followers",
     "following_url": "https://api.github.com/users/czeildi/following{/other_user}",
     "gists_url": "https://api.github.com/users/czeildi/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/czeildi/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/czeildi/subscriptions",
     "organizations_url": "https://api.github.com/users/czeildi/orgs",
     "repos_url": "https://api.github.com/users/czeildi/repos",
     "events_url": "https://api.github.com/users/czeildi/events{/privacy}",
     "received_events_url": "https://api.github.com/users/czeildi/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T14:56:33Z",
    "author_association": "NONE",
    "body": "@boshek thanks for the usethis reference. I can imagine a bright future for a package focusing solely on formatting messages and maybe use that in `usethis` as well. @jennybc what do you think? Especially since the style guide for error messages in the [tidyverse style guide].(http://style.tidyverse.org/error-messages.html)\r\n\r\n@mpadge yes, maybe this would be a tiny package but I see value in tiny single purpose packages. And I can imagine that even if you have one core function like `col_message` we could create shortcuts for errors, warnings etc to encourage a unified formatting\r\n\r\nFrom a development perspective I can see a way to do the formatting when creating the error/warning etc. But if possible I would welcome an option for maybe globally setting style on the user side like `option(warning_color = \"yellow\")` that could effect even errors thrown by base R code. Again, I do not know whether this is technically possible."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389546638",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-389546638",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 389546638,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T14:50:06Z",
    "author_association": "MEMBER",
    "body": "> @jennybc what do you think? Especially since the style guide for error messages in the [tidyverse style guide](http://style.tidyverse.org/error-messages.html)\r\n\r\nYes we do have a \"todo\" to extract the whole [style.R](https://github.com/r-lib/usethis/blob/master/R/style.R) file from usethis and, probably, put it in a package to facilitate making consistent user interfaces that meet the style guide. There have been multiple requests to export those functions from usethis, but we've declined, because we don't want packages to depend on usethis for that functionality.\r\n\r\nSomething I've been meaning to write down but have not is a map between, say, a function in [style.R](https://github.com/r-lib/usethis/blob/master/R/style.R) and identifiable concepts. As in, \"always apply this style to a path and that style when referring to an argument name and this other style for a string ...\". I think, right now, you have to use common sense or look around at usage elsewhere in the package, which is slow and inconsistent."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389865320",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-389865320",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 389865320,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T13:26:24Z",
    "author_association": "NONE",
    "body": "The long term plans for color styling in the tidyverse is to use [cli](https://github.com/r-lib/cli) to style the outputs, which would allow us to define a default style, but would also allow users to define a custom style that would automatically be used throughout our packages.\r\n\r\nAlso there are a few RStudio IDE issues related to automatically coloring messages / warnings / errors in red https://github.com/rstudio/rstudio/issues/2733, https://github.com/rstudio/rstudio/issues/2574, so at least there this behavior will likely change in the future."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390375996",
    "html_url": "https://github.com/ropensci/unconf18/issues/61#issuecomment-390375996",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/61",
    "id": 390375996,
    "user": {
     "login": "lcolladotor",
     "id": 2288213,
     "avatar_url": "https://avatars2.githubusercontent.com/u/2288213?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lcolladotor",
     "html_url": "https://github.com/lcolladotor",
     "followers_url": "https://api.github.com/users/lcolladotor/followers",
     "following_url": "https://api.github.com/users/lcolladotor/following{/other_user}",
     "gists_url": "https://api.github.com/users/lcolladotor/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lcolladotor/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lcolladotor/subscriptions",
     "organizations_url": "https://api.github.com/users/lcolladotor/orgs",
     "repos_url": "https://api.github.com/users/lcolladotor/repos",
     "events_url": "https://api.github.com/users/lcolladotor/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lcolladotor/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T03:46:15Z",
    "author_association": "NONE",
    "body": "Hi. I'm just curious if you've checked https://github.com/jalvesaq/colorout and if whether this solves part of the problem you describe. "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/61/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#61"
 },
 {
  "id": 323711141,
  "url": "https://github.com/ropensci/unconf18/issues/69",
  "title": "Synthetic Dataset Generation",
  "created_by": "laderast",
  "created_at": "5/16/2018",
  "body": "I know that @sckott has done the `charlatan` package, which does some basic generation of patient variables. When we teach learning with biomedical data, we often need to use synthetic datasets because we can't use datasets with protected health information (PHI). Hence, I've had to generate patient datasets, but they need to have realistic dependencies, such as patients who don't have hypertension are not being treated for hypertension.\r\n\r\nI have been generating synthetic data with Bayesian networks, which allow you to encode dependencies and structural zeroes in the data by specifying the conditional probability tables (CPTs), which is how you control the degree of association between variables. I have found that tuning these CPTs is a bit of an art.\r\n\r\nThe strength of this approach is that you can encode the degree of association of variables with outcome.\r\n\r\nWould generalizing this be of interest to people? ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389596574",
    "html_url": "https://github.com/ropensci/unconf18/issues/69#issuecomment-389596574",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/69",
    "id": 389596574,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T17:14:09Z",
    "author_association": "NONE",
    "body": "You can see the general approach here: https://laderast.github.io/cvdRiskData/"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389605545",
    "html_url": "https://github.com/ropensci/unconf18/issues/69#issuecomment-389605545",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/69",
    "id": 389605545,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T17:43:10Z",
    "author_association": "MEMBER",
    "body": "Could https://github.com/kkholst/lava help?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389615549",
    "html_url": "https://github.com/ropensci/unconf18/issues/69#issuecomment-389615549",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/69",
    "id": 389615549,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T18:15:11Z",
    "author_association": "NONE",
    "body": "@maelle interesting...I don't know much about structural equation modeling, but it seems like a nice approach, especially the graphing"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389629523",
    "html_url": "https://github.com/ropensci/unconf18/issues/69#issuecomment-389629523",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/69",
    "id": 389629523,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T19:00:16Z",
    "author_association": "MEMBER",
    "body": "I haven't used it, but I heard a talk about it and remembered thinking I'd like to try it next time I needed to simulate a dataset for sample size calculation (in epidemiology). So not much experience with it 😁 "
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/69/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#69"
 },
 {
  "id": 303505843,
  "url": "https://github.com/ropensci/unconf18/issues/11",
  "title": "Screenshot tools in R",
  "created_by": "maelle",
  "created_at": "3/8/2018",
  "body": "I've recently discovered that [`RSelenium`](https://github.com/ropensci/RSelenium) and [`seleniumPipes`](https://github.com/johndharrison/seleniumPipes) offer screenshot capabilities, including the use of CSS selectors. Their syntax might be easier to use than [`webshot`](https://cran.r-project.org/web/packages/webshot) when one needs to perform an action on the webpage before taking the screenshot. 📸 \r\n\r\nI think it could be useful to \r\n\r\n* assess and compare the screenshot functionalities of these three packages 📄 \r\n\r\n* design a new function or package using them that'd make screenshots even easier. 🔧 \r\n\r\nA good tool for screenshots would:\r\n\r\n* be well documented\r\n\r\n* have all arguments `webshot` has (CSS selection, cliprect, expand, etc.)\r\n\r\n* but would support not using JavaScript but instead the more \"intuitive\" commands one use in e.g. seleniumPipes\r\n\r\n* would support different browsers\r\n\r\n* cover both websites and Shiny apps like these three packages do\r\n\r\n* would use `magick` for image processing and would return a `magick` object instead of writing the screenshot to disk (or would at least offer this possibility).\r\n\r\nA bonus would be to also cover screencasts, cf [`rDVR`](http://johndharrison.github.io/rDVR/). 🎥 ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384268789",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-384268789",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 384268789,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T12:28:32Z",
    "author_association": "NONE",
    "body": "I don't have a ton of experience in this space, but the impression I have is Selenium is being phased out in favor of webdriver, which works across multiple browsers.\r\n\r\nThere is a long standing open issue https://github.com/wch/webshot/issues/2 about improving the interaction, maybe this project could work on a PR to provide a similar interface from seleniumPipes in webshot."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384271905",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-384271905",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 384271905,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T12:39:42Z",
    "author_association": "MEMBER",
    "body": "Ah cool, and I like that issue text 😀 "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388915137",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-388915137",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 388915137,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T18:23:18Z",
    "author_association": "MEMBER",
    "body": "@wch before I summarize or close this, in theory would you be interested in a PR for the issue mentioned above? And could it be done independently of https://github.com/wch/webshot/issues/62#issuecomment-387785132 ? Probably not? "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389267089",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-389267089",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 389267089,
    "user": {
     "login": "wch",
     "id": 86978,
     "avatar_url": "https://avatars3.githubusercontent.com/u/86978?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wch",
     "html_url": "https://github.com/wch",
     "followers_url": "https://api.github.com/users/wch/followers",
     "following_url": "https://api.github.com/users/wch/following{/other_user}",
     "gists_url": "https://api.github.com/users/wch/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wch/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wch/subscriptions",
     "organizations_url": "https://api.github.com/users/wch/orgs",
     "repos_url": "https://api.github.com/users/wch/repos",
     "events_url": "https://api.github.com/users/wch/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wch/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T18:28:22Z",
    "author_association": "NONE",
    "body": "@maelle I would consider a PR, but I personally don't think that it's a good place to put time and effort.\r\n\r\nWebshot uses CasperJS, and any interaction code would likely be built on CasperJS. CasperJS is a library specifically for PhantomJS, which in turn is no longer being developed.\r\n\r\nAs @jimhester mentioned, the [webdriver](https://github.com/rstudio/webdriver) package is a better way to do interaction. (The reason that webshot doesn't use webdriver is that webdriver has several dependencies, and there are some applications where webshot is used it's important to have few dependencies.)\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389279896",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-389279896",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 389279896,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:09:35Z",
    "author_association": "MEMBER",
    "body": "Thanks!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390113585",
    "html_url": "https://github.com/ropensci/unconf18/issues/11#issuecomment-390113585",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/11",
    "id": 390113585,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T06:57:55Z",
    "author_association": "MEMBER",
    "body": "Summary: build a package based on webdriver to produce screenshots of websites and Shiny apps for documentation/presentation purposes."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/11/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#11"
 },
 {
  "id": 308052655,
  "url": "https://github.com/ropensci/unconf18/issues/14",
  "title": "Debugging workflow",
  "created_by": "jeroen",
  "created_at": "3/23/2018",
  "body": "I would be very interested in a brief tutorial or demo by @jimhester or @kevinushey in debugging a C problem without `printf()`. Preferably on both MacOS and Windows. cc @jennybc.\r\n\r\n[<img width=\"623\" alt=\"screen shot 2018-03-23 at 3 28 06 pm\" src=\"https://user-images.githubusercontent.com/216319/37834773-d3062f76-2eae-11e8-947c-5eb8f2c46992.png\">](https://twitter.com/jimhester_/status/902164005980135426)\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/375690541",
    "html_url": "https://github.com/ropensci/unconf18/issues/14#issuecomment-375690541",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/14",
    "id": 375690541,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "3/23/2018",
    "updated_at": "2018-03-23T14:52:43Z",
    "author_association": "NONE",
    "body": "Windows is a bit of a pain, but I have managed to do it before so could probably get it working again to demo"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/375717996",
    "html_url": "https://github.com/ropensci/unconf18/issues/14#issuecomment-375717996",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/14",
    "id": 375717996,
    "user": {
     "login": "kevinushey",
     "id": 1976582,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1976582?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/kevinushey",
     "html_url": "https://github.com/kevinushey",
     "followers_url": "https://api.github.com/users/kevinushey/followers",
     "following_url": "https://api.github.com/users/kevinushey/following{/other_user}",
     "gists_url": "https://api.github.com/users/kevinushey/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/kevinushey/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/kevinushey/subscriptions",
     "organizations_url": "https://api.github.com/users/kevinushey/orgs",
     "repos_url": "https://api.github.com/users/kevinushey/repos",
     "events_url": "https://api.github.com/users/kevinushey/events{/privacy}",
     "received_events_url": "https://api.github.com/users/kevinushey/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "3/23/2018",
    "updated_at": "2018-03-23T16:13:17Z",
    "author_association": "NONE",
    "body": "I'd like to see @jimhester's debugging workflow too :-)\r\n\r\nI could try to prepare something worth showing. One of the nice things about R on Windows being built with MinGW is that the bundled `gdb.exe` seems to work well when attached to R."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/375722388",
    "html_url": "https://github.com/ropensci/unconf18/issues/14#issuecomment-375722388",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/14",
    "id": 375722388,
    "user": {
     "login": "jeroen",
     "id": 216319,
     "avatar_url": "https://avatars3.githubusercontent.com/u/216319?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jeroen",
     "html_url": "https://github.com/jeroen",
     "followers_url": "https://api.github.com/users/jeroen/followers",
     "following_url": "https://api.github.com/users/jeroen/following{/other_user}",
     "gists_url": "https://api.github.com/users/jeroen/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jeroen/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jeroen/subscriptions",
     "organizations_url": "https://api.github.com/users/jeroen/orgs",
     "repos_url": "https://api.github.com/users/jeroen/repos",
     "events_url": "https://api.github.com/users/jeroen/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jeroen/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "3/23/2018",
    "updated_at": "2018-03-23T16:26:44Z",
    "author_association": "NONE",
    "body": "You better share some of that sweet synergy @jimhester :)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/380625112",
    "html_url": "https://github.com/ropensci/unconf18/issues/14#issuecomment-380625112",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/14",
    "id": 380625112,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/11/2018",
    "updated_at": "2018-04-11T23:17:42Z",
    "author_association": "NONE",
    "body": "Not to spoil anything too much ;), but does the workflow have a call to `R -d gdb` somewhere along the way?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389033221",
    "html_url": "https://github.com/ropensci/unconf18/issues/14#issuecomment-389033221",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/14",
    "id": 389033221,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-15T03:41:33Z",
    "author_association": "NONE",
    "body": "I would like to see @jimhester's debugging magic as well"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/14/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#14"
 },
 {
  "id": 323033020,
  "url": "https://github.com/ropensci/unconf18/issues/58",
  "title": "A single interface to navigate the documentation of multiple packages",
  "created_by": "maurolepore",
  "created_at": "5/14/2018",
  "body": "(Relates to #48, #25.)\r\n\r\nHow can you search all funcions, datasets and help files across multiple packages within a GitHub organization (e.g. tidyverse, rOpenSci)?\r\n\r\nYou may use https://www.rdocumentation.org/ or the search field of a GitHub organization; but I think those tools are too general. I propose to build a small package to create a searchable and clickable table of all functions or datasets by package -- including any number of packages within a GitHub organization. A good place to host such a table is on the website of the relevant GitHub organization. \r\n\r\n[Here is an example](https://forestgeo.github.io/fgeo/articles/fgeo.html#functions), which I built to solve my problem at the time. We could make the code more general and package it up.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390099876",
    "html_url": "https://github.com/ropensci/unconf18/issues/58#issuecomment-390099876",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/58",
    "id": 390099876,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T05:38:08Z",
    "author_association": "NONE",
    "body": "Summary: Build a small package to create a searchable and clickable table of all functions or datasets by package -- including any number of packages within a GitHub organization."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390110388",
    "html_url": "https://github.com/ropensci/unconf18/issues/58#issuecomment-390110388",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/58",
    "id": 390110388,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T06:42:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cross link to #25, which is a call for effectively the same thing. The [`flipper` package](https://github.com/ropenscilabs/flipper) has a lot of the necessary infrastructure for this."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390371440",
    "html_url": "https://github.com/ropensci/unconf18/issues/58#issuecomment-390371440",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/58",
    "id": 390371440,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T02:16:02Z",
    "author_association": "NONE",
    "body": "Summary: This issue seems to be largely nested in #25. @mpadge, maybe we should discuss the overlap in person? Feel free to close."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/58/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#58"
 },
 {
  "id": 323595994,
  "url": "https://github.com/ropensci/unconf18/issues/65",
  "title": "Extensions to R / RStudio's autocompletion system",
  "created_by": "jimhester",
  "created_at": "5/16/2018",
  "body": "This was proposed by @kevinushey for last year's unconf, but he unfortunately Kevin had to miss the event last year. (https://github.com/ropensci/unconf17/issues/52)\r\n\r\nIn the meantime I have started a proof of concept package https://github.com/jimhester/completeme, that implements some of what he proposed, but it would be great to improve the RStudio IDE integration and discuss ways to make this more full featured and robust, both for terminal completions, things like https://github.com/REditorSupport/languageserver and in the IDE.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389549695",
    "html_url": "https://github.com/ropensci/unconf18/issues/65#issuecomment-389549695",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/65",
    "id": 389549695,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/16/2018",
    "updated_at": "2018-05-16T14:57:33Z",
    "author_association": "MEMBER",
    "body": "I'd love to see this, as you well know @jimhester. readxl was an early target of your explorations (unmerged PR: https://github.com/tidyverse/readxl/pull/320).\r\n\r\nFor context, this would be a nice way to expose, say, a set of example inputs in a package. In the world of readr and readxl, you could make it easy for users to get the possible filenames in front of their eyeballs and then pick one.\r\n\r\nWhile I'm wishing ... it would be interesting to see if the developer interface could be more like `match.arg()`, i.e. your wishes about auto-completion are expressed in the target function itself vs. elsewhere in the package."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/65/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#65"
 },
 {
  "id": 317426085,
  "url": "https://github.com/ropensci/unconf18/issues/34",
  "title": "\"Safety Profiler\" for User package libraries",
  "created_by": "hrbrmstr",
  "created_at": "4/24/2018",
  "body": "We embark on unconf 2018 at an appro time: R 3.5.0 launches and lots of folks are feeling the x.y package upgrade/sidegrade process.\r\n\r\nHowever, we could build a profiler/auditor — much like the emergent `node audit` — which would let folks know just how lagging they are and what potential safety issues they may be facing as a result.\r\n\r\nThis could take a bit of work and would also require delving into packages that include C[++] libraries with them.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384122567",
    "html_url": "https://github.com/ropensci/unconf18/issues/34#issuecomment-384122567",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/34",
    "id": 384122567,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:30:47Z",
    "author_association": "NONE",
    "body": "One possibility is to build this as a wrapper/plugin for [**goodpractice**](https://github.com/MangoTheCat/goodpractice).  At last year's unconference Gabor created a plug-in structure and Hannah Frick has been working on extending and [documenting](https://mangothecat.github.io/goodpractice/articles/goodpractice.html) it recently.  We're likely going to have several plug-in checks specific for rOpenSci.  A set of security-specific would be a great addition to those.  "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384124962",
    "html_url": "https://github.com/ropensci/unconf18/issues/34#issuecomment-384124962",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/34",
    "id": 384124962,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:47:47Z",
    "author_association": "NONE",
    "body": "I think it's also good to just articulate what kinds of things this can focus on. For example what kinds of user inputs are being taken and are they being sanitized, when does that matter and when does that not matter.\r\nSomewhere the deidentification issue should come in too."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/34/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#34"
 },
 {
  "id": 317453081,
  "url": "https://github.com/ropensci/unconf18/issues/39",
  "title": "Review of literature for API mocking and testing",
  "created_by": "noamross",
  "created_at": "4/24/2018",
  "body": "A pretty frequent topic of conversation in rOpenSci circle is approaches to [testing packages that call Web APIs](https://discuss.ropensci.org/t/best-practices-for-testing-api-packages/460).  I think this topic could use a \"review of literature\" - a systematic look at the different packages for this in the ecosystem, how their interfaces differ, the advantages and disadvantages of each, missing functionalities to be developed, and best practices/design patterns for testing packages.\r\n\r\nOutputs for this might just be a blog post or vignette, or a series of issues and PRs across the package ecosystem.\r\n\r\nNotably @sckott is nearing release of [**vcr**](https://github.com/ropensci/vcr), it could host the vignette and this review might be good for making sure it covers the use-cases that we explore.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384155929",
    "html_url": "https://github.com/ropensci/unconf18/issues/39#issuecomment-384155929",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/39",
    "id": 384155929,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:16:34Z",
    "author_association": "MEMBER",
    "body": "& just started book https://github.com/ropensci/http-testing-book (not to be published, just a book form pile of words)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384158078",
    "html_url": "https://github.com/ropensci/unconf18/issues/39#issuecomment-384158078",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/39",
    "id": 384158078,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:35:16Z",
    "author_association": "MEMBER",
    "body": "> not to be published\r\n\r\nhey, who knows"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385848790",
    "html_url": "https://github.com/ropensci/unconf18/issues/39#issuecomment-385848790",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/39",
    "id": 385848790,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-02T02:42:42Z",
    "author_association": "NONE",
    "body": "This is for C++, but covers some of the broad issues.\r\nhttps://github.com/google/googletest/blob/master/googlemock/docs/ForDummies.md"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/39/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#39"
 },
 {
  "id": 317446320,
  "url": "https://github.com/ropensci/unconf18/issues/36",
  "title": "Compiling R logic to the browser",
  "created_by": "noamross",
  "created_at": "4/24/2018",
  "body": "_(A rambling post that might converge into an actual unconf project)_\r\n\r\nI've become intrigued lately with the applications of WebAssembly, the latest approach to running compiled code in the browser.  I wrote up a [proof-of-concept](https://noamross.github.io/wassa/inst/doc/adventures-in-webassembly.html) of how one could run the same C++ code via Rcpp or in an htmlwidget.  I think some exploration of use cases and design patterns of shared R/browser implementations of algorithms in this way could make a good unconf project. \r\n\r\nIt's a huge project to try to port R runtime to the browser this way, but there are a number of R packages that generate C(++) code for fast model execution that could then be compiled to WebAssembly in the browser:\r\n\r\n-  [NIMBLE](https://r-nimble.org/) compiles a sub-set of R code into C++ code that uses the Eigen library.\r\n-  [odin](https://github.com/mrc-ide/odin) by @richfitz generates C++ code from ODE systems defined in R\r\n-  [Stan](http://mc-stan.org/) models are compiled to C++ before being compiled to binary. \r\n-  [pomp](https://kingaa.github.io/pomp/) models use C templates with snippets provided by the model-builder.\r\n\r\nFor any of these, one could imagine fitting and optimizing models in R, then porting them to the browser to power pages/apps built on simulation or prediction from those models.  For instance, I could use **odin** to fit a set of ODEs to data, and then port the fit odin model to an htmlwidget that lets the user simulate and visualize those ODE systems, with the option of changing some parameters or initial conditions.  Getting a Stan model to run in the browser in an htmlwidget seems super interesting, too - it would be like **shinystan** without Shiny.  (One of the Stan devs has said they would be interested in helping with this.)\r\n\r\nAlternatively, keeping the concept of _compiling to the browser_ but in a very different way, we could compile **dplyr** code to the browser by using **dbplyr** to create SQL from R expressions, then sending this SQL to be executed by the browser via a JavaScript SQL implementation such as [alasql](http://alasql.org/).  One could create \"live\" htmlwidgets this way: they could query a remote data source, transform the data, and then feed it to an output like a plot.ly graph or a DataTable, all in the browser with no server back-end. \r\n\r\nFinally, a totally different idea suggested to me recently was using this for distributed computing.  Could one create htmlwidgets that run some code in the user's browser and send results back home? (For instance, running one MCMC chain of a Stan model?)\r\n\r\nThoughts?",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384133562",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-384133562",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 384133562,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T01:37:07Z",
    "author_association": "NONE",
    "body": "Just wanted to add that greta can compile a large subset of R code (even if it doesn't have stochastic elements) to a tensorflow graph, which could be run in-browser with [tensorflow.js](https://js.tensorflow.org/) (or [remotely/on GPUs](https://github.com/rstudio/cloudml) or [on a smartphone/tablet](https://www.tensorflow.org/mobile/tflite/))\r\n\r\nI've also considered breaking that functionality out into a separate package that doesn't do statistical modelling, and/or providing other backends than tensorflow (even C++?) "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384135116",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-384135116",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 384135116,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T01:47:57Z",
    "author_association": "NONE",
    "body": "Indeed, I sort of left out tensorflow (and keras) because there's already so much going on with them in this paradigm via tensorflow.js (and keras.js).  But a neat idea might be something like a **greta**-specific widget that executes via tensorflow.js, sort of like **shinystan**."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384136354",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-384136354",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 384136354,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T01:55:57Z",
    "author_association": "NONE",
    "body": "Yeah, that would be ace! If we go down that route, it might be worth checking in with JJ, in case he's planning tensorflow js integration as part of the RStudio tensorflow suite.\r\n\r\n@michaelquinn32 might be interested in something tensorflowy like this? "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384376677",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-384376677",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 384376677,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T17:53:34Z",
    "author_association": "NONE",
    "body": "Add it to the list!\r\n\r\nSorry, but I don't have a sense of priority yet, and I REALLY need to read the greta internals to see where additions will be reasonable.\r\n\r\nFrom the apps side, there's also all of the tensorflow serving work to think about. @javierluraschi has been doing a bunch of awesome work on that too.\r\nhttps://github.com/rstudio/tfdeploy\r\n\r\nI'm not sure about evaluating the tradeoff between doing all of it in app vs treating the app as a client. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385133246",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-385133246",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 385133246,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/27/2018",
    "updated_at": "2018-04-28T02:28:31Z",
    "author_association": "NONE",
    "body": "This list might be handy: https://github.com/terrytangyuan/ctv-model-deployment"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385284871",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-385284871",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 385284871,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T21:52:40Z",
    "author_association": "NONE",
    "body": "Despite the potential of tensorflow.js, I'm still pretty interested in the other pipelines I describe above, (WebAssembly and alasql), especially from the perspective of leveraging C/SQL infrastructure already developed for R so as to make it available browser-side.  I suggest we discuss ideas for both here, and we might split these out into different options during the issue-consolidation phase closer to the unconf."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385287101",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-385287101",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 385287101,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T22:31:53Z",
    "author_association": "NONE",
    "body": "Yep, good idea! "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387897225",
    "html_url": "https://github.com/ropensci/unconf18/issues/36#issuecomment-387897225",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/36",
    "id": 387897225,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T22:43:36Z",
    "author_association": "NONE",
    "body": "Not a lot of other conversations here, but I basically see three current projects described:\r\n\r\n-  **An htmlwidget that does fetching ETL and display from remote data sources using dplyr SQL translation and `alasql`**:  This seems very doable and quite practical.\r\n-  **Compiling a Stan model to WebAssembly**:  Seems like a good proof-of-concept that could be done if someone knows their way around Stan C++, but potentially a bear otherwise.\r\n- **Deploying a greta model via tensorflow.js**:  Obviously we have the people for it :), if this is what Nick and Mike end up interested in.\r\n\r\nI'm still sort of interested in other out-of-the-box WebAssembly ideas."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/36/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#36"
 },
 {
  "id": 315612961,
  "url": "https://github.com/ropensci/unconf18/issues/30",
  "title": "Caching for drake",
  "created_by": "ldecicco-USGS",
  "created_at": "4/18/2018",
  "body": "Data scientists are expert at mining large volumes of data to produce insights, predict outcomes, and/or create visuals quickly and methodically.  `drake` (https://github.com/ropensci/drake) has solved a lot of problems in the data-science-pipeline, but one thing we still struggle with is how to effectively collaborate on a large-scale project, without each contributor needing to run all of the workflow, or separating the workflows into many dis-jointed smaller workflows. In some large-scale projects, this is just not feasible.\r\n\r\nIt would be awesome if a wide community of R developers could come together and try to create a way for `drake` to have a collaborative caching feature. \r\n\r\nMy group had set up a wrapper package for `remake` (`drake`'s predecessor) that allows tiny indicator files to be pushed up to github. These indicator files let the user know that the target was complete and the data was pushed up to some common caching location.  The next user would do an upstream pull request from Github, pull down the indicator file. The new user would not need to re-run a target that some other collaborator had already run, but instead pull the data down (if it's needed) rather create it from the workflow. It got a bit awkward because we needed 2-3 remake targets to accomplish this, and that tripped up our \"non-power-user\" collaborators.\r\n\r\nI'd propose the first step would be to develop caching workflow to Google Drive (using the `googledrive` package). Once the process was flushed out with using Google Drive, it could be more easily expanded to other data storage options (AWS using the `aws.s3` package for example). \r\n\r\nMy gut says this might need to be a wrapper or companion package to `drake` (to keep the dependent packages minimized), but not sure. @wlandau and other `drake` experts: I would looove to hear any feedback you have on this idea. If in fact this issues is not-an-issue (ie...`drake` can already handle caching and I just missed it...totally possible...), then we could morph this issues into a group that helps create more content for a `drake` blogdown/bookdown book! \r\n\r\nThe wrapper package for `remake` is here:\r\nhttps://github.com/USGS-R/scipiper\r\n\r\n#12 is another `drake`-based project. \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382582939",
    "html_url": "https://github.com/ropensci/unconf18/issues/30#issuecomment-382582939",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/30",
    "id": 382582939,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-19T01:47:29Z",
    "author_association": "NONE",
    "body": "I would be really stoked to have help on this! Remote/collaborative storage has been a major sticking point (see https://github.com/ropensci/drake/issues/198,  https://github.com/richfitz/storr/issues/55, and especially https://github.com/richfitz/storr/issues/61). I looked at [`scipiper`](https://github.com/USGS-R/scipiper), and I think a package like that could work for `drake`. I also think we might consider options that do not require changing the workflow plan. Ideally, we should be able to collaborate on Google Drive without adding targets or changing their commands.\r\n\r\nA bit of background: `drake` uses @richfitz's [`storr`](https://github.com/richfitz/storr) package for caching, usually in the local file system. By default, `make()` creates a [`storr_rds()`](http://richfitz.github.io/storr/reference/storr_rds.html) cache in a hidden `.drake/` directory to store the targets. You can use other `storr` caches such as `storr_environment()` and `storr_dbi()`, but these are not thread safe (e.g. for `make(jobs = 8)`), and the `DBI` option requires a database connection that does not carry over to remote jobs (e.g. `make(parallelism = \"future\")` on HPC clusters). The [guide to customized storage](https://ropensci.github.io/drake/articles/storage.html) has more details.\r\n\r\nAs I understand it, the current practice for sharing results is to upload everything and hope that files in the `.drake/` cache does not get corrupted along the way. Services like Dropbox create disruptive backup files like the ones @kendonB [mentioned here](https://github.com/ropensci/drake/issues/198#issuecomment-362185998). For `drake`'s default cache (`storr_rds(mangle_key = TRUE)`), it should be straightforward to clear out those extra files (https://github.com/richfitz/storr/issues/55#issuecomment-374230112). I just have not gotten around to building this into [`rescue_cache()`](https://ropensci.github.io/drake/reference/rescue_cache.html). @richfitz mentioned that `storr` might take care of some of the cleaning too (https://github.com/richfitz/storr/issues/55#issuecomment-367837646).\r\n\r\nAt this point, I think I should touch on some similar ideas / features that might help.\r\n\r\n## drake hooks\r\n\r\nThe `make()` function has a `hook` argument, and you can use it to wrap things around the code that actually processes the target.\r\n\r\n```r\r\ncustom_hook <- function(code){\r\n  force(code) # Build and store the target.\r\n  sync_with_google_drive()\r\n}\r\nmake(your_plan, hook = custom_hook)\r\n```\r\n\r\nBut I have not actually used this feature very much. To be honest, I designed it as a way to silence/redirect output, so we would need to do some internal refactoring on `drake` itself.\r\n\r\n## A googledrive driver for storr?\r\n\r\nI think it would be fantastic if `storr` supported an [RDS-like](http://richfitz.github.io/storr/reference/storr_rds.html) driver powered by `googledrive`.\r\n\r\n```r\r\nlibrary(drake)\r\nlibrary(storr)\r\nplan <- drake_plan(...)\r\ncache <- storr_googledrive(\"https://drive.google.com/drive/my-drive/stuff/.drake\")\r\nmake(plan, cache = cache)\r\n```\r\n\r\nBut from https://github.com/richfitz/storr/issues/61, that may be asking too much.\r\n\r\n## Target logs: fingerprinting your pipeline\r\n\r\nAs for communication, @noamross had the bright idea of writing a log file to fingerprint the cache. If you commit it to GitHub, the changelog will show the targets that changed on each commit.\r\n\r\n```r\r\nlibrary(drake)\r\nload_basic_example()\r\nmake(my_plan, cache_log_file = \"log.txt\", verbose = FALSE)\r\nhead(read.table(\"log.txt\", header = TRUE))\r\n#>               hash   type                   name\r\n#> 1 de0922cd962af6e2 target coef_regression1_large\r\n#> 2 331afc4b2b42b57f target coef_regression1_small\r\n#> 3 def5102800992696 target coef_regression2_large\r\n#> 4 2e52655d4d9ddb47 target coef_regression2_small\r\n#> 5 478684feec29a859 import             data.frame\r\n#> 6 e3bf796806094874 import                   knit\r\n```\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382864213",
    "html_url": "https://github.com/ropensci/unconf18/issues/30#issuecomment-382864213",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/30",
    "id": 382864213,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/19/2018",
    "updated_at": "2018-04-19T20:06:14Z",
    "author_association": "NONE",
    "body": "Update: if non-custom `drake` caches get corrupted when you upload them to Google Drive or Dropbox or the like, you can try to fix the problem with `drake_gc()` (development `drake` only). Related:\r\n\r\n- [The issue explained](https://github.com/ropensci/drake/blob/master/vignettes/caution.Rmd#projects-hosted-on-dropbox-and-similar-platforms)\r\n- https://github.com/ropensci/drake/issues/198\r\n- https://github.com/ropensci/drake/issues/322\r\n- https://github.com/richfitz/storr/issues/55\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/30/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#30"
 },
 {
  "id": 323311606,
  "url": "https://github.com/ropensci/unconf18/issues/63",
  "title": "Connecting R educators \"in the wild\"",
  "created_by": "apreshill",
  "created_at": "5/15/2018",
  "body": "I know it is late to propose a new project, so consider this an invite to talk with me more about this idea at unconf if it resonates with you!\r\n\r\n**Problem:** \r\nPeople who teach R create awesome R markdown, blogdown, and bookdown materials for teaching, most of which are stored on GitHub. But, they can be hard to find (everyone knows @STAT545-UBC, but discoverability of even these materials is low for people not fully steeped in #rstats). The [tidyverse site](https://www.tidyverse.org/learn/) has some links to courses, but the materials are variable: some are PDF syllabi, some are full repos, some are formal university course listings. \r\n\r\n**Idea:** \r\nInspired by @batpigandme's idea (#48), I've been thinking of a website to aggregate existing educational materials from GitHub. Ideally, one could search GitHub for repos that include words in the title/tag/README like \"curriculum\", \"course\", \"workshop\", \"bootcamp\", and tag them as such (I want to catch repos like @hadley's Data Challenge Labs: https://github.com/dcl-2017-04/curriculum). Other items on my \"would be nice\" list:\r\n\r\n- Tag with blogdown, bookdown, or R markdown site\r\n- Tag with type of license, if there is one, re: reuse/attribution/etc.\r\n- Provide a \"tidyverse\" percentage: something like, of the packages loaded in the repo, what percent are in the tidyverse ecosystem?\r\n- Provide way to see \"last updated\" easily, and perhaps in navigable interface allow users to sort by this\r\n- Some kind of topic tagging: like statistics, machine learning, data science, data visualization, natural language processing, etc.\r\n- Perhaps a level tag, like undergrad, grad, K-12, etc.\r\n\r\nSelfishly, I would find this type of resource very useful! But past-me would have found it invaluable. I frequently see professors in my own computer science group using Matlab for example because they don't know how to start teaching material they know using a language they don't know. It would be great to be able to forward them to [courses on machine learning using R](https://github.com/m-clark/introduction-to-machine-learning), for example. Just overheard yesterday a student lamenting that all course materials for ML are in Matlab, the TA only knows python, and she wants to use R, so I think this could also help students. \r\n\r\nMore broadly, I would love to establish an *educator's collaborative* around teaching R or with R. My university created [one](https://www.ohsu.edu/xd/education/schools/school-of-medicine/education/educators-collaborative/), and they worded it so nicely I'm just going to plagiarize:\r\n> \"The Educators' Collaborative (EC) is a community of practice for people who are interested in education, including direct teaching, innovation, scholarship, curriculum design and mentoring. A community of practice is a group of skilled practitioners who interact regularly to learn from and with one another for the purpose of professional and personal development. Through in-person or online engagement, they create a shared understanding of purpose and develop communal resources to enhance their respective practices. (Lave & Wenger, 1991; Wenger, 1998).\"\r\n\r\nI have increasingly been working on team-taught courses and see real value in collaborating on curricula with other R educators. But not everyone has this luxury- it would be great to provide an organization to support innovative R education efforts.\r\n\r\nTagging folks that @stefaniebutland tagged on the Slack channel for interest/involvement in education:\r\n@jennybc @laderast @hadley @jtr13 @czeildi @elinw @seankross @aurielfournier (I can't find Jenny Draper on GitHub, so I'm sorry for not tagging here!)",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389255445",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389255445",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389255445,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T17:50:46Z",
    "author_association": "MEMBER",
    "body": "I think this is a brilliant idea.  \r\n\r\n- I currently think of https://community.rstudio.com/c/teaching as my go-to place for an R-based teaching community, would have obvious synergy with such an EC, but doesn't meet the goal of an place to find course material.\r\n\r\n- A possible venue for collating course material might be new https://jose.theoj.org/about ? (following the JOSS model around content on GitHub).  Not sure if that fits the bill or would be too constrained.  \r\n\r\n- Another related effort is maybe the R4DS community https://medium.com/@kierisi/r4ds-the-next-iteration-d51e0a1b0b82, with a very active slack community, but again more forum that catalog of resources. \r\n\r\n- The Carpentries lessons are well-recognized but more narrow example of community + curated workshop material, e.g. http://www.datacarpentry.org/workshops/.    \r\n\r\n\r\nI do think the whole issue of cataloging resources is really hard though.  As you point out, there's such a mix of content, even on a very short and curated collection:\r\n\r\n> The tidyverse site has some links to courses, but the materials are variable: some are PDF syllabi, some are full repos, some are formal university course listings.\r\n\r\nPersonally, I've found examples for whole-semester material, like @jennybc 's 545 and @hadley's data challenge labs, immensely influential to my own approach, because it is nice to see how the parts fit together, in what order, and guided by what philosophy (@hadley's analogies with learning baseball still stick with me).  But then I'm also trying to teach a semester-length course, so that's my bias as well (my blogdown-based site is https://espm-157.carlboettiger.info/  )\r\n\r\nI know @lwasser and @coatless have both thought a lot about the issue of cataloging resources in this space, so tagging them here.  \r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389265941",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389265941",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389265941,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:56:23Z",
    "author_association": "NONE",
    "body": "Neato. Another project I am on (CTSA data to health, CD2H) is trying to do this in terms of data science competencies and finding paths through different courses, as well as assessing any possible gaps. As @cboettig mentioned, it's a very difficult process, and the question is how to make it dynamic, since compentencies change. I'd love to talk to everyone. \r\n\r\n(edit: I'd like to talk with everyone - but I removed the description of the project. don't want to dominate this conversation)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389305442",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389305442",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389305442,
    "user": {
     "login": "apreshill",
     "id": 12160301,
     "avatar_url": "https://avatars3.githubusercontent.com/u/12160301?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/apreshill",
     "html_url": "https://github.com/apreshill",
     "followers_url": "https://api.github.com/users/apreshill/followers",
     "following_url": "https://api.github.com/users/apreshill/following{/other_user}",
     "gists_url": "https://api.github.com/users/apreshill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/apreshill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/apreshill/subscriptions",
     "organizations_url": "https://api.github.com/users/apreshill/orgs",
     "repos_url": "https://api.github.com/users/apreshill/repos",
     "events_url": "https://api.github.com/users/apreshill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/apreshill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:03:57Z",
    "author_association": "NONE",
    "body": "@cboettig Thank you, yes- my main motivation is to collate long-form materials, of which your ESPM course is currently living in my unwieldy bookmarks folder of inspiring courses! And I agree- seeing others' whole semester material has shaped so much of how and what I teach. I think having community discussion forums like R4DS and https://community.rstudio.com/c/teaching are also invaluable, but there is a gap to fill. The Carpentries have great content resources, but they tend to be short-form. I do think what is lacking is field-tested quarter/semester-long materials with integrative syllabi, labs, homeworks, grading rubrics, datasets, good in class activities, project ideas, etc. (@jennybc's @STAT545-UBC being probably the main exception). As you know, a lot of blood/sweat/tears goes into designing curricula, especially the flow and sequencing for whole courses, with important differences compared to short-form tutorials or code-throughs (which I find really helpful as a learner and teacher, and @batpigandme's #48 may improve discoverability of those materials). \r\n\r\nSo you got me thinking more about the elements of a [community of practice](http://wenger-trayner.com/introduction-to-communities-of-practice/):\r\n\r\n- **The domain:**\r\n   - R\r\n- **The community**:\r\n   - Definition: *In pursuing their interest in their domain, members engage in joint activities and discussions, help each other, and share information. They build relationships that enable them to learn from each other; they care about their standing with each other.*\r\n   - Current communities: \r\n      - R4DS \r\n      - https://community.rstudio.com/c/teaching\r\n      - \"birds of a feather\" groups at @Rstudio conf for example\r\n- **The practice:** \r\n    - Definition: *Members of a community of practice are practitioners. They develop a shared repertoire of resources: experiences, stories, tools, ways of addressing recurring problems—in short a shared practice.*\r\n   - Current education + R-based practices: \r\n      - Carpentries instructors perhaps? But this is for workshop formats; need one for \"whole course\" practitioners.\r\n       - Some university departments may have this, but you need a quorum. There are lots of faculty who are little R islands in their department/university (this is me!).\r\n\r\nSo, I think we have the first two, but the third element of practice specific to education is the missing piece. In the short-term, having some kind of navigable course repository would allow members to reuse assets- which would be a great start 🎆 \r\n\r\nIn the long-term, an educational collaborative could aim to:\r\n- Problem solve best practices for teaching certain topics/domains/tools\r\n- Seek experience from people who have already thought about this\r\n- Help other educators build an argument for funding to develop and teach new courses at their institution \r\n- Grow confidence for new educators \r\n- Map knowledge and identify gaps (this seems in line with @laderast's C2DH project, although probably a higher order goal once a community of practice is in full swing)\r\n\r\nI have not heard about The Journal of Open Source Education, thank you for the link!\r\n\r\nAlso tagging my R education partners in crime: @ismayc @andrewpbray @rudeboybert @DJAnderson07, plus @kierisi and @jthomasmock to join in convo"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389322099",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389322099",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389322099,
    "user": {
     "login": "coatless",
     "id": 833642,
     "avatar_url": "https://avatars1.githubusercontent.com/u/833642?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/coatless",
     "html_url": "https://github.com/coatless",
     "followers_url": "https://api.github.com/users/coatless/followers",
     "following_url": "https://api.github.com/users/coatless/following{/other_user}",
     "gists_url": "https://api.github.com/users/coatless/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/coatless/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/coatless/subscriptions",
     "organizations_url": "https://api.github.com/users/coatless/orgs",
     "repos_url": "https://api.github.com/users/coatless/repos",
     "events_url": "https://api.github.com/users/coatless/events{/privacy}",
     "received_events_url": "https://api.github.com/users/coatless/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:38:56Z",
    "author_association": "NONE",
    "body": "@cboettig thanks for the ping. I'm more than happy to join a collective like this. \r\n\r\nOn Friday, May 18th, 2018, we'll start to open source some of the drawings used in STAT 385 @ UIUC this term in:\r\n\r\nhttps://github.com/coatless/draw-r. \r\n\r\n**Note:** The drawings have largely been done in _Omnigraffle_ or _Keynote_ ( cc'ing my inspiration / person I blame for my fascination in diagramming @hrbrmstr ). We're looking into the ability to generate drawings of _R_ objects dynamically via base or ggplot2 graphics.\r\n\r\nOutside of that, we'll be working this summer on releasing an _R_ textbook covering \"Statistical Programming Methods\" or \"Data Science Programming Methods\" depending on the zeitgeist spirit:\r\n\r\nhttps://github.com/coatless/spm\r\n\r\nIn the interim, consider some of the other education tech that we've built:\r\n\r\n- [`assignr`](https://github.com/coatless/assignr):  Tools for Educators Writing Assignments in RMarkdown (joint w/ @daviddalpiaz)\r\n- [`errorist`](https://github.com/coatless/errorist):  Automatic Error and Warning Search\r\n- [`dropcli`](https://github.com/coatless/dropcli): Dropbox CLI for working on a Linux environment within R.\r\n    - Allows for the live distribution of code via RStudio Server based on [Michael Levy's Dropbox Idea at UseR 2016!](https://channel9.msdn.com/Events/useR-international-R-User-conference/useR2016/Teaching-R-to-200-people-in-a-week#time=07m20s).\r\n    - We'll likely move over to an embedded code environment in lecture slides in Spring 2019.\r\n- [`rcpp-api`](https://github.com/coatless/rcpp-api): Unofficial Rcpp API Documentation (Lots of Examples!)\r\n- `coursetools`: Administrative Tools to Manage Online Courses (GitHub + Blackboard)\r\n- `autograder`: Automatically Grade Models ([screenshot](https://twitter.com/axiomsofxyz/status/979775789192437761))\r\n\r\nThe later two are somewhat restricted to UIUC personnel at the moment."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389327604",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389327604",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389327604,
    "user": {
     "login": "datalorax",
     "id": 10944136,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10944136?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/datalorax",
     "html_url": "https://github.com/datalorax",
     "followers_url": "https://api.github.com/users/datalorax/followers",
     "following_url": "https://api.github.com/users/datalorax/following{/other_user}",
     "gists_url": "https://api.github.com/users/datalorax/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/datalorax/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/datalorax/subscriptions",
     "organizations_url": "https://api.github.com/users/datalorax/orgs",
     "repos_url": "https://api.github.com/users/datalorax/repos",
     "events_url": "https://api.github.com/users/datalorax/events{/privacy}",
     "received_events_url": "https://api.github.com/users/datalorax/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T22:01:39Z",
    "author_association": "NONE",
    "body": "I love this idea! (and thanks for including me in the convo!) Just a few thoughts:\r\n\r\nPart of what I think can be difficult, both as a learner and as an instructor, is just the sometimes overwhelming amount of stuff out there. There are lots of good resources, but navigating what to teach (or learn) and when can be difficult. I would imagine a collaborative like this sort of serving as a curator of open-source teaching materials, and the wisdom of the community could help inform the topic sequence.\r\n\r\nIn terms of the content itself, I wonder if it might make sense to have people/organizations actually submit their materials to a repo for inclusion, rather than actively gathering existing materials (although gathering known materials of high quality would be a great starting point). Then, they could potentially even go through some sort of peer review process, which would (potentially) not only help the community (through the addition of the new content) but also the instructor (by getting feedback on their materials).\r\n\r\nI also tend to think a lot about the match between the learner and the content. This may be a few steps down the line, but I wonder if, after the content was curated, it might be worth thinking about developing some sort of survey or even pre-tests that would ultimately recommend where to start, i.e., - what level of programming background do you/your students have? How much experience do you/your students have with statistics? This could potentially help align learner needs with content that is not too easy/difficult.\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389352331",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389352331",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389352331,
    "user": {
     "login": "kierisi",
     "id": 23085445,
     "avatar_url": "https://avatars3.githubusercontent.com/u/23085445?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/kierisi",
     "html_url": "https://github.com/kierisi",
     "followers_url": "https://api.github.com/users/kierisi/followers",
     "following_url": "https://api.github.com/users/kierisi/following{/other_user}",
     "gists_url": "https://api.github.com/users/kierisi/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/kierisi/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/kierisi/subscriptions",
     "organizations_url": "https://api.github.com/users/kierisi/orgs",
     "repos_url": "https://api.github.com/users/kierisi/repos",
     "events_url": "https://api.github.com/users/kierisi/events{/privacy}",
     "received_events_url": "https://api.github.com/users/kierisi/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-16T00:03:20Z",
    "author_association": "NONE",
    "body": "hey y'all, I'm a former high school science teacher with a lot of opinions about how we can integrate best practices from K-12 education as a means of equipping learners with the skills and confidence needed to teach themselves, with the ultimate goal being the (further) democratization of data science education (with R). \r\n\r\nalways happy to chat - this is an area I'm currently researching and actively beginning to develop resources in, many which will begin to find their way back into the R4DS online learning community (which I'm also always happy to talk about!)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389353076",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-389353076",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 389353076,
    "user": {
     "login": "jthomasmock",
     "id": 29187501,
     "avatar_url": "https://avatars2.githubusercontent.com/u/29187501?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jthomasmock",
     "html_url": "https://github.com/jthomasmock",
     "followers_url": "https://api.github.com/users/jthomasmock/followers",
     "following_url": "https://api.github.com/users/jthomasmock/following{/other_user}",
     "gists_url": "https://api.github.com/users/jthomasmock/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jthomasmock/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jthomasmock/subscriptions",
     "organizations_url": "https://api.github.com/users/jthomasmock/orgs",
     "repos_url": "https://api.github.com/users/jthomasmock/repos",
     "events_url": "https://api.github.com/users/jthomasmock/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jthomasmock/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-16T00:07:24Z",
    "author_association": "NONE",
    "body": "Honored and many thanks for including me in this conversation! \r\n\r\nI think as @DJAnderson07 mentioned, it is hard as a learner to sift through the blogs, Quora posts, SO answers, various package vignettes and figure out an efficient learning path. A curated, organized list of proper coursework would be huge for self-directed learners, many of whom may not have access to Data Science at the college level or even MOOCs such as Coursera, DataCamp, Udacity, etc.\r\n\r\nAll that being said, I lack the teaching expertise of likely everyone in this group, but am happy to contribute by reviewing or gathering material, and generally acting as a student advocate.  Excited to see what comes of this!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390301065",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-390301065",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 390301065,
    "user": {
     "login": "lwasser",
     "id": 7649194,
     "avatar_url": "https://avatars0.githubusercontent.com/u/7649194?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lwasser",
     "html_url": "https://github.com/lwasser",
     "followers_url": "https://api.github.com/users/lwasser/followers",
     "following_url": "https://api.github.com/users/lwasser/following{/other_user}",
     "gists_url": "https://api.github.com/users/lwasser/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lwasser/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lwasser/subscriptions",
     "organizations_url": "https://api.github.com/users/lwasser/orgs",
     "repos_url": "https://api.github.com/users/lwasser/repos",
     "events_url": "https://api.github.com/users/lwasser/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lwasser/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T18:57:05Z",
    "author_association": "NONE",
    "body": "A few of us started this effort a few years back including tracy teal and matt jones!! We started a prototype site but nothing ever came of it. Happy to be involved in the discussion and to share what we learned from it as well! Il post our beta website here when I'm back to my computer!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390326635",
    "html_url": "https://github.com/ropensci/unconf18/issues/63#issuecomment-390326635",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/63",
    "id": 390326635,
    "user": {
     "login": "jthomasmock",
     "id": 29187501,
     "avatar_url": "https://avatars2.githubusercontent.com/u/29187501?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jthomasmock",
     "html_url": "https://github.com/jthomasmock",
     "followers_url": "https://api.github.com/users/jthomasmock/followers",
     "following_url": "https://api.github.com/users/jthomasmock/following{/other_user}",
     "gists_url": "https://api.github.com/users/jthomasmock/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jthomasmock/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jthomasmock/subscriptions",
     "organizations_url": "https://api.github.com/users/jthomasmock/orgs",
     "repos_url": "https://api.github.com/users/jthomasmock/repos",
     "events_url": "https://api.github.com/users/jthomasmock/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jthomasmock/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T20:43:06Z",
    "author_association": "NONE",
    "body": "Found some great content from UC Berkeley's Data Science Program, unfortunately appears to be exclusively Python, but some great frameworks. \r\n\r\nhttps://data.berkeley.edu/undergraduate-ds-pedagogy\r\nhttp://data8.org/\r\nhttp://data8.org/sp18/"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/63/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#63"
 },
 {
  "id": 318721186,
  "url": "https://github.com/ropensci/unconf18/issues/46",
  "title": "Help researchers track results in manuscript back to source code.",
  "created_by": "maurolepore",
  "created_at": "4/29/2018",
  "body": "How do you link a result in your manuscript back to its source code? This is fundamental to reproducible research. It seems basic and straight forward but, in the wild world I live, it is not. Research gets messy quickly: After a few weeks out of touch with a project, wish me luck finding my own stuff; and forget about finding code in a project managed by someone else. \r\n\r\nMy inelegant solution is this:\r\n\r\n* I tag each analysis with a random label and a description.\r\n\r\n```R\r\nab12 <- \"Code which result proves that Earth is not flat.\"\r\nresult <- code\r\n```\r\n\r\n* I keep the tag associated with that analysis throughout the lifecycle of the manuscript.\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39407455-559397a6-4b94-11e8-84f1-e442606b59e9.png)\r\n\r\n* Whenever I need to go back to the source code, I use RStudio's _Go to File/Function_.\r\n\r\n![image](https://user-images.githubusercontent.com/5856545/39407535-637b8e68-4b95-11e8-878a-2a7906db1164.png)\r\n\r\nIs there a tool or better approach? What general recommendations do you have for researchers across a range of willingness to use version control and RStudio projects?",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385285090",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-385285090",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 385285090,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T21:56:49Z",
    "author_association": "NONE",
    "body": "This is a great approach.  It is of course related to #42, but potentially applies very different workflows.   For projects where I'm not compiling the final output I like to have an `outputs` folder which has not only images and tables but an Rmd or text file output with all the essential quantitative values that make their way into the manuscript.  Usually things can be traced back from the filenames there."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385285276",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-385285276",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 385285276,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T22:00:19Z",
    "author_association": "NONE",
    "body": "[`drake`](https://github.com/ropensci/drake) + literate programming may help a bit. [`Drake`'s main example](https://ropensci.github.io/drake/articles/drake.html)'s has a data analysis workflow with [this R Markdown report](https://github.com/ropensci/drake/blob/master/inst/examples/main/report.Rmd) at the very end. The active code chunk has calls to `loadd(fit)` and `readd(hist)`, which serve to \r\n\r\n1. Fetch targets from the cache when the report compiles, and\r\n2. Tell [`drake`](https://github.com/ropensci/drake) to treat `fit` and `hist` as formal dependencies (so `drake::make()` rebuilds the `report.html` if there is a change to `fit` or `hist`.) Even if you don't care about Make-like build management, you can still see where these data objects fit into the pipeline.\r\n\r\n![screenshot_20180429_175059](https://user-images.githubusercontent.com/1580860/39411322-e80d42ee-4bd5-11e8-8f3a-a56caa5b5203.png)\r\n\r\nIn that sense, using and annotating an artifact are one in the same.\r\n\r\nI am curious to know the views of @gmbecker and @duncantl on the original issue. As I understand it, provenance is a major focus of [`trackr`](https://github.com/gmbecker/trackr), [`RCacheSuite`](https://github.com/gmbecker/RCacheSuite), and [`CodeDepends`](https://github.com/duncantl/CodeDepends).\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385285604",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-385285604",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 385285604,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T22:06:19Z",
    "author_association": "NONE",
    "body": "Edit: as for linking data objects back to the source code, the dependency graph shows the functions that generated `fit` and `hist`. That's an important point I forgot to add. The previous graph excluded functions. See below for the full graph.\r\n\r\n![screenshot_20180429_180514](https://user-images.githubusercontent.com/1580860/39411437-ebbe9080-4bd7-11e8-9843-d1870798f37f.png)\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385291374",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-385291374",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 385291374,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T23:51:25Z",
    "author_association": "NONE",
    "body": "Awesome! I'm learning so much and the unconference hasn't even started! Thank you!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385295746",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-385295746",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 385295746,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-30T01:17:03Z",
    "author_association": "NONE",
    "body": "It's such a fantastic crowd! I wish I could be at unconf to soak up more knowledge in person."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390371674",
    "html_url": "https://github.com/ropensci/unconf18/issues/46#issuecomment-390371674",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/46",
    "id": 390371674,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T02:20:21Z",
    "author_association": "NONE",
    "body": "Summary: \r\n* Relates to #58, __drake__ (@wlandau),  __trackr__, __RCacheSuite__, and __CodeDepends__ (linked above; @gmbecker and @duncantl). \r\n* __drake__ comes up very often. Should we discuss to become more familiar with it?"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/46/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#46"
 },
 {
  "id": 317452164,
  "url": "https://github.com/ropensci/unconf18/issues/38",
  "title": "Understanding CRAN Incoming",
  "created_by": "elinw",
  "created_at": "4/24/2018",
  "body": "Recently in the Slack channel I semi jokingly suggested creating an app to run a cron job to scrape the incoming folder at CRAN in order to better understand empirically how long packages stay in each state and where they move to and potentially what the bottlenecks are and what the most common kinds of problems are (for example what kinds of Notes are most common and what operating system environments have the most failures and why).  Maybe the CRAN managers already know this, but maintainers don't seem to.  Ideally if we had the data we could use it to make suggestions about how to deal with bottle necks or to improve documentation to help people avoid problems or (my pet issue) improve the understandability of notes. \r\n ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384158789",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384158789",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384158789,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:41:07Z",
    "author_association": "MEMBER",
    "body": "I non-jokingly think it's a cool idea. It'd also be cool to have a dashboard because currently to find where your package is you need to click in the subfolders right?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384242586",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384242586",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384242586,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T10:37:52Z",
    "author_association": "NONE",
    "body": "Yes, that's right, it's kind of annoying that you have to keep trying different folders."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384263939",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384263939",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384263939,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T12:09:26Z",
    "author_association": "NONE",
    "body": "Possibly related(ish) package: François Michonneau's foghorn:\r\nhttps://github.com/fmichonneau/foghorn .\r\nThe aim is different (it reports CRAN Check results), but I think it would be interesting information to integrate…"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384278299",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384278299",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384278299,
    "user": {
     "login": "hadley",
     "id": 4196,
     "avatar_url": "https://avatars3.githubusercontent.com/u/4196?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hadley",
     "html_url": "https://github.com/hadley",
     "followers_url": "https://api.github.com/users/hadley/followers",
     "following_url": "https://api.github.com/users/hadley/following{/other_user}",
     "gists_url": "https://api.github.com/users/hadley/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hadley/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hadley/subscriptions",
     "organizations_url": "https://api.github.com/users/hadley/orgs",
     "repos_url": "https://api.github.com/users/hadley/repos",
     "events_url": "https://api.github.com/users/hadley/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hadley/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T13:02:25Z",
    "author_association": "MEMBER",
    "body": "This is such a good idea that we have already been doing it 😉 \r\n\r\n@edgararuiz did all the hard work, and he's going to look into sharing our scripts and the data we've collected sofar"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384301018",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384301018",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384301018,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T14:11:03Z",
    "author_association": "NONE",
    "body": "@batpigandme Yes! I saw foghorn and it would be great to integrate some parts,\r\n@hadley @edgararuiz that would be amazing!  I should have suspected you'd have thought about this."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384716264",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384716264",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384716264,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T17:04:42Z",
    "author_association": "NONE",
    "body": "Great idea. \r\n\r\nI'll ask, what is probably, a naive question. Is this something that we can work on *with* the folks at CRAN? This amounts to some sort of oversight of CRAN particularly if this took the form of a package. I fully understand the need for this. But I wonder if some communication with the folks at CRAN about this may useful in the long run. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384717960",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384717960",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384717960,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T17:10:28Z",
    "author_association": "NONE",
    "body": "When we have something to show them I definitely would do so.  If we find some solve-able bottlenecks I think that could help everyone.\n\n> On Apr 26, 2018, at 1:04 PM, Sam Albers <notifications@github.com> wrote:\n> \n> Great idea.\n> \n> I'll ask, what is probably, a naive question. Is this something that we can work on with the folks at CRAN? This amounts to some sort of oversight of CRAN particularly if this took the form of a package. I fully understand the need for this. But I wonder if some communication with the folks at CRAN about this may useful in the long run.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/ropensci/unconf18/issues/38#issuecomment-384716264>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAuEfXLID3ZW8_pPHLxo8Df-tX810-DNks5tsf4sgaJpZM4TiqcA>.\n> \n\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384738897",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384738897",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384738897,
    "user": {
     "login": "hadley",
     "id": 4196,
     "avatar_url": "https://avatars3.githubusercontent.com/u/4196?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hadley",
     "html_url": "https://github.com/hadley",
     "followers_url": "https://api.github.com/users/hadley/followers",
     "following_url": "https://api.github.com/users/hadley/following{/other_user}",
     "gists_url": "https://api.github.com/users/hadley/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hadley/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hadley/subscriptions",
     "organizations_url": "https://api.github.com/users/hadley/orgs",
     "repos_url": "https://api.github.com/users/hadley/repos",
     "events_url": "https://api.github.com/users/hadley/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hadley/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T18:15:31Z",
    "author_association": "MEMBER",
    "body": "@boshek I think that's a question best answered in person"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384768701",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384768701",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384768701,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T19:52:48Z",
    "author_association": "NONE",
    "body": "@hadley I'll look forward to it.\r\n\r\n@elinw:\r\n> If we find some solve-able bottlenecks I think that could help everyone\r\n\r\nSuch a great point."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384806168",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384806168",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384806168,
    "user": {
     "login": "edgararuiz",
     "id": 7875923,
     "avatar_url": "https://avatars1.githubusercontent.com/u/7875923?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/edgararuiz",
     "html_url": "https://github.com/edgararuiz",
     "followers_url": "https://api.github.com/users/edgararuiz/followers",
     "following_url": "https://api.github.com/users/edgararuiz/following{/other_user}",
     "gists_url": "https://api.github.com/users/edgararuiz/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/edgararuiz/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/edgararuiz/subscriptions",
     "organizations_url": "https://api.github.com/users/edgararuiz/orgs",
     "repos_url": "https://api.github.com/users/edgararuiz/repos",
     "events_url": "https://api.github.com/users/edgararuiz/events{/privacy}",
     "received_events_url": "https://api.github.com/users/edgararuiz/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T22:18:08Z",
    "author_association": "NONE",
    "body": "Hi all, I cleaned up and move what I have to this repo: https://github.com/edgararuiz/cran-stages\r\n\r\nIt includes @hadley 's diagram that contains our conclusions about the flow.  It also has the data we gathered from the snapshots of the CRAN Incoming folder, scripts you can use to recreate the analysis, and a quick analysis of the data. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384809481",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-384809481",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 384809481,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T22:34:16Z",
    "author_association": "NONE",
    "body": "That's fantastic! Lots to think about. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388514319",
    "html_url": "https://github.com/ropensci/unconf18/issues/38#issuecomment-388514319",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/38",
    "id": 388514319,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-12T00:07:06Z",
    "author_association": "NONE",
    "body": "Shouldn't it also be possible to scrape the errors and notes packages generate? One of my things is that sometimes making the notes more understandable would make the whole thing less painful.  Or just to have a list of common problems would be helpful.  \r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/38/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#38"
 },
 {
  "id": 320987841,
  "url": "https://github.com/ropensci/unconf18/issues/51",
  "title": "low-friction private data share & data publication",
  "created_by": "cboettig",
  "created_at": "5/7/2018",
  "body": "I'd love to have a robust and simple way to deal with data associated with a project.  \r\n\r\nFor individual data files < 50 Mb, I have bliss.  I can commit these files to a private GitHub repo with ease; they are automatically available to Travis for any checks (no encoding private credentials); I can [flip a switch](https://guides.github.com/activities/citable-code/) and get a DOI for every new release once I make my data public.  \r\n\r\nOr as another concrete example: my students are all asking me how to get there ~ 200MB spatial data files onto the private Travis builds we use in class.  \r\n\r\nFor larger data files, life is not so sweet.  The alternatives and their pitfalls, as I see them:\r\n\r\n- Amazon S3.  Setup is far less trivial. Can be expensive if lots of people download my large files (maybe not an issue if it's only for private data).  Working on travis requires encrypting keys.  No convenient button to press to make this public with DOI when ready. (though could manually upload to Zenodo).  Ability to directly access individual files (by URL).\r\n\r\n- [datastorrr](https://github.com/ropenscilabs/datastorr).  Nearly perfect for data < 2 GB; (adds data as \"attachments\" to GitHub releases, which aren't version controlled.  Would love to see the branch that supports private authentication merged and a preliminary CRAN release.  Maybe good fodder for Unconf?\r\n\r\n- Git LFS: Closest to my workflow for small data, but GitHub's pricing model basically renders this unworkable.  (also no idea if Zenodo import captures LFS files).  @jimhester posted a brilliant work-around for this at https://github.com/jimhester/test-glfs using GitLab for the LFS side to store the large data files of a repo on GitHub (up to 10 GB), but I could never get this working myself. (Would love to get unstuck).\r\n\r\nOther scientific repositories with less ideal solutions:\r\n\r\n- `zenodo`.  Zenodo supports direct uploads with up to 50 GB of data, making it a great option for easy public data sharing.  No private option, no ability to download directly from DOI address.  \r\n\r\n- `figshare` allows for private sharing and public sharing, DOIs for public data. Not sure file limits.  `rfigshare` package not actively maintained... No ability to download directly from DOI address\r\n\r\n- `DataONE` Allows private and public sharing, supports ORCID auth, rich metadata model (burdensome to enter at first but could be useful with better tooling).  Requires re-authenticating with time-expiring token.  provides DOIs and other identifiers. No ability to download directly from DOI address, but does support ability to access individual files without downloading entire archive...\r\n\r\n\r\n- ... more / other related strategies? \r\n\r\n\r\nThings that might be strategies but somehow never work well for me in this context:\r\n\r\n- Box / Dropbox\r\n- Google Drive\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387234732",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387234732",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387234732,
    "user": {
     "login": "amoeba",
     "id": 563,
     "avatar_url": "https://avatars2.githubusercontent.com/u/563?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/amoeba",
     "html_url": "https://github.com/amoeba",
     "followers_url": "https://api.github.com/users/amoeba/followers",
     "following_url": "https://api.github.com/users/amoeba/following{/other_user}",
     "gists_url": "https://api.github.com/users/amoeba/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/amoeba/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/amoeba/subscriptions",
     "organizations_url": "https://api.github.com/users/amoeba/orgs",
     "repos_url": "https://api.github.com/users/amoeba/repos",
     "events_url": "https://api.github.com/users/amoeba/events{/privacy}",
     "received_events_url": "https://api.github.com/users/amoeba/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/7/2018",
    "updated_at": "2018-05-07T23:13:49Z",
    "author_association": "NONE",
    "body": "Great idea! What about encrypted Dat?\r\n\r\nThis would mean that CI systems would download data from peers rather than fast CDNs like with S3/GitHub/etc which would mean slow builds for some proportion of users."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387235190",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387235190",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387235190,
    "user": {
     "login": "Pakillo",
     "id": 1597843,
     "avatar_url": "https://avatars0.githubusercontent.com/u/1597843?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Pakillo",
     "html_url": "https://github.com/Pakillo",
     "followers_url": "https://api.github.com/users/Pakillo/followers",
     "following_url": "https://api.github.com/users/Pakillo/following{/other_user}",
     "gists_url": "https://api.github.com/users/Pakillo/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Pakillo/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Pakillo/subscriptions",
     "organizations_url": "https://api.github.com/users/Pakillo/orgs",
     "repos_url": "https://api.github.com/users/Pakillo/repos",
     "events_url": "https://api.github.com/users/Pakillo/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Pakillo/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/7/2018",
    "updated_at": "2018-05-07T23:16:26Z",
    "author_association": "NONE",
    "body": "Apart from [Dat](https://blog.datproject.org/2018/04/24/data-sharing-at-institutions-and-beyond-with-dat/), another option could be OSF: http://journals.sagepub.com/doi/full/10.1177/2515245918757689"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387736742",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387736742",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387736742,
    "user": {
     "login": "khondula",
     "id": 6106733,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6106733?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/khondula",
     "html_url": "https://github.com/khondula",
     "followers_url": "https://api.github.com/users/khondula/followers",
     "following_url": "https://api.github.com/users/khondula/following{/other_user}",
     "gists_url": "https://api.github.com/users/khondula/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/khondula/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/khondula/subscriptions",
     "organizations_url": "https://api.github.com/users/khondula/orgs",
     "repos_url": "https://api.github.com/users/khondula/repos",
     "events_url": "https://api.github.com/users/khondula/events{/privacy}",
     "received_events_url": "https://api.github.com/users/khondula/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T13:23:02Z",
    "author_association": "NONE",
    "body": "Another option to be aware of - I think that [Dataverse](https://dataverse.org/) repositories can accept individual files up to 2.5 GB and datasets up to 10 GB (according to [Nature](https://www.nature.com/sdata/policies/repositories#general) but also the [docs](http://guides.dataverse.org/en/4.6/user/dataset-management.html) say \"file upload limit size varies by installation\"). Anyone can submit to the flagship [Harvard Dataverse](https://dataverse.harvard.edu/) or [institutions](https://dataverse.org/institutions) can set up their own repositories. There is some discussion of setting dataset and file level permissions [here](http://guides.dataverse.org/en/4.6/user/dataset-management.html)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387882527",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387882527",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387882527,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-11T21:29:50Z",
    "author_association": "MEMBER",
    "body": "I like the idea of dat, though It's not clear what the status is of the project (seems all the main people have left?). Are there any similar projects?\r\n\r\nI'd think we should steer away from figshare as they haven't really been supporting their API\r\n\r\nOne thing that came to mind was http://academictorrents.com/ - though seems very tenuous, and login doesn't have https, scary. There was also biotorrents, but even the domain name is gone now. Anyway, in general, perhaps a torrent solution could help in this space. Though I imagine many universities would by default block any torrent use from IP addresses coming from their members"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387889838",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387889838",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387889838,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T22:05:36Z",
    "author_association": "NONE",
    "body": "It seems to me that the way to go with these is as common a front-facing API as possible with back-ends across multiple repositories which would handle DOI-->file navigation.  Back-end repositories have their pros and cons in terms of private/public, file size, whether they have institutional archival arrangements, need for local software installation, DOI availability and reservation, etc.  It would be a good start to tabulate these so that people can know about them, and then prioritize those to focus back-end development on.  I think OSF checks most of the boxes, but people will differ.  This could work for even some more stringent/specialized archives like KNB/DataONE.\r\n\r\nThe front-end might be **datastorr** like in functionality and maybe API, but not be tied to GitHub.  You stash your API key or even your preferred back-end as environment variables, and then `data_release()`, `data_update()`, `dataset(ID,...), `set_public()`, `set_private()`, etc.\r\n\r\nI'm not sure why the fact that they're enterprise-focused is a reason to avoid figshare.  If lots of institutions use them that's good.  Amazon is sure enterprise focused! If I recall development for rfigshare halted a bit because their API was unstable at one point, but they cover a lot of the bases.\r\n\r\nRe: Dataverse, which also seems good, I note that Thomas Leeper is looking for a new maintainer for the [dataverse R package](https://github.com/IQSS/dataverse-client-r)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387892720",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-387892720",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 387892720,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T22:19:34Z",
    "author_association": "NONE",
    "body": "Another good thing to assess for all the back-ends usage of common metadata standards - both for ease of development and long-term sustainability and compatibility across services."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388729608",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-388729608",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 388729608,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T07:58:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I've been talking to some sociologist friends about this, and they share a major concern that is not unique:\r\n\r\n1. Data sets are (often, and for them, almost always) very expensive to collect.\r\n2. Many funding agencies and/or journals now require data sets to be openly published.\r\n3. This mean that they in effect get one go and a good paper from their data before it's released for general plundering and pillage, ultimately negatively impacting their research\r\n\r\nA solution we discussed is a means of tracking and thereby always reliably ascribing data provenance, in effect ensuring that people otherwise suffering such effects would automatically be listed as authors of any papers using their data. And so...\r\n\r\n### A solution\r\n\r\nA [tangle](https://iota.org) (see whitepaper [here](https://www.iota.org/research/academic-papers)) potentially offers a perfect system for tracking data provenance.\r\n\r\n### An unconf proposal\r\n\r\nSoftware to constuct/modify tangle technology specifically for the sharing of data to ensure maintenance and attribution of provenance. Sharing/accessing a data set simply becomes a tangle transaction. Advantages:\r\n\r\n1. Obviates any need for most of the above discussions because data access is P2P\r\n2. Meta-data on provenance always maintained\r\n3. Generators of data can always inquire about copies of their data, and/or standards can readily be set through ensuring citation refers to a tangle transaction.\r\n4. The whole system is a graph, so (not too far down the track), the whole tangle of data meta-data will be able to be searched with `graphql`, offering a big boost to #26."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390275329",
    "html_url": "https://github.com/ropensci/unconf18/issues/51#issuecomment-390275329",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/51",
    "id": 390275329,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T17:21:55Z",
    "author_association": "MEMBER",
    "body": "All great ideas here.  I really like the approach @noamross outlines of identifying some core functionality that could be expressed in a generic front-end package, that could allow the user to swap in there preferred 'back-end' storage choice, whether it's a DOI-providing registry like Zenodo, a paid service like S3, or Blockchains-take-over-the-world thing.  \r\n\r\n\r\n\r\n\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/51/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#51"
 },
 {
  "id": 321087721,
  "url": "https://github.com/ropensci/unconf18/issues/53",
  "title": "Running minimal code with changed inputs",
  "created_by": "OmaymaS",
  "created_at": "5/8/2018",
  "body": "I am not sure if this topic was tackled from all sides but thought about sharing.\r\n\r\n**Problem**\r\nWhen one runs a script, there could be a computationally heavy parts, but not all these parts require re-running. The inputs to these parts could be the same, the imported data might not have changed since the last time, etc.\r\n\r\nIn Rmarkdown, one can use caching in chunks to save some data importing. And in scripts one could write some conditions to control running some code.\r\n\r\n**It would be more efficient if there's a simple way to detect changes and decide which parts to be re-run automatically**\r\n\r\nSo if there are available solutions for this, let me know. If not we might think about certain functions or settings to help with this.\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387330966",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387330966",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387330966,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T08:46:58Z",
    "author_association": "MEMBER",
    "body": "I think https://github.com/ropensci/drake could help with this?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387368835",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387368835",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387368835,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:13:53Z",
    "author_association": "NONE",
    "body": "Yes, I designed [`drake`](https://github.com/ropensci/drake) explicitly for this purpose. See `drake`'s [main example](https://ropensci.github.io/drake/articles/drake.html) for a proof of both concept and implementation.\r\n\r\nIt is so gratifying to see people independently discover the need for such a tool."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387370309",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387370309",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387370309,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:19:42Z",
    "author_association": "NONE",
    "body": "In lieu of the unconf, we'll be having a two-day drake intensive! 😂\r\nSeriously though, @wlandau, you should just post a list of all the things people have suggested for which drake provides a solution!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387377365",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387377365",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387377365,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:52:07Z",
    "author_association": "NONE",
    "body": "Thanks! It's exciting how many of them are in this issue tracker alone.\r\n\r\nI cannot physically be in Seattle on May 21-22, but I will do my absolute best to be present online."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387377399",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387377399",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387377399,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:52:13Z",
    "author_association": "NONE",
    "body": "As much as I like **drake**, I see a space for a solution here is a little more lightweight.  Almost all R build systems force users to refactor their code away from scripts to functions.  There are good reasons for this but it adds a lot of overhead for people who are working with scripts. \r\n\r\nI think there could be a useful solution here wherein one does cacheing on an R script with a function like `source_cached()`.  In this solution, one would treat every line of code in the script like a **knitr** chunk.  Then one could either\r\n\r\n - Hash and save the script's environment after every line (high storage), or\r\n - Hash every and save every object in the environment after every line (more overhead, less storage)\r\n\r\nOne could probably use `storr::driver_envionment()` for fast in-session storage, or a regular on-disk storr.\r\n\r\nThis wouldn't be the most efficient solution but it would probably work very well for the case of a script that has gotten a bit unwieldy which someone is developing through interactive use.\r\n\r\nSince this is meant to be a convenience tool, one would probably throw in an RStudio add-in, so one could run `source_cached()` on the current script with a hotkey."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387378063",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387378063",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387378063,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:57:56Z",
    "author_association": "NONE",
    "body": "@noamross I think `source_cached()` is absolutely possible, maybe even straightforward, with [`memoise`](https://github.com/r-lib/memoise) + [`CodeDepends`](https://github.com/duncantl/codedepends). And I agree, its bare simplicity would fill a niche."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387378542",
    "html_url": "https://github.com/ropensci/unconf18/issues/53#issuecomment-387378542",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/53",
    "id": 387378542,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T11:57:31Z",
    "author_association": "NONE",
    "body": "At one point, I thought maybe there could be an automatic way to turn an arbitrary R script into a `drake_plan()`, but this turns out to be extremely difficult to even think about."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/53/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#53"
 },
 {
  "id": 315301891,
  "url": "https://github.com/ropensci/unconf18/issues/28",
  "title": "Promote data-packages to facilitate project-oriented workflows",
  "created_by": "maurolepore",
  "created_at": "4/17/2018",
  "body": "Can we facilitate project-oriented workflows by promoting data-packages?\r\n\r\nAlthough researchers would benefit from using self-contained projects, they rarely do. This workflow seems more common:\r\n* Store the data locally in one directory.\r\n* Import the data from multple R sessions and run analyses.\r\n\r\nThis approach is problematic becaue each R session is not self-contained.\r\n\r\nA neat solution is to build a data-package. While its source may live in a single local directory, the data can be accessed by loading the data from any project, keeping it self-contained. \r\n\r\nBut many reasearchers don't know this approach or believe that building a package is too difficult. Indeed, building a basic data-package requires relatively few tools. The process can largely be handeled with the __usethis__ package (by Hadley Wickham, @jennybc and RStudio). Can we describe the steps required to build a data-package via a series of __usethis__ functions?\r\n\r\n(As a starting point here is a [checklist](https://fgeo.netlify.com/2018/04/04/2018-04-04-building-infrastructure-for-a-data-package/) I use to build data-packages.)",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382503485",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-382503485",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 382503485,
    "user": {
     "login": "ldecicco-USGS",
     "id": 1105215,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1105215?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ldecicco-USGS",
     "html_url": "https://github.com/ldecicco-USGS",
     "followers_url": "https://api.github.com/users/ldecicco-USGS/followers",
     "following_url": "https://api.github.com/users/ldecicco-USGS/following{/other_user}",
     "gists_url": "https://api.github.com/users/ldecicco-USGS/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ldecicco-USGS/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ldecicco-USGS/subscriptions",
     "organizations_url": "https://api.github.com/users/ldecicco-USGS/orgs",
     "repos_url": "https://api.github.com/users/ldecicco-USGS/repos",
     "events_url": "https://api.github.com/users/ldecicco-USGS/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ldecicco-USGS/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T19:34:09Z",
    "author_association": "NONE",
    "body": "I've had good luck with using a data-package for some projects. It became rougher though to rely on a package as my data got bigger and I got more collaborators (both with updating the data package and version controlling the data on github). My group has put a pretty good deal of effort into creating a robust internal repository that allows us to do this, but it's not trivial with bigger data. We could use Git Large File Storage (LFS)...but we had some issues getting all our collaborators to use that. Certainly data quickly becomes to big for CRAN, their package size requirements are pretty limiting.\r\n\r\nAnother option we can consider is focus on easy data caching...where we can use google drive, aws, other data storage options....(theme of the day....see #29 #30 )"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382511170",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-382511170",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 382511170,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T20:02:11Z",
    "author_association": "MEMBER",
    "body": "Interesting ideas!  \r\n\r\nI think another thing we want to think carefully about here is how to keep in mind data archiving and publishing best practices as part of this workflow.  For instance, while I love the whole `data-raw` thing with storing scripts that go from raw data to tidy data, I get nervous about encouraging R packages as an ideal way to document, distribute and manage data.  \r\n\r\nIt is probably better to store data in a plain-text format, along with some basic metadata, that is agnostic to software details.  \r\n\r\nI think this highlights the relatively large divide between how we go about preparing data for archiving / publishing vs how we use data day-to-day.  I think it would be a big win to to narrow that gap a little with tools that make it easier to do both.  For instance, several data repositories (figshare, DataONE) allow for data to be archived 'privately' with access granted to only explicit collaborators.  This means users can benefit from having a secure, redundant, versioned copy of data sets that can be accessed by remote collaborators and scripted into their workflows.  Then publishing becomes just a matter of flipping a switch from private to public and not one of uploading data to the repo from scratch...."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382545804",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-382545804",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 382545804,
    "user": {
     "login": "karthik",
     "id": 138494,
     "avatar_url": "https://avatars2.githubusercontent.com/u/138494?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/karthik",
     "html_url": "https://github.com/karthik",
     "followers_url": "https://api.github.com/users/karthik/followers",
     "following_url": "https://api.github.com/users/karthik/following{/other_user}",
     "gists_url": "https://api.github.com/users/karthik/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/karthik/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/karthik/subscriptions",
     "organizations_url": "https://api.github.com/users/karthik/orgs",
     "repos_url": "https://api.github.com/users/karthik/repos",
     "events_url": "https://api.github.com/users/karthik/events{/privacy}",
     "received_events_url": "https://api.github.com/users/karthik/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T22:12:50Z",
    "author_association": "MEMBER",
    "body": ">  I get nervous about encouraging R packages as an ideal way to document, distribute and manage data.\r\n\r\nExactly! This is something that @njtierney and I have been talking about a lot lately as we are documenting all of this. We are developing a set of best practices around sharing different types of data (more on that in a bit) but the general recommendation is not to share data inside R packages unless it's explicitly for teaching/training or for supporting small examples. CRAN limits packages to 5mb, so that also imposes additional challenges (binary data is even less accessible outside the package ecosystem). \r\n\r\nYou might also have also seen this paper: [Hosting Data Packages via drat: A Case Study with Hurricane Exposure Data ](https://journal.r-project.org/archive/2017/RJ-2017-026/index.html). This is also somewhat fragile and does not address the divide that Carl talks about above."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/383290210",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-383290210",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 383290210,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/21/2018",
    "updated_at": "2018-04-21T12:10:36Z",
    "author_association": "NONE",
    "body": "> It became rougher though to rely on a package as my data got bigger ... Certainly data quickly becomes to big for CRAN\r\n\r\n-- @ldecicco-USGS \r\n \r\nThanks for noting this. That's great point I hadn't considered. I was thinking of packages not stored on CRAN but on GitHub or even locally. My suggestion for datapackages as a way to facilitate a project oriented workflow targets a problem that I find most commonly. \r\n\r\nIt seems the researchers you have in mind are fluent in R enough to build and publish packages to CRAN. In contrast, most of the researchers I work with (ForestGEO, a network of 65 research groups around the world) don't build packages nor use project oriented workflows. These are amazingly brilliant researchers doing amazing science. And I'm trying to help them become even more productive by providing them with tools and sytems that reduce the friction in taking more reproducible workflows.\r\n\r\nConsidering your point, I would love to brainstorm how else (other than via data-packages) the workflow I described above -- which I find most commonly  -- could be made project-oriented. It seems that hosting the data on a remote, versionable, repository is realatively easier and safer. (More on that in the next comment)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/383291259",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-383291259",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 383291259,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/21/2018",
    "updated_at": "2018-04-21T12:29:14Z",
    "author_association": "NONE",
    "body": "> [There is a] large divide between how we go about preparing data for archiving / publishing vs how we use data day-to-day. I think it would be a big win to to narrow that gap a little with tools that make it easier to do both. \r\n\r\n-- @cboettig \r\n\r\nI agree. I have experimented with [GitHub and Zenodo](https://guides.github.com/activities/citable-code/) and I liked it. You may already know this but let me summarize here what the win is:\r\n\r\nAfter a not-too-hard setup, every GitHub release of a repo -- which can be created by adding a new tag with Git and pushing it to GitHub -- is automatically published to Zenodo. Zenodo is a data repository similar to Figshare -- it generates a DOI for each version of a project. \r\n\r\nIn my opinion the workflow is already acceptably simple: From a local repo, pushing a new tag to GitHub generates both a new GitHub release and a new DOI. If the repo is a data-package, you'd be both releasing a new version of the package and publishing it to a service citable via a DOI.\r\n\r\nWhat ideas do you have to improve even further the build-publish integration?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/383291936",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-383291936",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 383291936,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/21/2018",
    "updated_at": "2018-04-21T12:39:29Z",
    "author_association": "NONE",
    "body": "> We are developing a set of best practices around sharing different types of data (more on that in a bit) \r\n\r\n-- @karthik \r\n\r\nGreat! I'll love to learn what you produce.\r\n\r\nAnd thanks for pointing to that paper."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384050562",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-384050562",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 384050562,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-24T19:24:57Z",
    "author_association": "NONE",
    "body": "I gave a talk on this subject at NYR last week, slides here: https://github.com/noamross/2018-04-18-rstats-nyc/blob/master/Noam_Ross_ModernDataPkg_rstatsnyc_2018-04-20.pdf .  They're not that self-explanatory, but my point was largely about how there's a real trade-off between scientific best archival practices and the conveniences available from wrapping data in a package, but they can be minimized with some design approaches.\r\n\r\nI think a good solution here is in-reach, but we need to devote some time and resources to it.  A good path is having a fully functional API packages for Zenodo and other repositories, and having these as back-ends to @richfitz's **datastorr** package which does such great data versioning, distribution and caching (and getting **datastorr** to CRAN). Maybe we could make a push on these things at the unconf."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390372283",
    "html_url": "https://github.com/ropensci/unconf18/issues/28#issuecomment-390372283",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/28",
    "id": 390372283,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T02:32:08Z",
    "author_association": "NONE",
    "body": "Summary: A lot of thought has already been invested in this. For example, @karthik and @njtierney are documenting best practices; and @noamross has slides and ideas to implement a solution involving @richfitz's __datastorr__ package. Relates to #29, #30."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/28/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#28"
 },
 {
  "id": 324553105,
  "url": "https://github.com/ropensci/unconf18/issues/74",
  "title": "Providing documentation for the `asis` engine",
  "created_by": "lauracion",
  "created_at": "5/18/2018",
  "body": "## Another of the projects that came up while discussing #42 \r\n\r\n@jtr13 wrote: \"there's one small piece of the puzzle that I doubt would be hard to implement and would make a big difference. That is, having an `echo=FALSE` option for text, to provide the same flexibility for text in progress as we have with code in progress. I can think of so many uses: the ability for example to create assignments with and without solutions (... there are workarounds using comments in code chunks but that's not the same).\"",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390335828",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390335828",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390335828,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:22:05Z",
    "author_association": "NONE",
    "body": "Good idea! \r\n\r\nI recently got something like this to work using another kind of workaround. I was using knitr hooks to hide the results of a chunk until a button is pressed:\r\n\r\n```r\r\nknitr::knit_hooks$set(\r\n  hide_button = function(before, options, envir) {\r\n    if (is.character(options$hide_button)) {\r\n      button_text = options$hide_button\r\n    } else {\r\n      button_text = \"Show solution\"\r\n    }\r\n    block_label <- paste0(\"hide_button\", options$label)\r\n    if (before) {\r\n      return(paste0(sep = \"\\n\",\r\n                   '<button class=\"btn btn-danger\" data-toggle=\"collapse\" data-target=\"#', block_label, '\"> ', button_text, ' </button>\\n',\r\n                   '<div id=\"', block_label, '\" class=\"collapse\">\\n'))\r\n    } else {\r\n      return(\"</div><br />\\n\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThen you can add something like this to the Rmd: \r\n\r\n```\r\n```{r hide_button = \"Show Answer\", results = 'asis', echo = FALSE}\r\ncat(\r\n  \"The answer.\"\r\n)\r\n``'\r\n```\r\n\r\nIt would be great if I did not have to use `cat` and `results = 'asis', echo = FALSE`. Perhaps there is / could be a \"plain text\" chunk type. Perhaps something like:\r\n\r\n```\r\n```{text  echo = FALSE}\r\n## Something entirely not thought out\r\n\r\nI really would rather people not see this yet.\r\n``'\r\n```\r\n\r\nThis would also allow for varaibles to determine which parts of the rmd are shown, like:\r\n\r\n```\r\n```{r  include = FALSE}\r\nshow_in_progress = TRUE\r\n``'\r\n\r\nbla bla \r\n\r\n```{text  echo = show_in_progress}\r\n## Something entirely not thought out\r\n\r\nI really would rather people not see this yet.\r\n``'\r\n\r\n```"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390336724",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390336724",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390336724,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:26:18Z",
    "author_association": "NONE",
    "body": "Adding a knitr engine might work:\r\n\r\nhttps://yihui.name/knitr/demo/engines/"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390337985",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390337985",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390337985,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:31:59Z",
    "author_association": "NONE",
    "body": "Oh wait, it already exists, you can use the `asis` chunk type to put markdown in chunks and use `echo = FALSE` to not include them. I just tried it and it works."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390339232",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390339232",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390339232,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:37:46Z",
    "author_association": "NONE",
    "body": "That was a fast resolution! Thank you!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390342458",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390342458",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390342458,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:52:18Z",
    "author_association": "NONE",
    "body": "No problem!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390344952",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390344952",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390344952,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:05:30Z",
    "author_association": "NONE",
    "body": "Thanks... The problem though with `asis` is that you still need `cat()` which is a pain. In addition, with math equations you have to double escape the tex stuff, which is difficult. (See here:  https://community.rstudio.com/t/echo-false-type-option-for-rmarkdown-text/2384 -- this has been on my mind for a while!)\r\n\r\nI have in mind being able to write markdown paragraphs that are included or not, without having to wrap each line in r code."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390345939",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390345939",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390345939,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:12:11Z",
    "author_association": "NONE",
    "body": "I dont think you need `cat`. I meant the chunk engine `asis`, not  the chunk option `results = \"asis\"`. Like so:\r\n\r\n```\r\n\r\n# Show\r\n\r\n```{asis  echo = FALSE}\r\n## Something entirely not thought out\r\n\r\nI really would rather people not see this yet.\r\n``' # (' instead of ` is for github markdown formatting)\r\n\r\n# Dont show\r\n\r\n```{asis  echo = FALSE}\r\n## Something entirely not thought out\r\n\r\nI really would rather people not see this yet.\r\n``'\r\n```"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390349841",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390349841",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390349841,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:33:53Z",
    "author_association": "NONE",
    "body": "Aha... brilliant! Where can I apply to get back the time I lost on workarounds??? :-) Also, is that documented anywhere? Not here: https://yihui.name/knitr/demo/engines/"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390350251",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390350251",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390350251,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:36:54Z",
    "author_association": "NONE",
    "body": ">Where can I apply to get back the time I lost on workarounds???\r\n\r\nHaha, there is probably a form you can fill out somewhere. \r\n\r\n> Also, is that documented anywhere?\r\n \r\nNot that I saw. I had to look through the source code to find it: \r\n\r\nhttps://github.com/yihui/knitr/blob/dc028f4c9698f84999b53edc5f6f255b29d7e5a2/R/engine.R#L390-L392\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390350670",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390350670",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390350670,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:39:41Z",
    "author_association": "NONE",
    "body": "Ok, so I hereby change this issue to providing documentation for the `asis` engine! "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390355072",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390355072",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390355072,
    "user": {
     "login": "apreshill",
     "id": 12160301,
     "avatar_url": "https://avatars3.githubusercontent.com/u/12160301?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/apreshill",
     "html_url": "https://github.com/apreshill",
     "followers_url": "https://api.github.com/users/apreshill/followers",
     "following_url": "https://api.github.com/users/apreshill/following{/other_user}",
     "gists_url": "https://api.github.com/users/apreshill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/apreshill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/apreshill/subscriptions",
     "organizations_url": "https://api.github.com/users/apreshill/orgs",
     "repos_url": "https://api.github.com/users/apreshill/repos",
     "events_url": "https://api.github.com/users/apreshill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/apreshill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T23:09:42Z",
    "author_association": "NONE",
    "body": "A related tool I was just made aware of from issue #63 is `assignr`: https://github.com/coatless/assignr\r\n\r\nI have not used, but looks promising @jtr13!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390394597",
    "html_url": "https://github.com/ropensci/unconf18/issues/74#issuecomment-390394597",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/74",
    "id": 390394597,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/19/2018",
    "updated_at": "2018-05-19T10:06:34Z",
    "author_association": "NONE",
    "body": "Summary: engine `asis` in `knitr` can be used to easily exclude from the final report chunks of text that are still in progress. `asis` needs to be documented."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/74/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#74"
 },
 {
  "id": 321057091,
  "url": "https://github.com/ropensci/unconf18/issues/52",
  "title": "Taking some pain out of finding/linking to unique IDs?",
  "created_by": "magpiedin",
  "created_at": "5/8/2018",
  "body": "A wish/need/dread for data standards came up in [issue 41](https://github.com/ropensci/unconf18/issues/41), and brought a few ideas to mind:\r\n- For cleaning Darwin Core/biodiversity data, there are some good tools (e.g., [Kurator](http://wiki.datakurator.org/wiki/Kurator), which looks like it's getting [some translation to R](https://github.com/rstats-gsoc/gsoc2018/wiki/Darwinazing-biodiversity-data-in-R)). \r\n- For finding IDs for publications, people, specimens, taxa, etc, there are lots of great resources (`fulltext`, `rorcid`, `spocc`, `taxize`...)\r\n- But for actually finding & linking the pieces (specifically, the unique IDs for publications, specimens, people, etc), projects often run out of energy/time/awareness\r\n \r\nAny thoughts on a helper/gentle-reminder app or lesson for suggesting linkable values contained within datasets or papers -- for instance, by indexing what types of fields/records exist in a given dataset, and suggesting relevant packages from CRAN or ropensci that could retrieve identifiers? \r\n\r\nI realize I'm glossing over some major obstacles to actually linking data (e.g., cleaning free text values & resolving entities is enough of a mountain; plan-ahead is better than fix-it-in-post when possible), so I'm all ears if this could use more [or a different] focus. \r\nOr if something magical already exists along these lines.\r\n...Or if there's a good/sustainable alternative to developing tools/packages that rely on multiple API wrappers?...",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387385973",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-387385973",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 387385973,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T12:29:38Z",
    "author_association": "NONE",
    "body": "This is a hard problem! I have an as-yet unfunded proposal to develop a system that tries to use text-recognition ML identify fields in a dataset and link them to appropriate ontologies - for instance, recognizing which columns are species, which are publications, and such.  I believe that @amoeba has worked something similar for DataONE. \r\n\r\nEase of use is definitely one of the big challenges - I could see something like a function like `find_ids()` that you could run on a document and it would return items that might have IDs (author names, species names, publications) using a text-recognition model (or maybe some pre-trained services like **monkeylearn**.), perhaps with boilerplate code for searching them via those packages?  \r\n\r\nRunning on CSVs or similar datasets is would probably be a bit harder because the off-the-shelf tools aren't as developed, DataONE has a set of curated, annotated [data sets for training models](https://github.com/DataONEorg/semantic-query/tree/master/lib), and was working on it, but I'm not sure the status of that."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387451992",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-387451992",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 387451992,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T15:56:05Z",
    "author_association": "MEMBER",
    "body": "Great suggestion.  Advice and simple, performant tools just to find the identifiers would be really cool -- too often most tools assume the user already has a pretty good grasp of the landscape and knows what they want.  \r\n\r\nAn important piece of this puzzle I think are things that can deliver immediate value to the researcher implementing them; or at least a clear value proposition for why to use identifiers.  The lesson idea sounds like an interesting way to go; it could illustrate both how to do a task like adding taxa ids, and demonstrate how that makes your life easier (say, in merging two datasets with differing taxonomy)?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387454408",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-387454408",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 387454408,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T16:03:55Z",
    "author_association": "MEMBER",
    "body": "(On darwin core, @sckott also has WIP https://github.com/ropenscilabs/taxadc)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387459654",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-387459654",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 387459654,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T16:21:13Z",
    "author_association": "MEMBER",
    "body": "thanks @cboettig - i was just reading this issue. \r\n\r\nwrt `taxadc`, that's just for taxonomy, to try to make it easy for users to convert https://github.com/ropensci/taxa classes to DWC compliant, and then serialize those objects to XML/JSON/JSON-LD/etc. \r\n\r\nI agree some kind of tool that scans text for entities that might have unique IDs would be great. On the taxonomy front, there's i think a global names project tool that goes through and can identify taxonomic names in text. But I don't know of tools for other entities that may have identifiers. \r\n\r\nWe have at least some tools for identifiers for taxonomy and publications. Are there any major missing things that have identifiers that we don't yet have tools for?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387508147",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-387508147",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 387508147,
    "user": {
     "login": "magpiedin",
     "id": 8563362,
     "avatar_url": "https://avatars3.githubusercontent.com/u/8563362?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/magpiedin",
     "html_url": "https://github.com/magpiedin",
     "followers_url": "https://api.github.com/users/magpiedin/followers",
     "following_url": "https://api.github.com/users/magpiedin/following{/other_user}",
     "gists_url": "https://api.github.com/users/magpiedin/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/magpiedin/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/magpiedin/subscriptions",
     "organizations_url": "https://api.github.com/users/magpiedin/orgs",
     "repos_url": "https://api.github.com/users/magpiedin/repos",
     "events_url": "https://api.github.com/users/magpiedin/events{/privacy}",
     "received_events_url": "https://api.github.com/users/magpiedin/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T19:02:30Z",
    "author_association": "NONE",
    "body": "Thanks for brains!  I will keep fingers crossed for ML proposals, and all for something along the lines of a \"how to add/merge taxon id's\" lesson if it can help elucidate some steps in the meantime (+ compliment other things in the works here/locally/globally). \r\n\r\n@sckott -- two things with id's but not tools of their own are (as far as I know?):\r\n1 - Institutional identifiers - [GRBio/GRSciColl](http://grbio.org/content/data-download-grbio) has a registry of 'Cool' HTTP URIs\r\n2 - Multimedia identifiers - \"dcterms:identifier\" in a few different standards including Audubon Core\r\n\r\nThat said, both of those might be a little shaky to develop anything around currently:\r\n- For Institutions, GRBio itself might be too in-flux currently & without an API, but they do have daily-updated dataset-downloads [which are a little oddly-structured and seem to be suspiciously missing the cool-URIs themselves...?].  But they're supposedly getting a makeover/takeover from GBIF in the near future...\r\n- For Multimedia, the current GBIF API can return media type, but I don't think it can return media identifiers [yet] -- either directly or in association with an occurrence record.\r\n-- Outside of GBIF, MorphoSource.org is one place that's starting to serve up Audubon Core datasets [here](https://www.morphosource.org/About/report) \r\n-- & Outside of biodiversity data, [IIIF](http://iiif.io) might have some good directions to keep an eye on...\r\n\r\n...I think I'm forgetting something, but I'll stop there...!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388486693",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-388486693",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 388486693,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-11T21:11:03Z",
    "author_association": "MEMBER",
    "body": "related to institutional identifiers, is the Organizational Identifiers group relevant ? https://orcid.org/content/organization-identifier-working-group and https://www.crossref.org/blog/organization-identifier-working-group-update/\r\n\r\n> For Institutions, GRBio ... supposedly getting a makeover/takeover from GBIF in the near future...\r\n\r\ninteresting, would like to learn more about this\r\n\r\nRight, i've heard about IIIF, seems great. \r\n\r\n> the current GBIF API can return media type, but I don't think it can return media identifiers \r\n\r\nhere's some GBIF media data, what would the media identifiers be?\r\n\r\n```\r\n➜  ~ curl 'http://api.gbif.org/v1/occurrence/search?taxonKey=1' | jq '.results[].media'\r\n```\r\n\r\n```\r\n[\r\n  {\r\n    \"type\": \"StillImage\",\r\n    \"format\": \"image/jpeg\",\r\n    \"identifier\": \"https://static.inaturalist.org/photos/12648072/original.jpg?1514760468\",\r\n    \"references\": \"https://www.inaturalist.org/photos/12648072\",\r\n    \"created\": \"2017-12-31T22:46:43.000+0000\",\r\n    \"creator\": \"John Flower\",\r\n    \"publisher\": \"iNaturalist\",\r\n    \"license\": \"http://creativecommons.org/publicdomain/zero/1.0/\",\r\n    \"rightsHolder\": \"John Flower\"\r\n  },\r\n  {\r\n    \"type\": \"StillImage\",\r\n    \"format\": \"image/jpeg\",\r\n    \"identifier\": \"https://static.inaturalist.org/photos/12648077/original.jpg?1514760475\",\r\n    \"references\": \"https://www.inaturalist.org/photos/12648077\",\r\n    \"created\": \"2017-12-31T22:46:43.000+0000\",\r\n    \"creator\": \"John Flower\",\r\n    \"publisher\": \"iNaturalist\",\r\n    \"license\": \"http://creativecommons.org/publicdomain/zero/1.0/\",\r\n    \"rightsHolder\": \"John Flower\"\r\n  }\r\n]\r\n```"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388504076",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-388504076",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 388504076,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-11T22:49:04Z",
    "author_association": "MEMBER",
    "body": "Media identifier... i.e., a URI corresponding to the format (mime type?)  Maybe the wikidata identifier is a reasonable choice? https://www.wikidata.org/wiki/Q2195\r\n\r\nFunder ids from FundRef are another obvious one.  e.g. https://github.com/ropensci/codemetar/blob/master/inst/extdata/funderNames.csv"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388627864",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-388627864",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 388627864,
    "user": {
     "login": "magpiedin",
     "id": 8563362,
     "avatar_url": "https://avatars3.githubusercontent.com/u/8563362?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/magpiedin",
     "html_url": "https://github.com/magpiedin",
     "followers_url": "https://api.github.com/users/magpiedin/followers",
     "following_url": "https://api.github.com/users/magpiedin/following{/other_user}",
     "gists_url": "https://api.github.com/users/magpiedin/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/magpiedin/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/magpiedin/subscriptions",
     "organizations_url": "https://api.github.com/users/magpiedin/orgs",
     "repos_url": "https://api.github.com/users/magpiedin/repos",
     "events_url": "https://api.github.com/users/magpiedin/events{/privacy}",
     "received_events_url": "https://api.github.com/users/magpiedin/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/13/2018",
    "updated_at": "2018-05-13T13:44:37Z",
    "author_association": "NONE",
    "body": "Nice!  Looks like those are indeed multimedia identifiers in the GBIF data -- staring us in the face at the \"identifier\" key  :) \r\n\r\n```\"identifier\": \"https://static.inaturalist.org/photos/12648077/original.jpg?1514760475\",```\r\n\r\n(And my understanding is those media identifiers are supposed to be unique/follow a URI structure, but aren't always a resolvable URL -- at least on GBIF and generally in the Audubon Core `dcterms:identifier` field)\r\n\r\nI hadn't been thinking of media format type, but cheers to Wikidata as a reasonable choice, especially as a starting point for less common media formats or things without a main/direct repository to pull from.  (\"[JHOVE](http://jhove.openpreservation.org/)\" & \"[PRONOM](http://www.nationalarchives.gov.uk/aboutapps/PRONOM/tools.htm)\" might relate here, but I'm out of my depth with those)\r\n\r\nGood thinking on FundRef, too.  It sounds like ORCID Organization IDs might overlap with FundRef and GRBio/SciColl, but the record data that could be pulled from each might be useful in different situations?  (If that's not inviting disambiguation-problems -- & I don't think it would?)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389758394",
    "html_url": "https://github.com/ropensci/unconf18/issues/52#issuecomment-389758394",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/52",
    "id": 389758394,
    "user": {
     "login": "amoeba",
     "id": 563,
     "avatar_url": "https://avatars2.githubusercontent.com/u/563?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/amoeba",
     "html_url": "https://github.com/amoeba",
     "followers_url": "https://api.github.com/users/amoeba/followers",
     "following_url": "https://api.github.com/users/amoeba/following{/other_user}",
     "gists_url": "https://api.github.com/users/amoeba/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/amoeba/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/amoeba/subscriptions",
     "organizations_url": "https://api.github.com/users/amoeba/orgs",
     "repos_url": "https://api.github.com/users/amoeba/repos",
     "events_url": "https://api.github.com/users/amoeba/events{/privacy}",
     "received_events_url": "https://api.github.com/users/amoeba/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T06:25:06Z",
    "author_association": "NONE",
    "body": "> I believe that @amoeba has worked something similar for DataONE.\r\n\r\nMore or less, yeah! I've been generally working in this area for a few years along with many other collaborators. I feel like there are two issues that come up a lot:\r\n\r\n1. Scientists don't know/want to make use of identifiers in their work\r\n2. Scientists who (magically) do want to use identifiers might not be able to find an appropriate one / can't easily expand the existing identifier space for their needs\r\n\r\nI think (1) is a much larger attack surface at this point and I'd love to brainstorm ideas. This feels somewhat related to https://github.com/ropensci/unconf18/issues/64 in that part of the research compendia review process might involve annotating code and data with appropriate identifiers (Hey, you might want to put your ORCID over here / annotate this column of this data file with this identifier)."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/52/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#52"
 },
 {
  "id": 319473179,
  "url": "https://github.com/ropensci/unconf18/issues/48",
  "title": "Package usage \"in the wild\"",
  "created_by": "batpigandme",
  "created_at": "5/2/2018",
  "body": "Related to #25 (see https://github.com/ropensci/unconf18/issues/25#issuecomment-384220571), but I think it's a sufficiently distinct approach to merit its own thread.\r\n\r\n### Overall idea\r\nAs a user, I often find it's helpful to see use-cases for packages and/or functions \"in the wild\" (i.e. in the context of some workflow or task). Some packages have great vignettes that cover this, but (limited to just a few people) there's simply no way for maintainers/developers to think of all the possible ways a package might come in handy. It can also be extremely helpful to read explanations from people who _didn't_ write the package, since they have a sort of \"beginner's mind.\" (I've done a few \"roundups\" of tweets, often of blog posts using various packages, e.g. for [purrr here](https://maraaverick.rbind.io/2017/09/-purrr-ty-posts/) for this reason).\r\n\r\nI imagine (and have anecdotal twitter evidence 😏) that maintainers _also_ like seeing how their packages are being used, but don't always get that feedback, even when it exists, since the avenues are somewhat limited.\r\n#### A very roughshod diagram of relationships among packages/feedback that exists \"formally\"\r\n![package_relationships](https://user-images.githubusercontent.com/831732/39514200-8a5fff60-4dc4-11e8-929e-8eeefa696de4.png)\r\n\r\nHere's where it gets fuzzy implementation-wise, but I've been wondering if there would be a good way to highlight package usage in blog posts or case studies (e.g. with blogdown), in such a way that users and maintainers would be able to easily find relevant content.\r\n\r\nCarl Goodwin's been doing something to this effect by including tables of packages and functions used in his blogposts (see example from [Surprising stories hide in seemingly mundane data](https://thinkr.biz/2017/12/20/geospatial/) below), but this is (to my knowledge) done by hand, and isn't something one would be necessarily be able to find from any docs related to, say, [rgeolocate](https://github.com/Ironholds/rgeolocate).\r\n<img width=\"554\" alt=\"thinkr_biz_r_toolkit\" src=\"https://user-images.githubusercontent.com/831732/39514941-9b29d454-4dc6-11e8-8122-69c12f4d90da.png\">\r\n\r\n### Stumbling blocks\r\n\r\n* Implementation (want to make it useful, without being platform-specific).\r\n* Would want it to be opt-in for package maintainers(?)\r\n* Possibly just a human communication issue that could be encouraged by, say, talking to other humans.\r\n* Breaking changes — blog posts might be an ephemeral format for this very reason.\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385919720",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-385919720",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 385919720,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/2/2018",
    "updated_at": "2018-05-02T09:32:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not related to feedback, but certainly to the broader \"usage in the wild\" issue is the option of trawling `.Rhistory` files for those who have/use them. This is an option we are pondering for the [`flipper`](https://github.com/ropenscilabs/flipper) package-discovery package. Users opt-in to allow trawling, with  relevant data extracted and uploaded for our analytic needs. Insight would be very crude, but better than nothing, and it would readily allow auto-extraction and analysis of a local code context in which package functions are used."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385931336",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-385931336",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 385931336,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/2/2018",
    "updated_at": "2018-05-02T10:18:26Z",
    "author_association": "NONE",
    "body": "Often when I want to see how a function or package is used _in other packages_ I'll do a GitHub search of CRAN packages using [the METACRAN org](https://github.com/cran). One could probably design some search patterns to identify R bookdown and blogdown sites on GitHub and crawl them to look at package or function usage. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385932929",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-385932929",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 385932929,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/2/2018",
    "updated_at": "2018-05-02T10:25:25Z",
    "author_association": "NONE",
    "body": "@noamross precisely! That's the piece I that has no loop, currently."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387233351",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-387233351",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 387233351,
    "user": {
     "login": "apreshill",
     "id": 12160301,
     "avatar_url": "https://avatars3.githubusercontent.com/u/12160301?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/apreshill",
     "html_url": "https://github.com/apreshill",
     "followers_url": "https://api.github.com/users/apreshill/followers",
     "following_url": "https://api.github.com/users/apreshill/following{/other_user}",
     "gists_url": "https://api.github.com/users/apreshill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/apreshill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/apreshill/subscriptions",
     "organizations_url": "https://api.github.com/users/apreshill/orgs",
     "repos_url": "https://api.github.com/users/apreshill/repos",
     "events_url": "https://api.github.com/users/apreshill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/apreshill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/7/2018",
    "updated_at": "2018-05-07T23:05:57Z",
    "author_association": "NONE",
    "body": "I ❤️ this idea. I think about this a lot when teaching, because all the formal documentation (by design and by necessity) shows functions typically in isolation, or only in combination with other functions within a package. Some good examples are usage of `dplyr` functions like `between` or `na_if` which in practice will typically go inside a `mutate`, but in the docs those examples aren't shown. _(A counter-example is for `case_when` where it is clearly shown how to use within a `mutate` 👍)_ These are just examples I've run into recently, but it is always a struggle when I teach.\r\n\r\n\"In the Wild\" though, most people use functions across several different packages. A stumbling block I recently ran into learning `purrr` turned out to be that I failed to realize a function from `dplyr` was actually what I needed in my workflow (`bind_rows`!). So, I'm excited about the idea to help users better discover how functions are used in context, and perhaps which co-occur frequently (sort of like on Amazon, other users who used this package/function used it along with these other ones). \r\n\r\nI also like the idea of building off of and aggregating all the awesome \"real world\" code examples on blogs, like the R weekly [\"R in the Real World\"](https://rweekly.org/#RintheRealWorld) features and [\"code throughs\"](https://twitter.com/search?q=from%3Adataandme%20code-through&src=typd) as @batpigandme labels on twitter. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388030549",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388030549",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388030549,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/10/2018",
    "updated_at": "2018-05-10T11:44:33Z",
    "author_association": "NONE",
    "body": "@apreshill yeah, I feel like there is so much great material out there, but it can be really hard to find — especially when you're in the throes of getting something done, _but_ the bite-sized, real-world examples are often exactly what you need for that click 💡 !\r\n\r\nAs you (obviously) know, this is certainly true with blogdown (see the thread Alison started on the rstudio community site [here](https://community.rstudio.com/t/what-is-hard-about-blogdown/8108)), and I think one of the difficulties is that people end up submitting questions as GitHub issues, making it hard on the maintainer(s) (again, thinking of blogdown here).\r\n\r\nAnyway, just spitballing at this point, but I have been thinking about this as I've been following the thread you started!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388656770",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388656770",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388656770,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/13/2018",
    "updated_at": "2018-05-13T21:19:36Z",
    "author_association": "NONE",
    "body": "> Carl Goodwin's been doing something to this effect by including tables of packages and functions used in his blogposts\r\n\r\nI like the idea of gathering all functions across multiple packages in a single searchable table. I would like to see/help-build such a thing for rOpenSci and the tidyverse. Using a `DT::datatable()`  this seems like a short unconf project ([example](https://forestgeo.github.io/fgeo/articles/fgeo.html#functions), [doc](https://forestgeo.github.io/fgeo/reference/fgeo_index.html)). \r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388773438",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388773438",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388773438,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T10:39:31Z",
    "author_association": "NONE",
    "body": "> I like the idea of gathering all functions across multiple packages in a single searchable table.\r\n\r\nThey're by no means mutually-exclusive, but I think these ideas differ in that the one is about navigating the _existing_ documentation."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388792316",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388792316",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388792316,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T12:30:38Z",
    "author_association": "NONE",
    "body": "I also believe that it would be nice to have better ways to navigate the existing documentation. And in fact, you can think of  the table I suggest as a central interface to do precisely that -- a tool to navigate all the existing documentation of the packages in an onganization. I should clarify that my suggestion is not to generate a table manually but automaticaly. \r\n\r\nHere are some implementation details:\r\n\r\n* For any list of installed packages (e.g. `pkgs <- c(\"fgeo.base\", \"fgeo.map\", \"fgeo.tool\")`) it is easy to table all functions by package (also of datasets by package).\r\n* If those packages belong to a single github organization, the links to their corresponding pkgdown websites have a consistent structure (e.g. https://forestgeo.github.io/fgeo.base/, https://forestgeo.github.io/fgeo.map/, https://forestgeo.github.io/fgeo.tool/). It is then easy to create the links programatically for an organization with lots of packages such as rOpenSci.\r\n* By using the `DT::datatable()` widget, the table can be searchable and clickable.\r\n\r\nYou can maintain this table with almost no extra effort. You can include the table in a vignette of a meta-package (e.g. __tidyverse__ and [__fgeo__](https://forestgeo.github.io/fgeo/articles/fgeo.html)). Because the meta-package tracks package versions, updating the vignette of the meta-package updates the table of functions by package.\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388912451",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388912451",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388912451,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T18:14:20Z",
    "author_association": "NONE",
    "body": "> I also believe that it would be nice to have better ways to navigate the existing documentation. \r\n\r\nI agree, I'm wondering if it might be worth making this into its own thread, especially since you seem to have so much of the code in place, and it's possible this could be accomplished pretty quickly (IIRC, there were a few indivs/groups who did more than one \"project\"/tackled more than one issue at last year's unconf).\r\n\r\nSo, I think it's worthwhile to be clear and disambiguate two potential projects"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388930225",
    "html_url": "https://github.com/ropensci/unconf18/issues/48#issuecomment-388930225",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/48",
    "id": 388930225,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T19:13:36Z",
    "author_association": "NONE",
    "body": "**Summary**: [Design patterns to] identify, and aggregate applied usage of packages and constituent functions as they're used in practice/conjunction with other packages). Implement some sort of option for package developers to easily point to package function use in \"R in the Real World\"/\"code-through\" examples."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/48/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#48"
 },
 {
  "id": 324046948,
  "url": "https://github.com/ropensci/unconf18/issues/71",
  "title": "Open Source Qualitative Coding Tool",
  "created_by": "bduckles",
  "created_at": "5/17/2018",
  "body": "I would love to see a lightweight, non GUI, open source qualitative coding tool. I know that RQDA exists, but I’ve never gotten it to work and it appears it hasn’t been updated since 2012. I could be missing something (please tell me if I am!) but I rarely have seen anything that is open source, uses R and actually works to help with coding.\r\n\r\nThere are a myriad of text coding tools out there, many of which are quite sophisticated and complex (NVIVO, Atlas TI, MAX QDA). None of these are open source, all of them cost a lot of money. For most of what people need when doing basic qualitative analysis, this can be like bringing an industrial grade shredder when all you need is a paring knife. I’ve started using the mac program Annotations to do basic, small scale coding projects. It’s kind of a GUI paring knife. Cons: It's only available for macs and is not being further developed, it’s not open source and it’s a GUI. \r\n\r\nI’d love to see something where the data analysis is more reproducible and open source. Can we please just make an open source paring knife for qualitative coding?\r\n\r\nMost of what folks need when doing qual research is a way to highlight text and code it. There are complicated things you can do with those codes, there’s the issue of concatenated codes or multiple codes and there are more things to worry about once you have the codes etc. But if we had a straightforward way to yank quotes out of a text file, code them and then dump all of that into a dataset, I suspect people would happily use it so that they don’t have to shell out $$$ for a an industrial grade coding tool to do a simple text analysis project.  \r\n\r\nOne idea would be to use some form of markdown-like syntax to use with text files that would indicate the coding of quotes within the text. Then an R package would pull out the quotes with the codes attached and create a dataset from a text file, possibly also with the text file name as a variable. It’d be simple, it wouldn’t do all the things one might *want* but it would be a starting place. This is just an idea, I’d love more ideas/advice/thoughts on how to manage something like this. \r\n\r\nAlso, IANA developer. I’m a noob R coder, but I do love mixed methods and R and know a lot of folks who would love to find a solution.    ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389927157",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-389927157",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 389927157,
    "user": {
     "login": "stefaniebutland",
     "id": 11927811,
     "avatar_url": "https://avatars0.githubusercontent.com/u/11927811?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stefaniebutland",
     "html_url": "https://github.com/stefaniebutland",
     "followers_url": "https://api.github.com/users/stefaniebutland/followers",
     "following_url": "https://api.github.com/users/stefaniebutland/following{/other_user}",
     "gists_url": "https://api.github.com/users/stefaniebutland/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stefaniebutland/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stefaniebutland/subscriptions",
     "organizations_url": "https://api.github.com/users/stefaniebutland/orgs",
     "repos_url": "https://api.github.com/users/stefaniebutland/repos",
     "events_url": "https://api.github.com/users/stefaniebutland/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stefaniebutland/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T16:26:56Z",
    "author_association": "COLLABORATOR",
    "body": "@bduckles a) love that you're bringing qualitative research in here; b) so that others can better understand your idea, could you explain briefly what qualitative coding is? The word \"coding\" has a specific meaning to R folk that is different from what I think you mean. Maybe even modify the issue title?\r\n\r\nCould you link to an example - not necessarily an academic paper - that illustrates an application of qualitative coding? Goal of this is to get people to understand the value of what you are proposing."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389931628",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-389931628",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 389931628,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T16:40:45Z",
    "author_association": "NONE",
    "body": "Big fan of this - we do a bunch of qualitative coding on both scientific literature and semi-structured interviews.  We work with MAXQDA but its outputs don't fit super easily into an R analysis pipeline. \r\n\r\nThe PDF highlighting workflow from the [tabulizer](https://github.com/ropensci/tabulizer) might be something to build off of - it's an R-linked GUI for selecting tables in a PDF to convert to tabular data in R.  "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389933956",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-389933956",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 389933956,
    "user": {
     "login": "bduckles",
     "id": 6986662,
     "avatar_url": "https://avatars2.githubusercontent.com/u/6986662?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bduckles",
     "html_url": "https://github.com/bduckles",
     "followers_url": "https://api.github.com/users/bduckles/followers",
     "following_url": "https://api.github.com/users/bduckles/following{/other_user}",
     "gists_url": "https://api.github.com/users/bduckles/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bduckles/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bduckles/subscriptions",
     "organizations_url": "https://api.github.com/users/bduckles/orgs",
     "repos_url": "https://api.github.com/users/bduckles/repos",
     "events_url": "https://api.github.com/users/bduckles/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bduckles/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T16:48:41Z",
    "author_association": "NONE",
    "body": "Yes! Thank you @stefaniebutland, let me see if I can do a bit of explaining - I realize the word coding is a problem in this, but really, this is what Qual researchers call it. I'd have to think about how best to talk about it in a world where R folks use the word coding. Maybe I'll use the word QualCodes to distinguish in this description? \r\n\r\nA decent overview would be [this Saldana chapter](https://www.sagepub.com/sites/default/files/upm-binaries/24614_01_Saldana_Ch_01.pdf). Don't get too bogged down with the details of how she does it as there are a variety of schools of thoughts on how to do it. But I've taken a screenshot from the chapter that I think illustrates what coding for Qual researchers is:\r\n<img width=\"495\" alt=\"screen shot 2018-05-17 at 10 32 30 am\" src=\"https://user-images.githubusercontent.com/6986662/40191073-a2670fc2-59bd-11e8-98c2-bfc466c12a42.png\">\r\n\r\nOn the left is text (think of this as any textual qualitative data e.g. interview transcripts, field notes or notes you write up about your experiences in the field, documents written by people you are studying) on the right the researcher has come up with QualCodes which in this case are one word descriptions of how to categorize the quote on the left. \r\n\r\nCreating these Qual Codes is an iterative process for a qualitative researcher. They will often change, lump together, split or re organize these QualCodes as they go through more and more data. Depending on the type of QualCoding you do and the process you're using there are a variety of ways to do this and schools of thought in terms of how to do it. As a starting place I don't think we need to be too opinionated for a simple tool. Later on we could get more sophisticated but a simple tool would just let the researcher assign QualCodes and let the quotes be sorted with them, perhaps turning the quotes, codes and filenames into a dataset. Most researchers will also write a codebook or research notes for each QualCode that describes what they refer to. That may or may not be a part of this tool. I think it would be useful regardless. \r\n \r\nThe biggest problem comes when there is a quote that fits into multiple QualCodes, or one subsection of a piece of text is evidence for a QualCode, but the longer quote is helpful for a different QualCode. Maybe there's an elegant solution for this, or maybe not. I still think a very simple tool for using a text based interface to assign codes and turn that into data would be REALLY useful. \r\n\r\nI'll think more about how I might explain the problem more succinctly. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389987143",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-389987143",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 389987143,
    "user": {
     "login": "dsholler",
     "id": 29414208,
     "avatar_url": "https://avatars1.githubusercontent.com/u/29414208?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/dsholler",
     "html_url": "https://github.com/dsholler",
     "followers_url": "https://api.github.com/users/dsholler/followers",
     "following_url": "https://api.github.com/users/dsholler/following{/other_user}",
     "gists_url": "https://api.github.com/users/dsholler/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/dsholler/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/dsholler/subscriptions",
     "organizations_url": "https://api.github.com/users/dsholler/orgs",
     "repos_url": "https://api.github.com/users/dsholler/repos",
     "events_url": "https://api.github.com/users/dsholler/events{/privacy}",
     "received_events_url": "https://api.github.com/users/dsholler/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T19:50:00Z",
    "author_association": "NONE",
    "body": "I've been looking around for solutions to this very problem, so I'm glad you raised the issue here! I'm trained in using Atlas.ti, which is not bad, but comes with a ton of issues that you've laid out nicely (the big one being that it is proprietary). I'm probably going to end up repeating some of what Beth said, but here are my two cents:\r\n\r\nTo add a bit about one of the processes for QDA, particularly Strauss & Corbin/Miles & Huberman's approaches, it can be thought of as layering interpretation onto the text. You start with open coding, meaning that you're free to tag snippets of text with whatever descriptions you want. For instance, if I'm coding observation notes and I think conversations between two individuals will be relevant to my research questions, I'll tag the instances in which the two individuals speak with \"A-B conversation.\" In the next round of coding, I might classify what they discuss with a finer tag, like \"A-B conversation - package maintenance.\" In another round, I might get even more specific with something like \"A-B conversation - package maintenance - no money to pay people.\" Later rounds involve conflating codes that might mean the same thing, relating codes to one another (often by documenting their meanings in a similar way to software documentation), and eliminating codes that no longer make sense. \r\n\r\nSometimes we'll also do some theoretical coding, where you look for instances that demonstrate some concept or mechanism from the academic literature on the subject. That's more common toward the end of the process in my field (organization studies/management/whatever the heck I do), but is prominent as an approach from the beginning in fields with experimental or clinical roots (e.g., psychology).\r\n\r\nThe utility of using software for this is that you can nest codes, then begin to see the number of instances of a particular code you've applied. Maybe more importantly, you can see where codes co-occur (i.e., where multiple codes have been applied to the same snippets of text), and other linking kinds of things that help you see what's thematic and what's not. So I agree with Beth - we all need something very, very simple that doesn't cost a million dollars. It would be nice, of course, to be able to visualize codes and the relationships between them in new and innovative ways, but for the most part the process is very simple and every qualitative researcher I've talked to desires a simple tool. Some even use Endnote things like that because, as Beth said, lightweight is best (especially for smaller projects). "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389995848",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-389995848",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 389995848,
    "user": {
     "login": "dsholler",
     "id": 29414208,
     "avatar_url": "https://avatars1.githubusercontent.com/u/29414208?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/dsholler",
     "html_url": "https://github.com/dsholler",
     "followers_url": "https://api.github.com/users/dsholler/followers",
     "following_url": "https://api.github.com/users/dsholler/following{/other_user}",
     "gists_url": "https://api.github.com/users/dsholler/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/dsholler/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/dsholler/subscriptions",
     "organizations_url": "https://api.github.com/users/dsholler/orgs",
     "repos_url": "https://api.github.com/users/dsholler/repos",
     "events_url": "https://api.github.com/users/dsholler/events{/privacy}",
     "received_events_url": "https://api.github.com/users/dsholler/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T20:15:01Z",
    "author_association": "NONE",
    "body": "I'll also add - GUI would be very helpful from my end, and definitely for broader adoption as well. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390012374",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390012374",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390012374,
    "user": {
     "login": "bduckles",
     "id": 6986662,
     "avatar_url": "https://avatars2.githubusercontent.com/u/6986662?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bduckles",
     "html_url": "https://github.com/bduckles",
     "followers_url": "https://api.github.com/users/bduckles/followers",
     "following_url": "https://api.github.com/users/bduckles/following{/other_user}",
     "gists_url": "https://api.github.com/users/bduckles/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bduckles/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bduckles/subscriptions",
     "organizations_url": "https://api.github.com/users/bduckles/orgs",
     "repos_url": "https://api.github.com/users/bduckles/repos",
     "events_url": "https://api.github.com/users/bduckles/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bduckles/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T21:09:04Z",
    "author_association": "NONE",
    "body": "Thanks for your thoughts @dsholler, I'm really looking forward to a continued conversation on this topic and so glad I'm not alone with this problem! It's helpful to hear how you think about qual coding process and agree with the layering interpretation. \r\n\r\nHonestly I think the simple tools are the most beneficial. Folks end up defaulting to printing things out and using sticky notes and folder because they can't find a tool that actually works for them and doesnt cost a ton of money. Something simple would maybe not solve ALL the problems, but if it did what it was supposed to do elegantly and in a lightweight way, it'd be helpful for folks just trying to do some basic analysis. \r\n\r\nI'd say the reason that I don't love GUI's is that I find myself wanting keyboard shortcuts for the actual coding. I personally find a lot of clicking to be challenging to my wrists and I wonder about the reproducibility as changes are made. That said, I'm open if you think a GUI interface would be more effective and beneficial for the long term adoption. The primary thing for me would be something that actually works and is open source.   "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390019976",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390019976",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390019976,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T21:35:07Z",
    "author_association": "NONE",
    "body": "As a veteran of hundreds of hours of NVivo…literally at least 200 interviews which I also had to transcribe (yay, undergrad-ness), I can definitely say that this'd be awesome!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390059699",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390059699",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390059699,
    "user": {
     "login": "bduckles",
     "id": 6986662,
     "avatar_url": "https://avatars2.githubusercontent.com/u/6986662?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/bduckles",
     "html_url": "https://github.com/bduckles",
     "followers_url": "https://api.github.com/users/bduckles/followers",
     "following_url": "https://api.github.com/users/bduckles/following{/other_user}",
     "gists_url": "https://api.github.com/users/bduckles/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/bduckles/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/bduckles/subscriptions",
     "organizations_url": "https://api.github.com/users/bduckles/orgs",
     "repos_url": "https://api.github.com/users/bduckles/repos",
     "events_url": "https://api.github.com/users/bduckles/events{/privacy}",
     "received_events_url": "https://api.github.com/users/bduckles/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-18T00:52:20Z",
    "author_association": "NONE",
    "body": "Chatting with my brother about the idea he suggested we look at  https://web.hypothes.is/ and their code here: https://github.com/hypothesis/h \r\n\r\nHe thought maybe this tool could offer a foundation for the solution. He says \"So you could imagine a way that your browser opens with a file, you annotate, then you have a coded dataset spit back into R.\" That would mean we'd need a JS developer, but it might be a way forward. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390084561",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390084561",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390084561,
    "user": {
     "login": "itcarroll",
     "id": 3383837,
     "avatar_url": "https://avatars3.githubusercontent.com/u/3383837?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/itcarroll",
     "html_url": "https://github.com/itcarroll",
     "followers_url": "https://api.github.com/users/itcarroll/followers",
     "following_url": "https://api.github.com/users/itcarroll/following{/other_user}",
     "gists_url": "https://api.github.com/users/itcarroll/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/itcarroll/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/itcarroll/subscriptions",
     "organizations_url": "https://api.github.com/users/itcarroll/orgs",
     "repos_url": "https://api.github.com/users/itcarroll/repos",
     "events_url": "https://api.github.com/users/itcarroll/events{/privacy}",
     "received_events_url": "https://api.github.com/users/itcarroll/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-18T18:18:24Z",
    "author_association": "NONE",
    "body": "I built a relevant Shiny app for some workshoppers at [SESYNC](https://www.sesync.org), who were gearing up to do some mixed methods research. It's a \"lightweight\" GUI to help with coding text scraped from a Wordpress blog. Feel free to `shiny::runGitHub('ShAQDAS', 'itcarroll')` and poke around at [itcarroll/ShAQDAS](https://github.com/itcarroll/ShAQDAS).\r\n\r\nThanks to Fellow @khondula for pointing me to this thread, motivating the push to GitHub."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390347217",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390347217",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390347217,
    "user": {
     "login": "zachary-foster",
     "id": 6090555,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6090555?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/zachary-foster",
     "html_url": "https://github.com/zachary-foster",
     "followers_url": "https://api.github.com/users/zachary-foster/followers",
     "following_url": "https://api.github.com/users/zachary-foster/following{/other_user}",
     "gists_url": "https://api.github.com/users/zachary-foster/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/zachary-foster/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/zachary-foster/subscriptions",
     "organizations_url": "https://api.github.com/users/zachary-foster/orgs",
     "repos_url": "https://api.github.com/users/zachary-foster/repos",
     "events_url": "https://api.github.com/users/zachary-foster/events{/privacy}",
     "received_events_url": "https://api.github.com/users/zachary-foster/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:24:48Z",
    "author_association": "NONE",
    "body": "I have never heard of qualitative coding before, but it sounds interesting!\r\n\r\n I found something that might help with making a shiny GUI that can select text and assign codes from https://stackoverflow.com/questions/42274461/can-shiny-recognise-text-selection-with-mouse-highlighted-text:\r\n\r\n```r\r\nlibrary(shiny)\r\n\r\ntext1 <- \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec quam ut tortor interdum pulvinar id vitae magna. Curabitur commodo consequat arcu et lacinia. Proin at diam vitae lectus dignissim auctor nec dictum lectus. Fusce venenatis eros congue velit feugiat, ac aliquam ipsum gravida. Cras bibendum malesuada est in tempus. Suspendisse tincidunt, nisi non finibus consequat, ex nisl condimentum orci, et dignissim neque est vitae nulla.\" \r\ntext2 <- \"Aliquam ut purus neque. Maecenas justo orci, semper eget purus eu, aliquet molestie mi. Duis convallis ut erat at faucibus. Quisque malesuada ante elementum, tempor felis et, faucibus orci. Praesent iaculis nisi lorem, non faucibus neque suscipit eu. Ut porttitor risus eu convallis tristique. Integer ac mauris a ex maximus consequat eget non felis. Pellentesque quis sem aliquet, feugiat ligula vel, convallis sapien. Ut suscipit nulla leo\"\r\nhighlight <- '\r\n                function getSelectionText() {\r\nvar text = \"\";\r\nif (window.getSelection) {\r\ntext = window.getSelection().toString();\r\n} else if (document.selection) {\r\ntext = document.selection.createRange().text;\r\n}\r\nreturn text;\r\n}\r\n\r\ndocument.onmouseup = document.onkeyup = document.onselectionchange = function() {\r\nvar selection = getSelectionText();\r\nShiny.onInputChange(\"mydata\", selection);\r\n};\r\n'\r\n\r\ncoded_text <- character(0)\r\n\r\nui <- bootstrapPage(\r\n  tags$script(highlight),\r\n  fluidRow(\r\n    column(4,\r\n           tags$h1(\"Text to code\"),\r\n           tags$h2(\"From table\"),\r\n           tableOutput(\"table\"),\r\n           tags$h2(\"From raw text\"),\r\n           verbatimTextOutput(\"text\")\r\n    ),\r\n    column(4,\r\n           tags$h1(\"Coding options\"),\r\n           actionButton(\"code1\", \"Assign selected text to Code1\"),\r\n           tags$h1(\"Code1 output\"),\r\n           verbatimTextOutput(\"selected_text\")\r\n    )\r\n  )\r\n)\r\n\r\n\r\nserver <- function(input, output) {\r\n  output$table <- renderTable({\r\n    data.frame(paragraph = 1:2, text = c(text1, text2))\r\n  })\r\n\r\n  output$text <- renderText(paste(text1, text2))\r\n\r\n  coded <- eventReactive(input$code1, {\r\n    coded_text <<- c(coded_text, input$mydata)\r\n    coded_text\r\n  })\r\n\r\n  output$selected_text <- renderPrint({\r\n    coded()\r\n  })\r\n\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n```\r\n\r\n@itcarroll, looks good! I did see on your repo:\r\n\r\n> Highlighting would be nice; any idea how to implement?\r\n\r\nWould the above trick help with that?\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390350138",
    "html_url": "https://github.com/ropensci/unconf18/issues/71#issuecomment-390350138",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/71",
    "id": 390350138,
    "user": {
     "login": "itcarroll",
     "id": 3383837,
     "avatar_url": "https://avatars3.githubusercontent.com/u/3383837?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/itcarroll",
     "html_url": "https://github.com/itcarroll",
     "followers_url": "https://api.github.com/users/itcarroll/followers",
     "following_url": "https://api.github.com/users/itcarroll/following{/other_user}",
     "gists_url": "https://api.github.com/users/itcarroll/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/itcarroll/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/itcarroll/subscriptions",
     "organizations_url": "https://api.github.com/users/itcarroll/orgs",
     "repos_url": "https://api.github.com/users/itcarroll/repos",
     "events_url": "https://api.github.com/users/itcarroll/events{/privacy}",
     "received_events_url": "https://api.github.com/users/itcarroll/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:36:08Z",
    "author_association": "NONE",
    "body": "@zachary-foster Glad you got it working :)\r\n\r\nFor me, the question about highlighting is more about how to store the data on what's selected. Do you input a `<span>` element into the text? Do you store starting and ending character positions? Both have drawbacks."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/71/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#71"
 },
 {
  "id": 317733023,
  "url": "https://github.com/ropensci/unconf18/issues/41",
  "title": "Lesson/Examples of how to clean 'field' data",
  "created_by": "aurielfournier",
  "created_at": "4/25/2018",
  "body": "This might be too field ecology specific, but I think it could be useful more broadly. \r\n\r\nThis is a situation I ran into in my grad school work, and I know many others who are doing field work where they are collecting data hard copy, and then entering it every few days over several months of work run into. \r\n\r\nThere are data entry errors, spellings, issues, etc, plus you also end up with dozens of files that have been entered, probably my different people, etc. \r\n\r\nI dealt with this in my own field work by creating a script I ran over all the files, checked them for the correct spelling of different things, and then printed out the things that were wrong. \r\n\r\nThis code is not my finest, but it got me through my phd. \r\n\r\nMaybe something that does this better already exists, and I just need to learn what it is so I can point others with this issue towards it. \r\n\r\nBut if it doesn't, this would be something I'd love to work on building. \r\n\r\nI realize this functionality already exists in open refine, but I personally don't care for open refine, so I did it this way. \r\n\r\n\r\n\r\n```file_names <- list.files(pattern=\".csv\")\r\n\r\n# these are the vectors of values that I am ok with, with the correct spellings\r\n\r\n# areas are my study areas\r\nareas <- c(\"nvca\",\"scnwr\",\"fgca\",\"slnwr\",\"tsca\",\"bkca\",\"ccnwr\",\"dcca\",\"osca\",\"tmpca\")\r\n\r\n# impound is my wetland impoundments\r\nimpound <- c(\"rail\",\"sanctuary\",\"ash\",\"scmsu2\",\"scmsu3\",\"sgd\",\"sgb\",\"pool2\",\"pool2w\",\"pool3w\",\"m11\",\"m10\",\"m13\",\"ts2a\",\"ts4a\",\"ts6a\",\"ts8a\",\"kt9\",\"kt2\",\"kt5\",\"kt6\",\"ccmsu1\",\"ccmsu2\",\"ccmsu12\",\"dc14\",\"dc18\",\"dc20\",\"dc22\",\"os21\",\"os23\",\"pooli\",\"poole\",\"poolc\")\r\n\r\n# regions are the four regions\r\nregions <- c(\"nw\",\"nc\",\"ne\",\"se\")\r\n\r\n# plant spellings that are correct \r\nplant <- c(\"reed canary grass\",\"primrose\",\"millet\",\"bulrush\",\"partridge pea\",\"spikerush\",\"a smartweed\",\"p smartweed\",\"willow\",\"tree\",\"buttonbush\",\"arrowhead\",\"river bulrush\",\"biden\",\"upland\",\"cocklebur\",\"lotus\",\"grass\",\"cattail\",\"prairie cord grass\",\"plantain\",\"sedge\",\"sesbania\",\"typha\",\"corn\",\"sumpweed\",\"toothcup\",\"frogfruit\",\"canola\",\"sedge\",\"crop\",\"rush\",\"goldenrod\",NA)\r\n\r\nfor(i in 1:length(file_names)){\r\n  int <-  read.csv(file_names[i])\r\n# so this prints out instances where three are things that are not part of the lists above and includes the file name so I can go and find the issue.   \r\n  print(paste0(int[(int$region %in% regions==FALSE),]$region,\" \",file_names[i],\" region\"))\r\n  print(paste0(int[(int$area %in% areas==FALSE),]$area,\" \",file_names[i],\" area\"))\r\n  print(paste0(int[(int$impound %in% impound==FALSE),]$impound,\" \",file_names[i],\" impound\"))\r\n  print(paste0(int[(int$plant1 %in% plant==FALSE),]$plant1,\" \",file_names[i],\" plant1\"))\r\n  print(paste0(int[(int$plant2 %in% plant==FALSE),]$plant2,\" \",file_names[i],\" plant2\"))\r\n  print(paste0(int[(int$plant3 %in% plant==FALSE),]$plant3,\" \",file_names[i],\" plant3\"))\r\n}\r\n\r\n## once I resolve all of the issues identified from above I then read in all the files, put them in a list and I can stitch them together into one master file. \r\n\r\nvegsheets <- list()\r\n\r\nfor(i in 1:length(file_names)){\r\n  vegsheets[[i]] <- read.csv(file_names[i])\r\n}\r\n\r\n## this takes the list and combines it all together into one data frame\r\nmasterdat <- do.call(rbind, vegsheets)\r\n\r\n# write it out into a master file\r\nwrite.csv(masterdat, \"~/Github/data/2015_veg_master.csv\", row.names=FALSE)```",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384394506",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-384394506",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 384394506,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T18:48:45Z",
    "author_association": "NONE",
    "body": "I have many of these, and they all require something a little different, but the tool I use most is [**assertr**](https://github.com/ropensci/assertr)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384423607",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-384423607",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 384423607,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T20:29:24Z",
    "author_association": "NONE",
    "body": "I think this is actually a pretty broad problem, at least in epidemiology. For example, if you're using data from a hospital-based reporting system, the fields in the raw data may change over time, or based on the person doing the query for you,and there are ample opportunities for this to wreak havoc.\r\n\r\nNot sure if existing tools are adequate to cover these issues or not, although I think a broader problem is getting people responsible for these kinds of data to 1) pay attention to these issues and 2) take the time to use the tools!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384511340",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-384511340",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 384511340,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T04:43:14Z",
    "author_association": "MEMBER",
    "body": "I like the idea of structuring \"Lessons\" @aurielfournier  \r\n\r\nReg. `assertr` is there a way to automatically write the commands based on a table with allowed values? Or based on say EML metadata?\r\n\r\nThe list of tips could also feature https://github.com/ChrisMuir/refinr "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384535859",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-384535859",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 384535859,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T07:06:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I concur with @jzelner on the broadness of the issue. It confronts me constantly via the [`bikedata` package](https://github.com/ropensci/bikedata), where different cities generally use their own data formats, and often inconsistently. I've recently adapted the whole thing to a dictionary-style lookup table of possible column names, but this is just at a first-cut stage. It is nevertheless pure C/C++, so I'd be keen to converse, listen, input on nice ways of interfacing R and C++ in this regard."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384749573",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-384749573",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 384749573,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T18:43:54Z",
    "author_association": "MEMBER",
    "body": "I think this is great topic, and a tricky one.  I think the current situation involves both shortcomings of tooling and shortcomings of outreach, and I agree that one-size-fits-all solutions like OpenRefine only go so far -- like many tools in this space, it can feel both overbearing and not smart enough at the same time.\r\n\r\nI definitely believe that \"Standards\" are a key part of finding happiness here, but they can also be a part of the problem.  Dates are a good trivial example: sure, python and ruby have libraries that can reliably parse \"Tuesday after Christmas 2012\" into a date, but I think we can all agree that dates are suddenly much easier to work with if [we all just use ISO-8601](https://xkcd.com/1179/).  \r\n\r\nIn ecology/evolution, we have similar solution for the whole problem of working with species name issues, (spelling, formatting, different higher taxonomy definitions, etc) by using taxonomic identifiers, but afik these have had very little penetration among anyone who actually sees their critters in the field, and very much suffers from [problem #927](https://xkcd.com/927/). \r\n\r\nIdeally, good tooling would pay us immediate dividends for using standards.  e.g. I think that's the case with dates, there's an immediate benefit in being able to date-time math etc this way (instead of, say, having separate columns for day, month, and year; which is still too common).  but for others like taxon ids, there's no obvious benefit.  Spatial descriptions are somewhat in-between -- if you already do spatial analysis you already use spatial standards, but for the rest of us it's easy to feel like you need a master's in GIS before that would be useful, so we just name our regions and sites with convenient labels and get on with it.  Tooling that made it easier rather than harder to describe our somewhat standard data in a standard way could, IMHO, make a big difference.  But I think we still have too few examples of these tools that are easy enough and modular enough to quickly integrate into field-data-collection workflow.  Would love to join a brainstorm on this and bounce some of my no doubt hopelessly idealistic ideas off others!\r\n\r\n "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/386900227",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-386900227",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 386900227,
    "user": {
     "login": "magpiedin",
     "id": 8563362,
     "avatar_url": "https://avatars3.githubusercontent.com/u/8563362?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/magpiedin",
     "html_url": "https://github.com/magpiedin",
     "followers_url": "https://api.github.com/users/magpiedin/followers",
     "following_url": "https://api.github.com/users/magpiedin/following{/other_user}",
     "gists_url": "https://api.github.com/users/magpiedin/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/magpiedin/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/magpiedin/subscriptions",
     "organizations_url": "https://api.github.com/users/magpiedin/orgs",
     "repos_url": "https://api.github.com/users/magpiedin/repos",
     "events_url": "https://api.github.com/users/magpiedin/events{/privacy}",
     "received_events_url": "https://api.github.com/users/magpiedin/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/6/2018",
    "updated_at": "2018-05-06T18:14:54Z",
    "author_association": "NONE",
    "body": "Keen to hear more on this, too!  Ditto the need for more examples of tools & standards \"outreach\" -- at the overall dataset-structure/schema-level, too.\r\n\r\nMaelle, were you picturing something like being able to point `assertr` at an EML schema &/or other standards/vocabs, e.g.:\r\n- [EML 2.1.1](https://github.com/ropensci/EML/tree/master/inst/xsd/eml-2.1.1) (...in the handy [ropensci/EML](https://github.com/ropensci/EML) package)\r\n- [Darwin Core](https://github.com/tdwg/dwc/blob/master/standard/documents/xml/tdwg_dwcterms.xsd)\r\n\r\n[RDA's list](http://rd-alliance.github.io/metadata-directory/standards/) of data standards defined in XML/RDF could be another resource to include if it helps generalize this example to other fields/domains that have their own formally-defined/under-used data standards--if that's not wandering out of scope here.  (& either way, ra for hopeless idealism! :)\r\n\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387299151",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-387299151",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 387299151,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T06:32:05Z",
    "author_association": "MEMBER",
    "body": "@magpiedin yes I was imagining a wrapper that'd take your raw-ish data and an EML as arguments and output the discrepancies. I don't know other metadata standards well enough 😉 Btw for EML creation there's also the WIP https://github.com/cboettig/eml2 by @cboettig "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387502800",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-387502800",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 387502800,
    "user": {
     "login": "magpiedin",
     "id": 8563362,
     "avatar_url": "https://avatars3.githubusercontent.com/u/8563362?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/magpiedin",
     "html_url": "https://github.com/magpiedin",
     "followers_url": "https://api.github.com/users/magpiedin/followers",
     "following_url": "https://api.github.com/users/magpiedin/following{/other_user}",
     "gists_url": "https://api.github.com/users/magpiedin/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/magpiedin/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/magpiedin/subscriptions",
     "organizations_url": "https://api.github.com/users/magpiedin/orgs",
     "repos_url": "https://api.github.com/users/magpiedin/repos",
     "events_url": "https://api.github.com/users/magpiedin/events{/privacy}",
     "received_events_url": "https://api.github.com/users/magpiedin/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T18:44:36Z",
    "author_association": "NONE",
    "body": "There's a version 2 in the works, you say?  This makes my day :)\r\n\r\nI threw in Darwin Core here on the off-chance that the field scenario @aurielfournier has in mind includes any species observation/occurrence data (e.g., inventorying wildlife in a particular area?).  If it's a more experimental/other scenario, though, all ears, too."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387548153",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-387548153",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 387548153,
    "user": {
     "login": "aurielfournier",
     "id": 7707957,
     "avatar_url": "https://avatars0.githubusercontent.com/u/7707957?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/aurielfournier",
     "html_url": "https://github.com/aurielfournier",
     "followers_url": "https://api.github.com/users/aurielfournier/followers",
     "following_url": "https://api.github.com/users/aurielfournier/following{/other_user}",
     "gists_url": "https://api.github.com/users/aurielfournier/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/aurielfournier/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/aurielfournier/subscriptions",
     "organizations_url": "https://api.github.com/users/aurielfournier/orgs",
     "repos_url": "https://api.github.com/users/aurielfournier/repos",
     "events_url": "https://api.github.com/users/aurielfournier/events{/privacy}",
     "received_events_url": "https://api.github.com/users/aurielfournier/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T21:28:21Z",
    "author_association": "NONE",
    "body": "Sorry for dropping out for a bit. Just finally had time to look over the resources everyone tagged in here. \r\n\r\n`assertr` is fantastic, thank you for pointing thatout @noamross \r\n\r\nI am not super familiar with EML, but I need to get up to speed on it for some work related things, and from what i know of EML, having some kind of wrapper like @maelle described that takes raw data and EML and tells you what doesn't match could be really exciting, especially since it could help more people actually keep meta data (a big issue in ecology). My 'concern' there would be that EML might not be the best one to choose if we thought the problem was broader then 'just' ecology. \r\n\r\n@magpiedin for the example I gave originally, I was talking about species occurrence data, in my dissertation, though I think in ecology the issue is certainly present beyond species occurrence data and would also apply to experimental and other data types. \r\n\r\nI'd be really interested in pursuing this as either an idea about developing lessons around an already exisiting tool, like `assertr`, or building something new on top that would bring in meta data. Both would be hugely helpful for the problem I had in grad school, and I think to many folks more broadly \r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387617069",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-387617069",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 387617069,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T04:32:54Z",
    "author_association": "MEMBER",
    "body": "@aurielfournier I've used (and learnt about) EML for an epidemiology research project, and could document everything that had to be documented, no term was missing in EML standard. But I guess other fields that have other metadata standards (epidemiology doesn't), could be more problematic? But a minimal tool EML+ `EML`/`eml2`+`assertr` could be useful as a starting point (and could be developed further for other metadata standards)?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387655768",
    "html_url": "https://github.com/ropensci/unconf18/issues/41#issuecomment-387655768",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/41",
    "id": 387655768,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T08:01:02Z",
    "author_association": "MEMBER",
    "body": "Maybe useful for testing such an EML+`assertr` tool\r\nhttps://github.com/DeclareDesign/fabricatr\r\nhttps://github.com/ropensci/charlatan"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/41/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#41"
 },
 {
  "id": 315286793,
  "url": "https://github.com/ropensci/unconf18/issues/27",
  "title": "Collaborating with NOT-users of R, RStudio, or Git",
  "created_by": "maurolepore",
  "created_at": "4/17/2018",
  "body": "(For more on RStudio, Git and GitHub see #22.)\r\n\r\nIn my experience, valuable collaborators often stay out of the collaboration loop that happens on GitHub.  Not only I miss their input but also I struggle to integrate the contributions they make outside my GitHub-based workflow. They may not want to learn complex tools and have little motivation (often they are already at the peak of their academic careers).  \r\n\r\n* What is a good workflow to collaborate with those who don't use R, Rstudio or Git (but might use e.g. Google sheets and GitHub)?\r\n* How can we maximize their input?\r\n* How can we minimize the problems caused by contributions outside the GitHub workflow?\r\n\r\n\r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382511428",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-382511428",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 382511428,
    "user": {
     "login": "ldecicco-USGS",
     "id": 1105215,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1105215?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/ldecicco-USGS",
     "html_url": "https://github.com/ldecicco-USGS",
     "followers_url": "https://api.github.com/users/ldecicco-USGS/followers",
     "following_url": "https://api.github.com/users/ldecicco-USGS/following{/other_user}",
     "gists_url": "https://api.github.com/users/ldecicco-USGS/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/ldecicco-USGS/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/ldecicco-USGS/subscriptions",
     "organizations_url": "https://api.github.com/users/ldecicco-USGS/orgs",
     "repos_url": "https://api.github.com/users/ldecicco-USGS/repos",
     "events_url": "https://api.github.com/users/ldecicco-USGS/events{/privacy}",
     "received_events_url": "https://api.github.com/users/ldecicco-USGS/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T20:03:04Z",
    "author_association": "NONE",
    "body": "(unfortunately) I have a decent amount of experience on this. I think the best thing to do captured in #22 ...basically...figure out why we are having a hard time getting people using git and fix that.  As my understanding, comfort, and overall dependency of git has increased over the years...so has my dedication for getting others on-board with using git. And...each time I've made a \"convert\" to git, it's been easier and easier.\r\n\r\nAs for non-R users...the tools do exist to take their input from Google Sheets/Google Drive and incorporate it in your R workflow. You lose the version control, but `googlesheets` and `googledrive` have helped immensely. \r\n\r\nAll that being said, I'd love to hear more of this conversation."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/383294420",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-383294420",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 383294420,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/21/2018",
    "updated_at": "2018-04-21T13:06:45Z",
    "author_association": "NONE",
    "body": "> I think the best thing to do captured in #22 ...basically...figure out why we are having a hard time getting people using git and fix that.\r\n\r\n-- @ldecicco-USGS \r\n\r\nI'm totally with you and #22 , in trying to help those who choose learn Git and friends. The main challenge I suggest in this issue has less to do with technical aspects and more with whatever drives humans to accept or reject change. \r\n\r\nAlthough [I'm interested in this aspect of human behavoiour](https://github.com/ropensci/unconf18/issues/13#issuecomment-382182444), I accept that some people will simply choose to not use the workflow I like (GitHub and friends). To deal with this, I appreciate you suggest googlesheets and googledrive, and I would love to hear as many ideas as possible and summarize them, maybe on a blog, as a kind of 'Manual for happy collaboration with non-R/GitHub users'.\r\n\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385285516",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-385285516",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 385285516,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T22:04:38Z",
    "author_association": "NONE",
    "body": " I'm more enamored by browser-based tools that require _zero install and zero signup_.  I have had some moderate success with using [hypothes.is](https://web.hypothes.is/) to get input in the form of comments on Rmd outputs, but it can also trip people up who are unfamiliar, isn't optimal for private repos, does require a sign-up. I wish it could use another service such as Google for sign-up so people didn't have the barrier of creating new accounts."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385287840",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-385287840",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 385287840,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T22:46:28Z",
    "author_association": "NONE",
    "body": "> I have had some moderate success with using hypothes.is to get input in the form of comments on Rmd outputs\r\n\r\nWow, I didn't know about this. It may not be perfect now but it seems like a great step forward. Thanks for sharing!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385515320",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-385515320",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 385515320,
    "user": {
     "login": "AmeliaMN",
     "id": 2576787,
     "avatar_url": "https://avatars3.githubusercontent.com/u/2576787?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/AmeliaMN",
     "html_url": "https://github.com/AmeliaMN",
     "followers_url": "https://api.github.com/users/AmeliaMN/followers",
     "following_url": "https://api.github.com/users/AmeliaMN/following{/other_user}",
     "gists_url": "https://api.github.com/users/AmeliaMN/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/AmeliaMN/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/AmeliaMN/subscriptions",
     "organizations_url": "https://api.github.com/users/AmeliaMN/orgs",
     "repos_url": "https://api.github.com/users/AmeliaMN/repos",
     "events_url": "https://api.github.com/users/AmeliaMN/events{/privacy}",
     "received_events_url": "https://api.github.com/users/AmeliaMN/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T20:15:22Z",
    "author_association": "NONE",
    "body": "This is related to an issue I know a lot of educators have (e.g. @mine-cetinkaya-rundel, @beanumber, @rudeboybert, myself, etc). If we ask students to submit R work for courses, how do we provide feedback to them? If they submit `Rmd`s, we can insert comments and send back, but annotating HTML pages is hard. Nothing approaches the annotation in, say, Word. (I'll try hypothes.is, thanks @noamross!). I think Mine has students submit via PR and provides comments through GitHub somehow, but for intro classes that's not very reasonable. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385576548",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-385576548",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 385576548,
    "user": {
     "login": "mine-cetinkaya-rundel",
     "id": 5965649,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5965649?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mine-cetinkaya-rundel",
     "html_url": "https://github.com/mine-cetinkaya-rundel",
     "followers_url": "https://api.github.com/users/mine-cetinkaya-rundel/followers",
     "following_url": "https://api.github.com/users/mine-cetinkaya-rundel/following{/other_user}",
     "gists_url": "https://api.github.com/users/mine-cetinkaya-rundel/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mine-cetinkaya-rundel/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mine-cetinkaya-rundel/subscriptions",
     "organizations_url": "https://api.github.com/users/mine-cetinkaya-rundel/orgs",
     "repos_url": "https://api.github.com/users/mine-cetinkaya-rundel/repos",
     "events_url": "https://api.github.com/users/mine-cetinkaya-rundel/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mine-cetinkaya-rundel/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-05-16T01:32:52Z",
    "author_association": "NONE",
    "body": "Yup, I do use GitHub issues and/or PR comments, but that's for a course where learning Git/GitHub is part of the learning objectives. I would hesitate to bring Git into the mix only for the sake of submission.\r\n\r\nOne possible solution is Rmd -> Google Docs, but then that's where the reproducibility cycle ends and it's not that different from Rmd -> Word."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389296945",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-389296945",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 389296945,
    "user": {
     "login": "jenniferthompson",
     "id": 7783352,
     "avatar_url": "https://avatars0.githubusercontent.com/u/7783352?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jenniferthompson",
     "html_url": "https://github.com/jenniferthompson",
     "followers_url": "https://api.github.com/users/jenniferthompson/followers",
     "following_url": "https://api.github.com/users/jenniferthompson/following{/other_user}",
     "gists_url": "https://api.github.com/users/jenniferthompson/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jenniferthompson/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jenniferthompson/subscriptions",
     "organizations_url": "https://api.github.com/users/jenniferthompson/orgs",
     "repos_url": "https://api.github.com/users/jenniferthompson/repos",
     "events_url": "https://api.github.com/users/jenniferthompson/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jenniferthompson/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T20:09:12Z",
    "author_association": "NONE",
    "body": "I'm late to this party, but am interested in this conversation! As someone who is typically not \"in charge\" on my group's projects (in my case, I'm not the first or senior author), I don't contribute most of the text; my work gets inserted into documents at least half written (and usually started by) other people. I would l-o-v-e a better system than sending Word versions back and forth (though we have at least upgraded to Box version control lately). But with clinical collaborators, I'm skeptical about something as technically involved as Github being part of the general solution. Some kind of middle ground would be a huge step for us. Google Docs has tons of potential for our manuscripts, but our group is so tied to reference management systems that work with Word and not GDocs that I've hesitated to even bring it up for clinical papers. (If anyone has a solution to _that_, I'm all ears!)\r\n\r\nAnd thanks @noamross for bringing up hypothes.is - I was unaware, and that could be really helpful for Rmd documents specifically!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389363550",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-389363550",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 389363550,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-16T01:15:42Z",
    "author_association": "NONE",
    "body": "> Google Docs has tons of potential for our manuscripts, but our group is so tied to reference management systems that work with Word and not GDocs that I've hesitated to even bring it up for clinical papers. (If anyone has a solution to that, I'm all ears!)\r\n\r\nIn [this blog](https://simplystatistics.org/2016/04/21/writing/) Jeff Leek proposes a solution with gdocs and paperline (I haven't tried myself).\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389384896",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-389384896",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 389384896,
    "user": {
     "login": "jenniferthompson",
     "id": 7783352,
     "avatar_url": "https://avatars0.githubusercontent.com/u/7783352?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jenniferthompson",
     "html_url": "https://github.com/jenniferthompson",
     "followers_url": "https://api.github.com/users/jenniferthompson/followers",
     "following_url": "https://api.github.com/users/jenniferthompson/following{/other_user}",
     "gists_url": "https://api.github.com/users/jenniferthompson/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jenniferthompson/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jenniferthompson/subscriptions",
     "organizations_url": "https://api.github.com/users/jenniferthompson/orgs",
     "repos_url": "https://api.github.com/users/jenniferthompson/repos",
     "events_url": "https://api.github.com/users/jenniferthompson/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jenniferthompson/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-16T03:41:03Z",
    "author_association": "NONE",
    "body": "Ah, thanks @maurolepore - I read that when he wrote it but had forgotten!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390174921",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-390174921",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 390174921,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T11:11:14Z",
    "author_association": "NONE",
    "body": "Thought it would be interesting to suss out the different components of Word/Google Docs that make it easier for collaborators (or us, in certain cases!)\r\ne.g.\r\n>  If we ask students to submit R work for courses, how do we provide feedback to them? If they submit Rmds, we can insert comments and send back, but annotating HTML pages is hard.\r\n\r\n**Feedback** (I'm definitely a fan of hypothes.is, but I can imagine use-cases where it doesn't do the trick – admittedly I haven't used it in a while).\r\n\r\n> As for non-R users...the tools do exist to take their input from Google Sheets/Google Drive and incorporate it in your R workflow. You lose the version control, but googlesheets and googledrive have helped immensely.\r\n\r\n**Version control** (there are good workflows around this, but, it _does_ depend on ⇩\r\n\r\n**Technical resistance** I imagine there are some collaborators who don't _do_ google docs/sheets, etc."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390370809",
    "html_url": "https://github.com/ropensci/unconf18/issues/27#issuecomment-390370809",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/27",
    "id": 390370809,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T02:04:46Z",
    "author_association": "NONE",
    "body": "Summary: How to maximize input from those who don't use R, RStudio or Git, but might use GitHub?\r\n(1) Google sheets and docs (collaborative editing + some version control; (2) hypothes.is (comment on html); (3) find why people resist better tools and try to help them; (4) accept some people will always resist."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/27/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#27"
 },
 {
  "id": 317873237,
  "url": "https://github.com/ropensci/unconf18/issues/43",
  "title": "Implementation of non-linear dimensionality reduction algorithm (UMAP)",
  "created_by": "seaaan",
  "created_at": "4/26/2018",
  "body": "I recently read about a new non-linear dimensionality reduction algorithm called UMAP ([github](https://github.com/lmcinnes/umap), [arxiv](https://arxiv.org/abs/1802.03426)), which is much faster than t-SNE, while producing two-dimensional visualizations that share many characteristics with t-SNE. I initially found out about it in the context of use on high-dimensional single-cell data in this [paper](https://www.biorxiv.org/content/biorxiv/early/2018/04/10/298430.full.pdf). \r\n\r\nThe reference implementation is in Python (see github link above). It can be run in R through rPython as shown [here](https://gist.github.com/schochastics/2f83532f04729321b06822fbaa98f3ab). There is an R [package](https://github.com/jlmelville/smallvis) designed for comparing dimensionality reduction techniques that contains an implementation of UMAP, but this package is \"not suitable for large scale visualization\" and I'm not completely sure based on the README whether it is an accurate or approximate implementation. \r\n\r\nMy thought is that the ideal would be a package focused on UMAP specifically, implemented in R or Rcpp. Unfortunately I am not at all an expert in this topic or familiar with the mathematics involved, so the best I would be able to do is try to translate the Python implementation into R. \r\n",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388906818",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-388906818",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 388906818,
    "user": {
     "login": "malisas",
     "id": 16787492,
     "avatar_url": "https://avatars3.githubusercontent.com/u/16787492?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/malisas",
     "html_url": "https://github.com/malisas",
     "followers_url": "https://api.github.com/users/malisas/followers",
     "following_url": "https://api.github.com/users/malisas/following{/other_user}",
     "gists_url": "https://api.github.com/users/malisas/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/malisas/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/malisas/subscriptions",
     "organizations_url": "https://api.github.com/users/malisas/orgs",
     "repos_url": "https://api.github.com/users/malisas/repos",
     "events_url": "https://api.github.com/users/malisas/events{/privacy}",
     "received_events_url": "https://api.github.com/users/malisas/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T17:56:44Z",
    "author_association": "NONE",
    "body": "Hi @seaaan , I use t-SNE at work all the time to analyze flow data and would potentially be interested in something like UMAP (especially when I have more than 100,000 data points and the t-SNE runtime starts to slow me down). I have zero experience in C++ or the mathematics involved but would like to learn both topics, and at any rate would like to express my interest in your proposal.\r\n\r\nI'm quite ignorant about this entire topic, but what is the benefit of re-implementing the algorithm in R/Rcpp as opposed to relying on the bindings? (Though even if the user experience is the same, I can see how this could still be a really cool educational project.)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389045558",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-389045558",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 389045558,
    "user": {
     "login": "seaaan",
     "id": 10538357,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10538357?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seaaan",
     "html_url": "https://github.com/seaaan",
     "followers_url": "https://api.github.com/users/seaaan/followers",
     "following_url": "https://api.github.com/users/seaaan/following{/other_user}",
     "gists_url": "https://api.github.com/users/seaaan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seaaan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seaaan/subscriptions",
     "organizations_url": "https://api.github.com/users/seaaan/orgs",
     "repos_url": "https://api.github.com/users/seaaan/repos",
     "events_url": "https://api.github.com/users/seaaan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seaaan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T05:18:01Z",
    "author_association": "NONE",
    "body": "I am also not an expert in this topic, but from what I can tell, the\nadvantage of an R or Rcpp version as compared to Python would mainly be\nconvenience. Running UMAP through rPython requires you to install Python\nand UMAP first and then install rPython (which works from CRAN for Linux\nand Mac but requires some additional effort for Windows). So you can get it\nto work but it's not as seamless as just installing a single package from\nR.\n\nI could be wrong about some of the steps as I haven't had a chance to\nactually test the rPython version yet, so maybe it's not as complicated as\nit sounds.\n\nOn May 14, 2018 10:56 AM, \"Malisa\" <notifications@github.com> wrote:\n\nHi @seaaan <https://github.com/seaaan> , I use t-SNE at work all the time\nto analyze flow data and would potentially be interested in something like\nUMAP (especially when I have more than 100,000 data points and the t-SNE\nruntime starts to slow me down). I have zero experience in C++ or the\nmathematics involved but would like to learn both topics, and at any rate\nwould like to express my interest in your proposal.\n\nI'm quite ignorant about this entire topic, but what is the benefit of\nre-implementing the algorithm in R/Rcpp as opposed to relying on the\nbindings? (Though even if the user experience is the same, I can see how\nthis could still be a really cool educational project.)\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/ropensci/unconf18/issues/43#issuecomment-388906818>,\nor mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AKDNdeMEDuPc3cWkMKAMTDS1Y2jZLJ-Zks5tycVdgaJpZM4TkgTE>\n.\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389118289",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-389118289",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 389118289,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T10:22:07Z",
    "author_association": "NONE",
    "body": "If the Python version is performance, it might be worthwhile to try to wrap\nit with the **reticulate** package rather than port it. With **reticulate**\nyou can share in-memory objects with R so data transfer is more efficient,\nand I think is cross-platform.\n\n>\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389322654",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-389322654",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 389322654,
    "user": {
     "login": "seaaan",
     "id": 10538357,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10538357?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seaaan",
     "html_url": "https://github.com/seaaan",
     "followers_url": "https://api.github.com/users/seaaan/followers",
     "following_url": "https://api.github.com/users/seaaan/following{/other_user}",
     "gists_url": "https://api.github.com/users/seaaan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seaaan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seaaan/subscriptions",
     "organizations_url": "https://api.github.com/users/seaaan/orgs",
     "repos_url": "https://api.github.com/users/seaaan/repos",
     "events_url": "https://api.github.com/users/seaaan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seaaan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:41:08Z",
    "author_association": "NONE",
    "body": "Thanks! So here are the options as I see them: \r\n\r\n* Access UMAP through rPython as described [here](https://gist.github.com/schochastics/2f83532f04729321b06822fbaa98f3ab). Somewhat complicated installation process? \r\n* Wrap UMAP using [reticulate](https://github.com/rstudio/reticulate). Also requires installing Python stuff but might be easier? \r\n* Rewrite UMAP in R or Rcpp. Easy installation but more work for us. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390212340",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390212340",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390212340,
    "user": {
     "login": "seaaan",
     "id": 10538357,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10538357?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seaaan",
     "html_url": "https://github.com/seaaan",
     "followers_url": "https://api.github.com/users/seaaan/followers",
     "following_url": "https://api.github.com/users/seaaan/following{/other_user}",
     "gists_url": "https://api.github.com/users/seaaan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seaaan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seaaan/subscriptions",
     "organizations_url": "https://api.github.com/users/seaaan/orgs",
     "repos_url": "https://api.github.com/users/seaaan/repos",
     "events_url": "https://api.github.com/users/seaaan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seaaan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T13:46:49Z",
    "author_association": "NONE",
    "body": "Summary: UMAP is a new non-linear dimensionality reduction algorithm that's like t-SNE but faster. It can be used for all kinds of data but I'm interested in it for flow cytometry and single cell RNA sequencing. We could either wrap the Python implementation or implement it ourselves in R/Rcpp."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390288247",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390288247",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390288247,
    "user": {
     "login": "PeteHaitch",
     "id": 1049741,
     "avatar_url": "https://avatars0.githubusercontent.com/u/1049741?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/PeteHaitch",
     "html_url": "https://github.com/PeteHaitch",
     "followers_url": "https://api.github.com/users/PeteHaitch/followers",
     "following_url": "https://api.github.com/users/PeteHaitch/following{/other_user}",
     "gists_url": "https://api.github.com/users/PeteHaitch/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/PeteHaitch/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/PeteHaitch/subscriptions",
     "organizations_url": "https://api.github.com/users/PeteHaitch/orgs",
     "repos_url": "https://api.github.com/users/PeteHaitch/repos",
     "events_url": "https://api.github.com/users/PeteHaitch/events{/privacy}",
     "received_events_url": "https://api.github.com/users/PeteHaitch/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T18:09:35Z",
    "author_association": "NONE",
    "body": "There are definitely people in the Bioconductor community interested in this (although I don't know if any are going to be at the unconf). We discussed a reticulate wrapper around the Python implementation when a few of us were together at the [collaborative computational tools for the human cell atlas](https://meetings.czi.technology/human-cell-atlas/comp-tools/). @drisso may remember who showed the most interest in doing this or of any efforts underway.\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390292077",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390292077",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390292077,
    "user": {
     "login": "stefaniebutland",
     "id": 11927811,
     "avatar_url": "https://avatars0.githubusercontent.com/u/11927811?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stefaniebutland",
     "html_url": "https://github.com/stefaniebutland",
     "followers_url": "https://api.github.com/users/stefaniebutland/followers",
     "following_url": "https://api.github.com/users/stefaniebutland/following{/other_user}",
     "gists_url": "https://api.github.com/users/stefaniebutland/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stefaniebutland/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stefaniebutland/subscriptions",
     "organizations_url": "https://api.github.com/users/stefaniebutland/orgs",
     "repos_url": "https://api.github.com/users/stefaniebutland/repos",
     "events_url": "https://api.github.com/users/stefaniebutland/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stefaniebutland/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T18:23:43Z",
    "author_association": "COLLABORATOR",
    "body": "> There are definitely people in the Bioconductor community interested in this (although I don't know if any are going to be at the unconf)\r\n\r\nI think @lcolladotor said he attends annual Bioconductor meetings. Lori Shepherd @lshep from Bioconductor Core team participated in unconf17"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390293113",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390293113",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390293113,
    "user": {
     "login": "drisso",
     "id": 8451432,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8451432?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/drisso",
     "html_url": "https://github.com/drisso",
     "followers_url": "https://api.github.com/users/drisso/followers",
     "following_url": "https://api.github.com/users/drisso/following{/other_user}",
     "gists_url": "https://api.github.com/users/drisso/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/drisso/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/drisso/subscriptions",
     "organizations_url": "https://api.github.com/users/drisso/orgs",
     "repos_url": "https://api.github.com/users/drisso/repos",
     "events_url": "https://api.github.com/users/drisso/events{/privacy}",
     "received_events_url": "https://api.github.com/users/drisso/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T18:27:30Z",
    "author_association": "NONE",
    "body": "Not surprisingly @LTLA was part of the conversation. It was in the more general context of how to create an interface between Bioconductor and scanpy. I won't be at the unconf, but I'm happy to help remotely, if needed!\r\n\r\nI think a reticulate wrapper could be the easier solution, unless a C++ implementation is much faster than the original python. \r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390321304",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390321304",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390321304,
    "user": {
     "login": "LTLA",
     "id": 8166669,
     "avatar_url": "https://avatars3.githubusercontent.com/u/8166669?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/LTLA",
     "html_url": "https://github.com/LTLA",
     "followers_url": "https://api.github.com/users/LTLA/followers",
     "following_url": "https://api.github.com/users/LTLA/following{/other_user}",
     "gists_url": "https://api.github.com/users/LTLA/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/LTLA/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/LTLA/subscriptions",
     "organizations_url": "https://api.github.com/users/LTLA/orgs",
     "repos_url": "https://api.github.com/users/LTLA/repos",
     "events_url": "https://api.github.com/users/LTLA/events{/privacy}",
     "received_events_url": "https://api.github.com/users/LTLA/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T20:21:11Z",
    "author_association": "NONE",
    "body": "I won't go into it too much to avoid derailing this thread, but my idea would be to make it as easy (and standard, and reliable) to call Python code in an R package as it is to call C/C++/Fortran code. The difficulty lies in how we are able to (or, currently, not!) control the versions of Python and its packages, in order to guarantee consistent behaviour and ensure easy installability across systems. \r\n\r\nA reticulate wrapper around UMAP would indeed be easier in terms of the amount of initial work. However, without a standard framework for controlling Python packages and versions from within R, it shifts the burden onto the end-user (and ultimately back to developers in terms of support requests)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390370646",
    "html_url": "https://github.com/ropensci/unconf18/issues/43#issuecomment-390370646",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/43",
    "id": 390370646,
    "user": {
     "login": "lcolladotor",
     "id": 2288213,
     "avatar_url": "https://avatars2.githubusercontent.com/u/2288213?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lcolladotor",
     "html_url": "https://github.com/lcolladotor",
     "followers_url": "https://api.github.com/users/lcolladotor/followers",
     "following_url": "https://api.github.com/users/lcolladotor/following{/other_user}",
     "gists_url": "https://api.github.com/users/lcolladotor/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lcolladotor/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lcolladotor/subscriptions",
     "organizations_url": "https://api.github.com/users/lcolladotor/orgs",
     "repos_url": "https://api.github.com/users/lcolladotor/repos",
     "events_url": "https://api.github.com/users/lcolladotor/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lcolladotor/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-19T02:02:19Z",
    "author_association": "NONE",
    "body": "Hi. I don't really use Python and was not part of the work Peter, David and Aaron Lun did. So I can't really comment on this thread.\r\n\r\nBest,\r\nLeo"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/43/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#43"
 },
 {
  "id": 313517292,
  "url": "https://github.com/ropensci/unconf18/issues/21",
  "title": "Tensorflow Probability in R",
  "created_by": "michaelquinn32",
  "created_at": "4/11/2018",
  "body": "Earlier today, Google announced TensorFlow Probability: a probabilistic programming toolbox for machine learning. The full text of the announcement is available on [Medium](https://medium.com/tensorflow/introducing-tensorflow-probability-dca4c304e245)\r\n\r\nSee the article for full details, but at a high level.\r\n\r\n- TF Probability provides an incredibly flexible language for specifying models imperatively\r\n- You work with distributions as first class objects\r\n- When it comes time to fit your model, TFP has a host of tools (like MCMC and variational inference) to get the job done\r\n\r\nThis [notebook](https://github.com/tensorflow/probability/blob/master/tensorflow_probability/examples/jupyter_notebooks/Linear_Mixed_Effects_Models.ipynb) provides an end-to-end walkthrough on fitting a linear mixed effects model using the InstEval data from lme4. \r\n\r\nFor this project, unconf participants should come up with a design for how TF Probability will work in R, referring to RStudio's work on [keras](https://tensorflow.rstudio.com/keras/) and [tfestimators](https://tensorflow.rstudio.com/tfestimators/). Participants will be able to write some of these wrappers, and should hope to complete some example notebooks before the end of the event. It would be great if we could do an R version of the notebook linked above, and maybe others too.\r\n\r\nR already has other probabilistic programming languages, in Stan, and there are other R projects that try to build up a probabilistic programming language for TensorFlow (Greta). But this will be the primary Google-supported project in this area, with a lot of new features coming soon.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381301516",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-381301516",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 381301516,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/14/2018",
    "updated_at": "2018-04-14T04:03:32Z",
    "author_association": "NONE",
    "body": "Yeah, it's awesome that the folks at Google are pulling all of these bits together!\r\n\r\nBy the way, `greta` already uses parts of `probability` (the distributions), and will be providing greta-like interfaces to the inference methods going forward (and we'll be trying to keep up with the new developments). These and some other variational inference and stochastic gradient MCMC methods should start appearing in the development version of `greta` over the next couple of months.\r\n\r\n`greta` provides a higher-level interface than the modules in `probability` though; so it's necessarily more limited and I think making it easy for people to use `probability` directly in R is a great idea! We could even make the resulting package a dependency of `greta`'s.\r\n\r\nThough I can't quite envisage how a more R-like `probability` interface would fit in between `greta` and the interface to `probability` provided by the [R `tensorflow` API](https://tensorflow.rstudio.com/tensorflow/articles/using_tensorflow_api.html), since the interface to `probability` is lower-level than keras or estimators. What sort of functionality do you have in mind?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381804788",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-381804788",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 381804788,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/16/2018",
    "updated_at": "2018-04-17T01:56:07Z",
    "author_association": "NONE",
    "body": "First of all, hi Nick!\r\n\r\nSorry, I didn't realize you were attending the unconf, but I'm really excited to meet and work with you. TBH, I got permission to come to the unconf because I was planning to attend the event to do something \"Tensorflow related,\" but working on Greta definitely falls under that umbrella! If that's the big `TFP`  project, I'd be really happy.\r\n\r\nFull disclosure, I'm not a `TFP` developer, my work at Google is on something else entirely, but I do contribute to the R infrastructure used by everyone. With that caveat out of the way, I see `greta` fitting into the [`TFP` stack](https://cdn-images-1.medium.com/max/1400/0*19BJhsJ-2DzQ7fFH.) the same way that `edward2` does, as a language for building models. I had assumed that we'd be wrapping `edward2` when working in `TFP` during the unconf, but there is no reason to stick to that plan.\r\n\r\nAnyway, it's really great to meet you! And I'm really looking forward to collaborating."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/381827054",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-381827054",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 381827054,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/16/2018",
    "updated_at": "2018-04-17T03:42:14Z",
    "author_association": "NONE",
    "body": "Hi Michael :)\r\n\r\nOh great. Well I'd be very happy to collaborate on anything tensorflowy!\r\n\r\nThere are tons of things to be done on greta, so happy to go down that route. But also very happy to work on another TFP project.\r\n\r\nA couple of things that spring to mind: easily dispatching parallel MCMC chains to separate Cloud ML jobs (Id love this for greta, hence my interest in parallel progress bars); using greta's R -> TF syntax mapping to enable speedups/parallelisation/GPU support when evaluating arbitrary R functions; a sort of TF estimators-like containerisation of greta/TFP models, so that they can be easily wrapped up to have train() and predict() methods, and possibly support online learning with an update_training() method or something.\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389039053",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389039053",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389039053,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T04:35:17Z",
    "author_association": "NONE",
    "body": "Hi @michaelquinn32 & @goldingn! \r\n\r\nI'm new to Greta & TensorFlow, but they're both on my list of tools to learn.  I'd be interested in working on a TFP/greta project if I could be helpful.   \r\n\r\nOn a related note, where does `TFP`/`greta` stand on varying dimension methods like reversible jump and birth-death MCMC?   My impression is most probabilistic languages/tools tend not to feature varying dimension methods like reversible jump and birth-death since they add significant complexity to MCMC.  I've been working on a collection of birth-death MCMC models for reproductive endocrinology research for a while -- recently have been refactoring them from C to C++/R -- so I have a keen interest in whether `TFP` supports birth-death ;)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389041020",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389041020",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389041020,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T04:43:14Z",
    "author_association": "NONE",
    "body": "@mmulvahill that's great! Sounds like a team is coming together :)\r\n\r\nWe should try to distill this down into a tangible project (or a few, in separate issues) so folks can decide what to do next week.\r\n\r\nI suspect the short answer to your Q is that they can't do that because the tensorflow graph is static, not dynamic. That said there's almost always a way of hacking in that behaviour, and there are extensions like [fold](https://github.com/tensorflow/fold), which would work. greta's current API is even more static than Tensorflow (since all array dimensions are fixed), but that could potentially be generalised in the future. This would be a great thing to discuss at the unconf!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389041138",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389041138",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389041138,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T04:44:19Z",
    "author_association": "NONE",
    "body": "Any particular angles on tfp/greta that look like they would be interesting and feasible to make progress on in a couple of days?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389041490",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389041490",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389041490,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T04:46:57Z",
    "author_association": "NONE",
    "body": "P.S. the greta [dev branch](https://github.com/greta-dev/greta/commits/dev) (which will become greta 0.3) now depends on TFP, and directly uses TFP's samplers"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389380919",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389380919",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389380919,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-16T03:10:14Z",
    "author_association": "NONE",
    "body": "I like the progress on the dev branch Nick!\r\n\r\nThus far, my work with TFP has been trying to implement (derivatives of) provided materials. I really enjoyed playing with this:\r\nhttps://github.com/tensorflow/probability/blob/master/tensorflow_probability/examples/jupyter_notebooks/Linear_Mixed_Effects_Models.ipynb\r\n\r\nIt's a relatively simple model, but has a really interesting approach to inference: using an EM algorithm that both applies a sample and an optimizer.\r\n\r\nImplementing that would be a big job for those couple of days and a lot of fun to work on. Hacking on the sampler would (hopefully) add some nice abstractions for customizing inference. I saw hmc was in the dev branch already (AWESOME!!!), but there are like a million samplers popping up in TFP these days.\r\nhttps://github.com/tensorflow/probability/tree/master/tensorflow_probability/python/mcmc\r\n\r\nStepping further back, having some sort of abstraction for how inference happens could eventually lead greta to supporting VI too. I don't think we should implement it yet (considering this is way out of my depth and VI looks a bit like black magic to me*), but it would be nice to be able to make that step once there are a few more implementations out there in the wild.\r\n\r\n* But I did get VI to work in edward1 once, FWIW. The examples here were pretty straightforward: http://edwardlib.org/getting-started\r\n\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389787411",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-389787411",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 389787411,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-17T08:28:45Z",
    "author_association": "NONE",
    "body": "Yeah, that's a great demo of what TFP can do!\r\n\r\nWe actually have some prototype VI code (for Stein VGD) that'll be added to greta soon; though probably after next month's release of 0.3. We'll also be adding minibatching and other nice things that @martiningram has been working on.\r\n\r\nThe dev branch changes have rejigged greta to have an (internal) inference class from which samplers and optimisers inherit, so the various VI approaches will be added as a third inference option. That generalisation of the inference structure also means its easy to add the other TFP samplers (and TF optimisers). I'm planning to hook up the MH and MALA samplers in the next release. I might even do that on the plane over to Seattle this weekend :)\r\n\r\nSo developing and adding new inference methods would definitely be feasible."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390079624",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-390079624",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 390079624,
    "user": {
     "login": "michaelquinn32",
     "id": 3473921,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3473921?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/michaelquinn32",
     "html_url": "https://github.com/michaelquinn32",
     "followers_url": "https://api.github.com/users/michaelquinn32/followers",
     "following_url": "https://api.github.com/users/michaelquinn32/following{/other_user}",
     "gists_url": "https://api.github.com/users/michaelquinn32/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/michaelquinn32/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/michaelquinn32/subscriptions",
     "organizations_url": "https://api.github.com/users/michaelquinn32/orgs",
     "repos_url": "https://api.github.com/users/michaelquinn32/repos",
     "events_url": "https://api.github.com/users/michaelquinn32/events{/privacy}",
     "received_events_url": "https://api.github.com/users/michaelquinn32/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/17/2018",
    "updated_at": "2018-05-18T02:57:37Z",
    "author_association": "NONE",
    "body": "Separately, I noticed that Greta doesn't yet support tfp transformed distributions and bijectors:\r\n\r\n* https://www.tensorflow.org/api_docs/python/tf/contrib/distributions/TransformedDistribution\r\n* https://www.tensorflow.org/api_docs/python/tf/distributions/bijectors/Bijector\r\n\r\nBijectors are an abstraction for transforming distributions. For example, in tfp you create the log normal distribution by transforming the normal distribution.\r\n\r\n```\r\nimport tensorflow_probability as tfp\r\ntfd = tfp.distributions\r\ntfb = tfp.distributions.bijectors\r\n\r\nlog_normal = tfd.TransformedDistribution(\r\n  distribution=tfd.Normal(loc=0., scale=1.),\r\n\r\n  # The bijector encaspulates several different transformations together\r\n  bijector=tfb.Exp(),\r\n  name=\"LogNormalTransformedDistribution\")\r\n```\r\n\r\nYou can do some crazy stuff with bijectors. See this notebook, for example:\r\nhttps://github.com/tensorflow/probability/blob/master/tensorflow_probability/examples/jupyter_notebooks/Gaussian_Copula.ipynb\r\n\r\nA full implementation might take time, but it wouldn't hurt to get started on this during the unconf."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390088932",
    "html_url": "https://github.com/ropensci/unconf18/issues/21#issuecomment-390088932",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/21",
    "id": 390088932,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T04:12:02Z",
    "author_association": "NONE",
    "body": "I think bijectors is at a lower level than the greta user API. greta deliberately doesn't let users mess around with distributions and densities directly, since (even if bijection was handled) that relies on users understanding things like log jacobian transformations, (which most users won't) and can easily lead to incorrectly specified models.\r\n\r\nOf course having lower-level APIs is useful (and you can always do the low-level TFP stuff in R by importing TFP with reticulate), it's just out of scope for greta.\r\n\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/21/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#21"
 },
 {
  "id": 317447497,
  "url": "https://github.com/ropensci/unconf18/issues/37",
  "title": "Discussion: Expanding peer review of code",
  "created_by": "noamross",
  "created_at": "4/24/2018",
  "body": "rOpenSci has long been interested in incubating projects that adopt our approach to open peer review of code in areas outside our [scope](https://github.com/ropensci/onboarding/blob/master/policies.md#aims-and-scope), such as in other languages or, especially for implementations of statistical algorithms.  A few unconf attendees (inc. @mmulvahill, @dynamicwebpaige, @jenniferthompson) have expressed interest in this, so it would be good to set aside time to discuss prospects for new code review projects. I suggest this would be a second-day 60-90 minute lunch discussion rather than a full two-day project, but depending on people's interest some of us could run with it!",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384131575",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-384131575",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 384131575,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T01:27:07Z",
    "author_association": "NONE",
    "body": "🙋 I also am very interested in this, for software review at Methods in Ecology and Evolution and other domain-specific journals publishing software descriptors. The main problem I've faced handling these papers at MEE is that the pool of potential reviewers has very little experience reviewing code and usability. \r\n\r\nLunch discussion sounds like a great idea! "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384143386",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-384143386",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 384143386,
    "user": {
     "login": "jenniferthompson",
     "id": 7783352,
     "avatar_url": "https://avatars0.githubusercontent.com/u/7783352?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jenniferthompson",
     "html_url": "https://github.com/jenniferthompson",
     "followers_url": "https://api.github.com/users/jenniferthompson/followers",
     "following_url": "https://api.github.com/users/jenniferthompson/following{/other_user}",
     "gists_url": "https://api.github.com/users/jenniferthompson/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jenniferthompson/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jenniferthompson/subscriptions",
     "organizations_url": "https://api.github.com/users/jenniferthompson/orgs",
     "repos_url": "https://api.github.com/users/jenniferthompson/repos",
     "events_url": "https://api.github.com/users/jenniferthompson/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jenniferthompson/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T02:40:29Z",
    "author_association": "NONE",
    "body": "Sounds like a plan! 🎉 "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384155364",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-384155364",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 384155364,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:11:31Z",
    "author_association": "NONE",
    "body": "A colleague and I have been looking into ways to improve the availability/quality/dissemination of new biostats tools & methods.  We started with a series of 30+ interviews ~2 yrs ago with biostatisticians and others with related experience (including @karthik).  The overall outcome was that there's room for biostats-trained software devs within departments with some forethought (if funding is included in grants), and that rOpenSci had already made great progress on the curation and quality issues we also came across.  \r\n\r\nWe've been working on the software dev side but not the curation/quality, so hearing you're interested in incubating other domains made my ears perk up.\r\n\r\nOur focus has been on methods developed within [CTSA's](https://ncats.nih.gov/ctsa) and the Biostats, Epi, & Research Design (BERD) arms of these institutional grants, for no other reason that's been our funding source.  Combining forces with others from other domains would be 👍 👍 👍\r\n\r\nLook forward to talking more -- lunch would be great!\r\n\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384509190",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-384509190",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 384509190,
    "user": {
     "login": "seaaan",
     "id": 10538357,
     "avatar_url": "https://avatars1.githubusercontent.com/u/10538357?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/seaaan",
     "html_url": "https://github.com/seaaan",
     "followers_url": "https://api.github.com/users/seaaan/followers",
     "following_url": "https://api.github.com/users/seaaan/following{/other_user}",
     "gists_url": "https://api.github.com/users/seaaan/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/seaaan/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/seaaan/subscriptions",
     "organizations_url": "https://api.github.com/users/seaaan/orgs",
     "repos_url": "https://api.github.com/users/seaaan/repos",
     "events_url": "https://api.github.com/users/seaaan/events{/privacy}",
     "received_events_url": "https://api.github.com/users/seaaan/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T04:26:36Z",
    "author_association": "NONE",
    "body": "I would be interested in this too. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384627479",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-384627479",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 384627479,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-05-14T17:24:54Z",
    "author_association": "NONE",
    "body": "I am also interested in this discussion - mostly as a listener I believe."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385119292",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385119292",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385119292,
    "user": {
     "login": "jhollist",
     "id": 5438539,
     "avatar_url": "https://avatars3.githubusercontent.com/u/5438539?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jhollist",
     "html_url": "https://github.com/jhollist",
     "followers_url": "https://api.github.com/users/jhollist/followers",
     "following_url": "https://api.github.com/users/jhollist/following{/other_user}",
     "gists_url": "https://api.github.com/users/jhollist/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jhollist/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jhollist/subscriptions",
     "organizations_url": "https://api.github.com/users/jhollist/orgs",
     "repos_url": "https://api.github.com/users/jhollist/repos",
     "events_url": "https://api.github.com/users/jhollist/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jhollist/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/27/2018",
    "updated_at": "2018-04-27T23:36:35Z",
    "author_association": "MEMBER",
    "body": "While I won't be in Seattle, I am very interested in the outcome of this discussion.  \r\n\r\nWe are currently working on implementing some level of code review in our internal EPA review process.  My plan was to borrow heavily from rOpenSci onboarding.  Will anxiously watch this issue over the next few weeks!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385220955",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385220955",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385220955,
    "user": {
     "login": "maurolepore",
     "id": 5856545,
     "avatar_url": "https://avatars0.githubusercontent.com/u/5856545?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maurolepore",
     "html_url": "https://github.com/maurolepore",
     "followers_url": "https://api.github.com/users/maurolepore/followers",
     "following_url": "https://api.github.com/users/maurolepore/following{/other_user}",
     "gists_url": "https://api.github.com/users/maurolepore/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maurolepore/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maurolepore/subscriptions",
     "organizations_url": "https://api.github.com/users/maurolepore/orgs",
     "repos_url": "https://api.github.com/users/maurolepore/repos",
     "events_url": "https://api.github.com/users/maurolepore/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maurolepore/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/28/2018",
    "updated_at": "2018-04-29T02:40:17Z",
    "author_association": "NONE",
    "body": "Count me in. I would love to learn more about the current review process and its potential for expansion."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385476154",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385476154",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385476154,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T18:36:09Z",
    "author_association": "NONE",
    "body": "@goldingn: I think this is quite a good problem statement. \r\n\r\n> The main problem I've faced handling these papers at MEE is that the pool of potential reviewers has very little experience reviewing code and usability.\r\n\r\nI get the feeling that this is a bigger task that I realize but I wonder about the feasibility of a suite of code review tools. Off the top of my head I can think of the following packages that would be useful when evaluating code:\r\n\r\n- lobstr\r\n- usethis\r\n- goodpractice\r\n- codetools\r\n- profvis\r\n- lintr\r\n- styler\r\n\r\nI wonder if it would be possible to develop a sort of devtools for reviewers (`revtools`?) whereby someone approaching a potential review project could expand on the tools available in [pkgreviewr](https://github.com/ropenscilabs/pkgreviewr). If one could develop a clear API, it could help a possible reviewer. The idea here is that it would give a possible reviewer the flexibility to ask some questions of the code itself. For example `lobstr::cst()` comes to mind as a useful function to provide a reviewer when you have function call upon function call. The idea here would be to provide flexible, rather than prescriptive, tools. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385478861",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385478861",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385478861,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T17:59:43Z",
    "author_association": "MEMBER",
    "body": "@stephlocke started working on sthg similar in https://github.com/lockedata/PackageReviewR"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385487775",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385487775",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385487775,
    "user": {
     "login": "stefaniebutland",
     "id": 11927811,
     "avatar_url": "https://avatars0.githubusercontent.com/u/11927811?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stefaniebutland",
     "html_url": "https://github.com/stefaniebutland",
     "followers_url": "https://api.github.com/users/stefaniebutland/followers",
     "following_url": "https://api.github.com/users/stefaniebutland/following{/other_user}",
     "gists_url": "https://api.github.com/users/stefaniebutland/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stefaniebutland/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stefaniebutland/subscriptions",
     "organizations_url": "https://api.github.com/users/stefaniebutland/orgs",
     "repos_url": "https://api.github.com/users/stefaniebutland/repos",
     "events_url": "https://api.github.com/users/stefaniebutland/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stefaniebutland/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T18:31:16Z",
    "author_association": "COLLABORATOR",
    "body": "@annakrystalli `pkgreviewr` mentioned 👆"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385496229",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385496229",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385496229,
    "user": {
     "login": "goldingn",
     "id": 4450731,
     "avatar_url": "https://avatars0.githubusercontent.com/u/4450731?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/goldingn",
     "html_url": "https://github.com/goldingn",
     "followers_url": "https://api.github.com/users/goldingn/followers",
     "following_url": "https://api.github.com/users/goldingn/following{/other_user}",
     "gists_url": "https://api.github.com/users/goldingn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/goldingn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/goldingn/subscriptions",
     "organizations_url": "https://api.github.com/users/goldingn/orgs",
     "repos_url": "https://api.github.com/users/goldingn/repos",
     "events_url": "https://api.github.com/users/goldingn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/goldingn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T19:01:12Z",
    "author_association": "NONE",
    "body": "@boshek +1 for the name `revtools`!\r\n\r\nYeah, something like that would be super helpful (though even just a written guide/rubric to get people started would help people in our case).\r\n\r\nI had checking out `pkgreviewer` on my to do list, but `PackageReviewR` looks awesome too! "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385537755",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385537755",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385537755,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T21:42:28Z",
    "author_association": "NONE",
    "body": "Just bookmarking this: we had a conversation a bit ago with an organization interested in our review process.  It wasn't public, but they asked good questions about initiating the process, so I just (very roughly) edited the notes down to our one-sided responses: https://docs.google.com/document/d/14m1Rkp4WKPpGn585r21g3xcb0mVDHy3Ov9N2qUdqetA/edit"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385539571",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385539571",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385539571,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T21:50:31Z",
    "author_association": "NONE",
    "body": "And, many might have already seen these, but some relevant posts:\r\n- https://ropensci.org/blog/2016/03/28/software-review/\r\n- https://ropensci.org/blog/2017/09/01/nf-softwarereview/\r\n\r\n@goldingn we feel you, building and maintaining the reviewer base is one of the biggest challenges, one I'm happy to chat more about.  From the second post:\r\n\r\n> One of the core challenges and rewards of our work has been developing a community of reviewers. Reviewing is a high-skill activity. Reviewers need expertise in the programming methods used in a software package and also the scientific field of its application. (“Find me someone who knows sensory ecology and sparse data structures!”) They need good communications skills and the time and willingness to volunteer. Thankfully, the open-science and open-source worlds are filled with generous, expert people. We have been able to expand our reviewer pool as the pace of submissions and the domains of their applications have grown.\r\n>\r\n>Developing the reviewer pool requires constant recruitment. Our editors actively and broadly engage with developer and research communities to find new reviewers. We recruit from authors of previous submissions, co-workers and colleagues, at conferences, through our other collaborative work and on social media. In the open-source software ecosystem, one can often identify people with particular expertise by looking at their published software or contribution to other projects, and we often will cold-email potential reviewers whose published work suggests they would be a good match for a submission.\r\n>\r\n>We cultivate our reviewer pool as well as expand it. We bring back reviewers so that they may develop reviewing as a skill, but not so often as to overburden them. We provide guidance and feedback to new recruits. When assigning reviewers to a submission, we aim to pair experienced reviewers with new ones, or reviewers with expertise on a package’s programming methods with those experienced in its field of application. These reviewers learn from each other, and diversity in perspectives is an advantage; less experienced developers often provide insight that more experienced ones do not on software usability, API design, and documentation. More experienced developers will more often identify inefficiencies in code, pitfalls due to edge-cases, or suggest alternate implementation approaches.\r\n\r\nI remember when JOSS launched we both wanted to help and were worried about cannibalizing our own reviewer pool, but it's grown organically, and I think we could definitely use our own reviewer pool to help incubate a new organization again."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385540130",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385540130",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385540130,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T22:24:40Z",
    "author_association": "NONE",
    "body": "Expanding `pkgreviewer` and`PackageReviewR`, and perhaps integrating them, might be a full-blown unconf project if folks want to take it up."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385619039",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-385619039",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 385619039,
    "user": {
     "login": "stephlocke",
     "id": 6452610,
     "avatar_url": "https://avatars3.githubusercontent.com/u/6452610?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/stephlocke",
     "html_url": "https://github.com/stephlocke",
     "followers_url": "https://api.github.com/users/stephlocke/followers",
     "following_url": "https://api.github.com/users/stephlocke/following{/other_user}",
     "gists_url": "https://api.github.com/users/stephlocke/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/stephlocke/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/stephlocke/subscriptions",
     "organizations_url": "https://api.github.com/users/stephlocke/orgs",
     "repos_url": "https://api.github.com/users/stephlocke/repos",
     "events_url": "https://api.github.com/users/stephlocke/events{/privacy}",
     "received_events_url": "https://api.github.com/users/stephlocke/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T07:49:34Z",
    "author_association": "NONE",
    "body": "I'm happy for PackageReviewR to be cannibalised into ropensci or worked on standalone. I'm not at the unconf this year but can facilitate/assist/mentor remotely."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/386540216",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-386540216",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 386540216,
    "user": {
     "login": "annakrystalli",
     "id": 5583057,
     "avatar_url": "https://avatars1.githubusercontent.com/u/5583057?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/annakrystalli",
     "html_url": "https://github.com/annakrystalli",
     "followers_url": "https://api.github.com/users/annakrystalli/followers",
     "following_url": "https://api.github.com/users/annakrystalli/following{/other_user}",
     "gists_url": "https://api.github.com/users/annakrystalli/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/annakrystalli/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/annakrystalli/subscriptions",
     "organizations_url": "https://api.github.com/users/annakrystalli/orgs",
     "repos_url": "https://api.github.com/users/annakrystalli/repos",
     "events_url": "https://api.github.com/users/annakrystalli/events{/privacy}",
     "received_events_url": "https://api.github.com/users/annakrystalli/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/4/2018",
    "updated_at": "2018-05-04T08:47:06Z",
    "author_association": "NONE",
    "body": "Sorry to arrive late to this party. Very happy for `pkgreviewr` to be integrated into a more comprehensive suite of tools. And absolutely love `revtools` as a name! 💜💯"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387901398",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-387901398",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 387901398,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T23:06:50Z",
    "author_association": "NONE",
    "body": "I've been working on a tool to create a package diagnostic report.  I had originally thought of it as giving a quick scan for us rOpenSci editors to use, and also provide a standardized build environment, but I've expanded its scope to try to cover numerous things that reviewers could use.  Working on this [here](https://github.com/noamross/launchboat) (draft report [here](https://noamross.github.io/launchboat/pkg-report.html), but 100% intend to fold it into `pkgreviewr` or its successors.   The thing I've gotten into recently is trying to provide a report about package functions, their [relative complexity and relationships amongst each other using static code analysis]().\r\n\r\nAnyway, it sounds like we have two potential ideas here:\r\n\r\n-  A Day 2 conversation about review from a social/institutional/planning perspective\r\n-  A unconf _project -to expand package review tools specific to R and rOpenSci.  To this idea I would throw in the idea of adding some [new goodpractice checks](https://github.com/MangoTheCat/goodpractice/issues).\r\n\r\nI'll open a new issue for the 2nd bullet."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389276942",
    "html_url": "https://github.com/ropensci/unconf18/issues/37#issuecomment-389276942",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/37",
    "id": 389276942,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T18:59:57Z",
    "author_association": "NONE",
    "body": "I did mention the rOpenSci reviewing guidelines to the software working group in our center for data to health (CD2H) project. This is a group that is encouraging software best practices in CTSA (Clinical & Translational Sciences Award) centers, and they are looking for a similar kind of review process.\r\n\r\nThey seemed very interested, and I'm happy to facilitate any conversations rOpenSci people might want to have with them."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/37/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#37"
 },
 {
  "id": 317426374,
  "url": "https://github.com/ropensci/unconf18/issues/35",
  "title": "Security/Safety \"Best Practices\" for rOpenSci Package Developers/Reviewers",
  "created_by": "hrbrmstr",
  "created_at": "4/24/2018",
  "body": "We've done _a bit_ of this ad-hoc, but we _could_ spend some dedicated cycles ensuring that rOpenSci not only has the best technical and maintenance standards — which it _most certainly_ does — but is also the de-facto standard to replicate when considering safety/security.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384122092",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-384122092",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 384122092,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:28:11Z",
    "author_association": "NONE",
    "body": "How are you thinking about safety/security?  I think this is a great concept."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384123003",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-384123003",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 384123003,
    "user": {
     "login": "karthik",
     "id": 138494,
     "avatar_url": "https://avatars2.githubusercontent.com/u/138494?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/karthik",
     "html_url": "https://github.com/karthik",
     "followers_url": "https://api.github.com/users/karthik/followers",
     "following_url": "https://api.github.com/users/karthik/following{/other_user}",
     "gists_url": "https://api.github.com/users/karthik/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/karthik/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/karthik/subscriptions",
     "organizations_url": "https://api.github.com/users/karthik/orgs",
     "repos_url": "https://api.github.com/users/karthik/repos",
     "events_url": "https://api.github.com/users/karthik/events{/privacy}",
     "received_events_url": "https://api.github.com/users/karthik/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:33:39Z",
    "author_association": "MEMBER",
    "body": "We discuss this regularly in our staff channels and would be super grateful for your advice/help on this! cc @maelle "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384158274",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-384158274",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 384158274,
    "user": {
     "login": "maelle",
     "id": 8360597,
     "avatar_url": "https://avatars0.githubusercontent.com/u/8360597?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/maelle",
     "html_url": "https://github.com/maelle",
     "followers_url": "https://api.github.com/users/maelle/followers",
     "following_url": "https://api.github.com/users/maelle/following{/other_user}",
     "gists_url": "https://api.github.com/users/maelle/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/maelle/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/maelle/subscriptions",
     "organizations_url": "https://api.github.com/users/maelle/orgs",
     "repos_url": "https://api.github.com/users/maelle/repos",
     "events_url": "https://api.github.com/users/maelle/events{/privacy}",
     "received_events_url": "https://api.github.com/users/maelle/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T04:37:00Z",
    "author_association": "MEMBER",
    "body": "We'd like to link to  https://ropenscilabs.github.io/r-security-practices/  whenever it's ready. Just sayin' 👼 "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389040337",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389040337",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389040337,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T04:37:56Z",
    "author_association": "NONE",
    "body": "@hrbrmstr I'm interested in learning more about how to think about security/safety w.r.t. R.  That's all I have to add for now 😉 "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389123065",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389123065",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389123065,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T10:43:39Z",
    "author_association": "NONE",
    "body": "I somehow missed the comment 20d ago @elinw (apologies). https://github.com/hrbrmstr/rpwnd provides some context for the evil one can do with R and https://ropenscilabs.github.io/r-security-practices/ (which  @stephlocke penned and @maelle noted) has a great start for that and other topics.\r\n\r\nPackages with embedded other-lang libraries need care & feeding and some way to inform users they are in need of an update. Package authors may be putting vulnerable researchers (some who may not even know they fit that classification) and users in harms way without even knowing it depending on what type of internet calls they make or system traces they leave around. \r\n\r\nWe also started work last year on a way to help ensure package download safety (https://ropensci.org/blog/2017/07/25/notary/) but all of us who worked on it have been super busy and even if we weren't, it's somewhat moot b/c there's no backing infrastructure for it nor support in R itself for it (which is where it'd need to be).\r\n\r\nOne thing from the `notary` work that'd be an interesting \"mandate\" from rOpenSci is the requirement that all contributors use PGP and sign all commits and no GH merges or releases happen w/o that. Since R has no way for us to have \"developer certs\" like Apple or Android have for their apps, and since the package ecosystem is more collaborative in nature, the \"everybody PGPs\" approach at least provides a better guarantee that we can truly trace commits back to the person and not just the GH account.\r\n\r\nIn the context of ^^ perhaps one \"fun\" (I have weird ideas of what constitute that) wld be to get everyone on Keybase at the unconf. I 💙💙💙 what @stephlocke is doing with that in her personal and professional R work and perhaps finishing https://github.com/hrbrmstr/keybase wld be a possible unconf project."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389156795",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389156795",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389156795,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T12:57:36Z",
    "author_association": "NONE",
    "body": "In general, we try to make sure that mandates for RO packages go through a\nprocess that includes internal use, recommendation, good tooling that\nreduces effort and good docs/tutorials (not necessarily in that order)\nbefore requiring them. So work that advances any of those would make a\nmandate more likely.\n\n>\nI'd be interested in starting with tooling that could add this check (using\n**git2r**?)  to both our onboarding checks and our nightly builds, along\nwith other security best practices (goodpractices 😉).\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389160738",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389160738",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389160738,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T13:10:36Z",
    "author_association": "NONE",
    "body": "I’ve been on small projects that tried to mandate PGP and it was really painful and hard to enforce.\n\nIt does worry me how much trust a lot of packages put into API calls to download data, both assuming the source must be safe and assuming nothing happens in the space between requestor and requested (e.g. a redirect to a site distributing malware).  I don’t see a lot of validation or sanitizing. \n\n\n> On May 15, 2018, at 8:57 AM, Noam Ross <notifications@github.com> wrote:\n> \n> In general, we try to make sure that mandates for RO packages go through a\n> process that includes internal use, recommendation, good tooling that\n> reduces effort and good docs/tutorials (not necessarily in that order)\n> before requiring them. So work that advances any of those would make a\n> mandate more likely.\n> \n> >\n> I'd be interested in starting with tooling that could add this check (using\n> **git2r**?) to both our onboarding checks and our nightly builds, along\n> with other security best practices (goodpractices 😉).\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/ropensci/unconf18/issues/35#issuecomment-389156795>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAuEfQY8iFu7G90SooS6wmryJqRTCdN1ks5tytDCgaJpZM4TijcH>.\n> \n\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389190682",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389190682",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389190682,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T14:37:42Z",
    "author_association": "NONE",
    "body": "Aye. And there's \"guidance\" that might be useful to note in some API packages. For instance, I wrote `epidata` to access the economic policy institute data and use the data from it for various classes. Each call out to that API I do from home is logged (Federal requirement and also a side-$-business) by Comcast and searchable by authorities or interested third-parties. They use that data to classify me as a left-leaning activist (when, in fact, I'm really just a non-affiliated anti-authority anarchist :-) I've seen evidence of that in various mailings, adverts on sites that manage to get through my ad-blocking infrastructure, etc. And, due to a job stint at one of the world's largest network providers, I've also maybe even seen said databases. It's worse in other countries/regions and many at-risk researchers (again, who don't even realize they're 'at-risk') do not realize they shld be using, say, a VPN for some API calls or using DNS-over-HTTPS or DNSCrypt since DNS leaks where you're going.\r\n\r\nI'm not suggesting rOpenSci can solve or provide guidance on all the issues, but we (I say \"we\" despite working in a rly strange proto-science vs a real one like y'all) cld definitely up the safety game for those using R."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389191822",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389191822",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389191822,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T14:41:30Z",
    "author_association": "NONE",
    "body": "@elinw (re: PGP) aye, is is no panacea and unless you're a die heard infosec geek or have a die hard infosec hobby, being religious about PGP configs and use is a pain, especially when setting up new systems. Keybase definitely helps alot and perhaps we (like @noamross was alluding to) cld develop a \"safety/security check\" package/function similar to `devtools::dr_devtools()` or `goodpractice` as part of this to help both identify gaps and provide helpers or at least friendly tips on fixing things."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389204809",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389204809",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389204809,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T15:15:42Z",
    "author_association": "NONE",
    "body": "If you want to do live testing of a package, like seeing what system files/folders it modifies, I'm working on a Dockerized setup for our standard package tests: https://github.com/noamross/launchboat, so one could run tests in an isolated environment before installing."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389215400",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389215400",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389215400,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T15:45:15Z",
    "author_association": "NONE",
    "body": "Oh this is all *so* interesting. After reading about `notary` last year and some linked horror stories I try to sign all my commits now. So thanks @hrbrmstr !\r\n\r\nIt occurs to me that this is related to this [possible project](https://github.com/ropensci/unconf18/issues/54) and in fact may be a key component. It is so easy to build packages/scripts and miss significant security considerations (at least for me) that this area likely has many spaces that could be improved upon. Providing means for reviewers to identify and even just consider that as part of a reviewer suite of tools would likely be useful.\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389277380",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389277380",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389277380,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:01:19Z",
    "author_association": "NONE",
    "body": "@noamross aye. been keeping an 👀 on `launchboat` and am also keen to also be watching the network calls pkgs make."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389286848",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389286848",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389286848,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:34:29Z",
    "author_association": "MEMBER",
    "body": "I'd appreciate knowing what the most realistic threat model is for the R package ecosystem and how that aligns against various measures to tighten things up.\r\n\r\nExample: I am dimly aware of malicious packages in some other language's repository that had names very close to the \"real\" packages. And the Bad People exploited mis-spellings to get users to install and run them. That's a really different threat from, say, someone impersonating me and making commits to packages I maintain.\r\n\r\nWhich threats should we be most worried about and who has to do something to mitigate it?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389287635",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389287635",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389287635,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T19:36:46Z",
    "author_association": "NONE",
    "body": "+1 to all of this…\r\nAlso, and maybe this is limited audience (or just unrelated), but basic file threat-assessment. Sometimes you've gotta deal with someone else's data, and (e.g. with readxl) they have to get it to you some way…"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389311760",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389311760",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389311760,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:00:17Z",
    "author_association": "NONE",
    "body": "That's a 👍 point @batpigandme. \"Thankfully?\" malicious XML and JSON docs are usually targeting browsers and wld have some serious impediments trying to account for various R interpreter environs. Similarly, malicious PDFs are usually targeting Acrobat or Preview or third-party Windows PDF readers. However, the pkgs in the R ecosystem are all using the same core, [vulnerable] libraries so there is room for caution. And, we all get Word docs, Excel docs, PDFs, etc which all have threat vectors."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/389312210",
    "html_url": "https://github.com/ropensci/unconf18/issues/35#issuecomment-389312210",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/35",
    "id": 389312210,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/15/2018",
    "updated_at": "2018-05-15T21:01:52Z",
    "author_association": "NONE",
    "body": "@jennybc that's definitely a good unconf working-group mind-meld/group convo (since I'm likely far from the typical R user and cld use some examples of daily use patterns to help with said threat modeling :-)"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/35/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#35"
 },
 {
  "id": 314862403,
  "url": "https://github.com/ropensci/unconf18/issues/26",
  "title": "Datasets search",
  "created_by": "elinw",
  "created_at": "4/16/2018",
  "body": "When I'm writing tutorials or documentation or when I'm teaching I often fall back on the same sample data sets over and over. At the same time, when I need something specific such as an ordered factor I have to search around to find one.  I try to stick to the base datasets.  I was thinking that it would be neat to have something (a package or a shiny app or a combination) that would let you search for a specific class of data structure (data frame, matrix, ts, dist, cube etc (there are a lot))  an also for specific variable types for those types that support multiple types. Maybe also experimental versus observational?  https://vincentarelbundock.github.io/Rdatasets/datasets.html  has a list of the data sets, but the purpose of that archive is more to put them all into csv format in a consistent manner.\r\n\r\nAn added bonus would be to be able to make the api generic enough to search other packages but my initial goal would be the ones in datasets.",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382140279",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-382140279",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 382140279,
    "user": {
     "login": "boshek",
     "id": 18472598,
     "avatar_url": "https://avatars2.githubusercontent.com/u/18472598?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/boshek",
     "html_url": "https://github.com/boshek",
     "followers_url": "https://api.github.com/users/boshek/followers",
     "following_url": "https://api.github.com/users/boshek/following{/other_user}",
     "gists_url": "https://api.github.com/users/boshek/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/boshek/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/boshek/subscriptions",
     "organizations_url": "https://api.github.com/users/boshek/orgs",
     "repos_url": "https://api.github.com/users/boshek/repos",
     "events_url": "https://api.github.com/users/boshek/events{/privacy}",
     "received_events_url": "https://api.github.com/users/boshek/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/17/2018",
    "updated_at": "2018-04-17T20:48:56Z",
    "author_association": "NONE",
    "body": "Cool idea! Trying to figure if I understand correctly. Do you mean something like:\r\n\r\n```\r\ncheck_dataset(package = \"datasets\")\r\n# A tibble: 8 x 6\r\n  Package  Item          Title                                                        Rows  Cols Class     \r\n  <chr>    <chr>         <chr>                                                       <int> <int> <chr>     \r\n1 datasets ability.cov   Ability and Intelligence Tests                                  6     8 list      \r\n2 datasets airmiles      Passenger Miles on Commercial US Airlines, 1937-1960           24     2 ts        \r\n3 datasets AirPassengers Monthly Airline Passenger Numbers 1949-1960                   144     2 ts        \r\n4 datasets airquality    New York Air Quality Measurements                             153     6 data.frame\r\n5 datasets anscombe      Anscombe's Quartet of 'Identical' Simple Linear Regressions    11     8 data.frame\r\n6 datasets attenu        The Joyner-Boore Attenuation Data                             182     5 data.frame\r\n7 datasets attitude      The Chatterjee-Price Attitude Data                             30     7 data.frame\r\n8 datasets austres       Quarterly Time Series of the Number of Australian Residents    89     2 ts   \r\n```\r\nThen you narrow down if you are look for data.frame, list etc?. So a function that a) returns a tibble and b) accepts a package(s) as an argument?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382300867",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-382300867",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 382300867,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/18/2018",
    "updated_at": "2018-04-18T08:04:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concur here too: cool idea! It would also be pretty straightforward to integrate that within [`flipper`](https://github.com/ropenscilabs/flipper). The [mooted extension](https://github.com/ropensci/unconf18/issues/25) to [trawling all `/man` directories](https://github.com/ropensci/unconf17/issues/78) is technically straightforward, and could very easily include functionality to trawl any `@docType data` to enables those to be text-searched, and to group by return type (`@format`)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/382907788",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-382907788",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 382907788,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/19/2018",
    "updated_at": "2018-04-19T23:10:07Z",
    "author_association": "NONE",
    "body": "Cool, yes something similar to what @boshek has,  I started playing a bit just to see what the complications would be.  My basic idea would be to be able to \r\n1. Search for a data set of a particular type (e.g. data frame, ts, mts, matrix etc)\r\n2. Be able to search (within data frames I guess) for presence of variables with specific classes.\r\nSo if you take a package name as an argument get all the information about the data into a tibble and then you'd be able to say give me all the data frames with a factor.\r\n\r\nSo this is just a quick script for making a data frame from the core data. I wanted to see what some of the complications would be and they are having spaces + extra words in the Item field and having multiple classes. \r\n\r\n```\r\ndataset_list <- data(package=\"datasets\")\r\ndatasets_df <- as.data.frame(dataset_list[[\"results\"]], stringsAsFactors = FALSE)\r\ndatasets_df$short <- gsub( \" .*$\", \"\", datasets_df$Item )\r\n\r\nfor (i in 1:nrow(datasets_df)){\r\n  dataset_name <- get(datasets_df$short[i])\r\n  # Get the first class name when there is more than one. \r\n  class_name <- class(dataset_name)\r\n  datasets_df$class[i] <- class(dataset_name)[1]\r\n  datasets_df$n_classes[i] <- length(class(dataset_name))\r\n}\r\n```\r\nAnd then something like the below to get the classes but the question would be how to organize the information to make it most useful.\r\nFor example maybe something like a set of logical variables: has_numeric, has_factor, has_logical, has_integer, has_character etc. \r\n```\r\n# Figure out what would work best for people in terms of searching\r\nunlist(lapply(get(datasets_df$Item[i]), class))\r\n```"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384119179",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384119179",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384119179,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:10:54Z",
    "author_association": "NONE",
    "body": "Love this idea.  Beyond class, it would be helpful to have information about the data types. Often I need several categorical variables, and while I do love the Titanic dataset, some more diversity would be a good thing.  When writing exams I searched through [the Sleuth3 manual](https://cran.r-project.org/web/packages/Sleuth3/Sleuth3.pdf) for particular criteria but it was very time-consuming."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384121916",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384121916",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384121916,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:26:55Z",
    "author_association": "NONE",
    "body": "A helpful starting point might be last year's project examining data packages on CRAN: https://github.com/ropenscilabs/data-packages."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384124394",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384124394",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384124394,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:43:33Z",
    "author_association": "NONE",
    "body": "@jtr13  That's what I mean by class. There are so few ordered factors! So actually it would be good to know the number of each type. E.g. 3 factors, 2 ordered factors,5 numeric.  I agree that it's the combinations that get really frustrating.  When you want a simple example  having  to convert types can be a distraction from the main lesson. \r\n\r\n@noamross If packages documented like that it would be cool and we could definitely include in a dashboard.   We could at least provide a url for the description (although we can also try to scrape them).The other thing is packages that wrap APIs for accessing data. The main thing is to make it automated. \r\n\r\nThen maybe if we have a sense of what is there that let's us think about what's missing. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384125492",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384125492",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384125492,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:51:41Z",
    "author_association": "NONE",
    "body": "@elinw Got it. When do you use ordered factors? I never do! (This probably isn't the right place to discuss this...)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384125997",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384125997",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384125997,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T00:55:34Z",
    "author_association": "NONE",
    "body": "All those “too much, too little, about right” questions for one …  \n\nWhich leads to a whole other set of things.\n\nOne of the big issues for me in the base categorical data is that they have it formatted into table classes but I want my students to see them like they are a data frame meaning a more realistic s setting where there are variables of at least two types.\n\n> On Apr 24, 2018, at 8:51 PM, Joyce Robbins <notifications@github.com> wrote:\n> \n> @elinw <https://github.com/elinw> Got it. When do you use ordered factors? I never do! (This probably isn't the right place to discuss this...)\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/ropensci/unconf18/issues/26#issuecomment-384125492>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAuEfUTazsvs9GTAV4Z87zrR3YKNzUbQks5tr8iegaJpZM4TXcvS>.\n> \n\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384130194",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-384130194",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 384130194,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/24/2018",
    "updated_at": "2018-04-25T01:20:09Z",
    "author_association": "NONE",
    "body": "I've never had to use ordered factors for that kind of data for my purposes (usually visualization). I just order the levels of regular factors. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387761649",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-387761649",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 387761649,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/9/2018",
    "updated_at": "2018-05-09T14:39:43Z",
    "author_association": "NONE",
    "body": "Cool idea! One thought might be that oftentimes, when I'm looking for a teaching dataset, I'm looking for the presence of variable relationships in the data, such as smoking status (categorical) vs. BMI (continuous). So could this be another way of classifying the datasets?"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388511681",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-388511681",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 388511681,
    "user": {
     "login": "elinw",
     "id": 754813,
     "avatar_url": "https://avatars1.githubusercontent.com/u/754813?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/elinw",
     "html_url": "https://github.com/elinw",
     "followers_url": "https://api.github.com/users/elinw/followers",
     "following_url": "https://api.github.com/users/elinw/following{/other_user}",
     "gists_url": "https://api.github.com/users/elinw/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/elinw/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/elinw/subscriptions",
     "organizations_url": "https://api.github.com/users/elinw/orgs",
     "repos_url": "https://api.github.com/users/elinw/repos",
     "events_url": "https://api.github.com/users/elinw/events{/privacy}",
     "received_events_url": "https://api.github.com/users/elinw/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-11T23:43:12Z",
    "author_association": "NONE",
    "body": "Yes so that's what I was trying to say about getting the classes of the variables for the data frames.\r\nhttps://github.com/elinw/dataestsearch/blob/master/R/datasetsearch.R\r\n\r\nIs a concept but not that well coded (loops!! ) ... and it doesn't handle getting the variable types for tibbles but it does work for data frames.  I mean this is just a concept but if we have a bunch of people we could make it really nice and figure out what is useful.  "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388589692",
    "html_url": "https://github.com/ropensci/unconf18/issues/26#issuecomment-388589692",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/26",
    "id": 388589692,
    "user": {
     "login": "laderast",
     "id": 3315629,
     "avatar_url": "https://avatars2.githubusercontent.com/u/3315629?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/laderast",
     "html_url": "https://github.com/laderast",
     "followers_url": "https://api.github.com/users/laderast/followers",
     "following_url": "https://api.github.com/users/laderast/following{/other_user}",
     "gists_url": "https://api.github.com/users/laderast/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/laderast/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/laderast/subscriptions",
     "organizations_url": "https://api.github.com/users/laderast/orgs",
     "repos_url": "https://api.github.com/users/laderast/repos",
     "events_url": "https://api.github.com/users/laderast/events{/privacy}",
     "received_events_url": "https://api.github.com/users/laderast/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/12/2018",
    "updated_at": "2018-05-12T23:14:07Z",
    "author_association": "NONE",
    "body": "Ah, ok, that makes sense. I did something similar with a shiny workshop in identifying variables from a `data.frame` so that factor, character, and continuous variables would populate the right dropdowns for any dataset that was loaded into an app. It's the same idea as your code: https://github.com/laderast/gradual_shiny/blob/master/03_observe_update/helper.R"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/26/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#26"
 },
 {
  "id": 314357814,
  "url": "https://github.com/ropensci/unconf18/issues/24",
  "title": "Toward a general-purpose API response data tidier",
  "created_by": "aedobbyn",
  "created_at": "4/14/2018",
  "body": "I think the goal for the unconf would be to lay the foundation for an eventual package that is meant to sit in a user’s pipeline directly after a `jsonlite::fromJSON()` call, in place of initial bespoke munging of the nested list. The package would:\r\n\r\n- Tidy the nested list output into a tibble with one nested row per input\r\n    - Will be a best guess at how the user wants data formatted; at worst it should be easier to work with than the raw output\r\n- Allow for recursively filling `.empty` values at each level of the list (i.e., convert empty elements and `NULL`s to `NA`s or a user-defined value) so the tibble can be easily unnested\r\n- Include special handling for the most commonly used APIs so we know we’re getting these right (?)\r\n\r\nThe first step here (which is the goal for the unconf -- many thanks to @jennybc for working through the initial idea with me) seems to me to be defining patters in 1) API requests and their resulting responses and 2) in the most common/successful strategies people use in their tidying process. I think it would be useful to query a few more-or-less representative RESTful APIs and note the commonalities in the solutions for tidying them. The idea would be to extract the intersection of these solutions into general-purpose verbs and also to identify where these approaches fail.\r\n\r\nI could see this package being useful not just for one-off data grabbing and tidying jobs but also for developing packages that interface with an arbitrary API. Could of course be used on any nested list, but I think it makes sense to keep the scope of the package focused to API data.\r\n\r\nFor a name, I’m thinking **`roomba`**[^1] but definitely not married to it. \r\n\r\n[^1]: Provided that’s cool with the relevant trademark attorneys :satisfied:",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385214632",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-385214632",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 385214632,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/28/2018",
    "updated_at": "2018-04-29T00:18:17Z",
    "author_association": "NONE",
    "body": "The [GitNub graphQL API](https://developer.github.com/v4) is one common source of these wonderfully nested lists, likely any graphQL based API would produce similar nested outputs. \r\n\r\nI have found the data pretty cumbersome to work with as nested lists, so definitely think this is an area where additional tooling or a different data representation like you describe would help."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385219721",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-385219721",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 385219721,
    "user": {
     "login": "aedobbyn",
     "id": 4908283,
     "avatar_url": "https://avatars2.githubusercontent.com/u/4908283?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/aedobbyn",
     "html_url": "https://github.com/aedobbyn",
     "followers_url": "https://api.github.com/users/aedobbyn/followers",
     "following_url": "https://api.github.com/users/aedobbyn/following{/other_user}",
     "gists_url": "https://api.github.com/users/aedobbyn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/aedobbyn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/aedobbyn/subscriptions",
     "organizations_url": "https://api.github.com/users/aedobbyn/orgs",
     "repos_url": "https://api.github.com/users/aedobbyn/repos",
     "events_url": "https://api.github.com/users/aedobbyn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/aedobbyn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/28/2018",
    "updated_at": "2018-04-29T02:03:43Z",
    "author_association": "NONE",
    "body": "Awesome thanks for pointing to that @jimhester!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385226265",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-385226265",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 385226265,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T05:04:46Z",
    "author_association": "MEMBER",
    "body": "This sounds fantastic, I'm definitely interested in strategies for working with these deeply nested lists.  @sckott , @maelle and I have recently been playing with `jq` in this context; e.g. https://ropensci.org/blog/2018/04/26/rectangling-onboarding/.  `jq` is cool and all but I think it would be great to have a more native R interface for doing these kind of queries (analogous to `dplyr` instead of SQL).  \r\n\r\nI'm also curious about other query strategies for deeply nested JSON (i.e. other than jq).  I've found some cool thinks can be done using the functions from @jeroen's `jsonld` package, and have also played around using SPARQL to do graph queries on JSON files (eg https://ropensci.github.io/rdflib/articles/rdf_intro.html).  Again both of these approaches help do things that can be cumbersome with `purrr` alone but could use some nicer interfaces I think.  SPARQL queries can be tricky to write (at least for me, I struggle with pure SQL queries too), but the nice thing is the return type is essentially always a `data.frame`, so no additional rectangling needed once you know how to ask for what you want.\r\n\r\nI've also been meaning to dive more into @hrbrmstr's excellent little book, https://github.com/hrbrmstr/drill-sergeant-rstats,  on using Apache Drill from R to query large numbers of deeply nested JSON files.  \r\n\r\nBoth the SPARQL and Drill approaches can optionally communicate over ODBC protocols, which should make some interesting potential for integration with `dplyr` / `dbplyr` and the great work folks at RStudio have been doing with database connections.  Not really sure what is possible in that regard but would love to explore more.  "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385377461",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-385377461",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 385377461,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T11:56:21Z",
    "author_association": "NONE",
    "body": "Agreed, it would be great to have something you wouldn't need to learn a new DSL for, particularly because there doesn't seem to be one consensus standard DSL used to query JSON like there is for XML (XQuery)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388490138",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-388490138",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 388490138,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-11T21:27:07Z",
    "author_association": "MEMBER",
    "body": "Its possible we could build something on top of `jqr` - since it is very fast, and jeroen is working on streaming, so it could be used for those large data problems as well.  I think we could build in operations like replacing empty/NULL values with NA, and similar nasty problems with nested data. "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388496706",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-388496706",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 388496706,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-11T22:01:36Z",
    "author_association": "NONE",
    "body": "I like the `jqr` suggestion (Drill, et. al. is a pretty heavyweight dep), esp if we build filters / filter helpers (I'm not really a fan of the syntax b/c it messes with my own mental model of how it ought to work but that's not really a big issue and it's a great tool)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388525499",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-388525499",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 388525499,
    "user": {
     "login": "aedobbyn",
     "id": 4908283,
     "avatar_url": "https://avatars2.githubusercontent.com/u/4908283?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/aedobbyn",
     "html_url": "https://github.com/aedobbyn",
     "followers_url": "https://api.github.com/users/aedobbyn/followers",
     "following_url": "https://api.github.com/users/aedobbyn/following{/other_user}",
     "gists_url": "https://api.github.com/users/aedobbyn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/aedobbyn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/aedobbyn/subscriptions",
     "organizations_url": "https://api.github.com/users/aedobbyn/orgs",
     "repos_url": "https://api.github.com/users/aedobbyn/repos",
     "events_url": "https://api.github.com/users/aedobbyn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/aedobbyn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/11/2018",
    "updated_at": "2018-05-12T03:04:02Z",
    "author_association": "NONE",
    "body": "Building something on top of `jqr` sounds useful, rather than doing all of the munging in an R object. Even if we only get so far as sniffing out and `NA`ifying `NULL`s and making it easier to flatten nested data in a way that usually makes sense, I think that's a win.\r\n\r\n+1 for abstracting away potentially multiple DSLs for querying JSON.\r\n\r\n@hrbrmstr I don't know anything about Drill but fwiw the Preface of your book is fantastic."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388570068",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-388570068",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 388570068,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/12/2018",
    "updated_at": "2018-05-12T17:21:28Z",
    "author_association": "MEMBER",
    "body": "Agree with all of the above!  @sckott and @aedobbyn both identify the nuisance of `empty`, and I agree with @hrbrmstr 's observation that the syntax isn't super intuitive.  Would be nice to have a more `dplyr`-esque DSL, e.g. something more like\r\n\r\n\r\n```r\r\njsonblob %>% filter(repo.owner.name == \"hrbrmstr\")\r\n```\r\n\r\nMaybe it's already obvious, but just wanted to note that I think this would provide a nice way to query R lists in general (since there's a pretty tight JSON<->list mapping); such an interface isn't specific to just data already in JSON or just REST APIs.  \r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388587503",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-388587503",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 388587503,
    "user": {
     "login": "aedobbyn",
     "id": 4908283,
     "avatar_url": "https://avatars2.githubusercontent.com/u/4908283?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/aedobbyn",
     "html_url": "https://github.com/aedobbyn",
     "followers_url": "https://api.github.com/users/aedobbyn/followers",
     "following_url": "https://api.github.com/users/aedobbyn/following{/other_user}",
     "gists_url": "https://api.github.com/users/aedobbyn/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/aedobbyn/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/aedobbyn/subscriptions",
     "organizations_url": "https://api.github.com/users/aedobbyn/orgs",
     "repos_url": "https://api.github.com/users/aedobbyn/repos",
     "events_url": "https://api.github.com/users/aedobbyn/events{/privacy}",
     "received_events_url": "https://api.github.com/users/aedobbyn/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/12/2018",
    "updated_at": "2018-05-12T22:23:15Z",
    "author_association": "NONE",
    "body": "Exactly!\r\n  \r\nOriginally I'd been thinking of this at the level of something that's already an R object but riddled with empty vectors etc. so workflow would look like \r\n\r\n```\r\njsonblob %>% \r\n  jsonlite::fromJSON() %>% \r\n  roomba::clean()\r\n```\r\n\r\nor something to that effect. But if doing the `clean`ing or the `filter`ing or whtever it may be on the `jsonblob` itself makes more sense then I'm all for that.\r\n\r\nI still think a useful first step will be in identifying common patterns and stumbling blocks in nested structures like API response objects and constructing techniques for cleaning them in ways that are safe make sense in the majority of cases.\r\n\r\nAnd totally agreed @cboettig I think we can tackle a lot of nasty nested list cases for free by addressing the API data specifically. (Maybe it's also worth identifying other common list annoyances that don't manifest in API response data, though.)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390306993",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390306993",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390306993,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T19:19:23Z",
    "author_association": "MEMBER",
    "body": "Just spitballing a bit further on this.  Not sure how common this case is for others, but often there's a JSON object/blob with some pattern I understand and want to extract without having to make explicit references to just how deep it is buried.  For instance, something like the example below:\r\n\r\n```\r\n{\r\n\"stuff\": [{\r\n               \"buried\": [\r\n                               \"deep\": [\r\n                                             {\r\n                                              \"goodstuff\": \"here\",\r\n                                              \"name\": \"Bob Rudis\",\r\n                                              \"secret_power\": ..., \r\n                                             },\r\n                                             {\r\n                                              \"goodstuff\": \"here\",\r\n                                              \"name\": \"Amanda Dobbyn\",\r\n                                              \"secret_power\": ..., \r\n                                              \"more_nested_stuff\": { ... }\r\n                                             },\r\n   \r\n                                             ]\r\n                                ]\r\n              },\r\n              {\r\n               ...\r\n              }\r\n              ]\r\n\r\n}\r\n```\r\n\r\nMaybe I just want the value of the `name`s of anything found in JSON objects that also contain the key-value pair `\"goodstuff\": \"here\"`.  More generally, I'd like to just jump to that point in the \"graph\" and navigate from there, e.g. maybe I want to go up to the parent object and get some additional property, etc.  \r\n\r\nMaybe this can be done in `JQ` already, but it's not intuitive to me how to express it.  (particularly if I want to start \"walking the graph\" from that point without specifying just how I descended down to that node... My ideal interface would let me have some notion of variables, and let me return all matches to the requested variables in columns  of a `data.frame`.\r\n\r\n\r\n(Not sure if the above is at all helpful as illustration, but will bring some real examples of highly nested json blobs I struggle with for fodder for an API design)\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390332059",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390332059",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390332059,
    "user": {
     "login": "hrbrmstr",
     "id": 509878,
     "avatar_url": "https://avatars2.githubusercontent.com/u/509878?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/hrbrmstr",
     "html_url": "https://github.com/hrbrmstr",
     "followers_url": "https://api.github.com/users/hrbrmstr/followers",
     "following_url": "https://api.github.com/users/hrbrmstr/following{/other_user}",
     "gists_url": "https://api.github.com/users/hrbrmstr/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/hrbrmstr/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/hrbrmstr/subscriptions",
     "organizations_url": "https://api.github.com/users/hrbrmstr/orgs",
     "repos_url": "https://api.github.com/users/hrbrmstr/repos",
     "events_url": "https://api.github.com/users/hrbrmstr/events{/privacy}",
     "received_events_url": "https://api.github.com/users/hrbrmstr/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:05:15Z",
    "author_association": "NONE",
    "body": "that made me think of something fairly obscure: \"GraphGrep\" (https://cs.nyu.edu/shasha/papers/graphgrep/icpr2002.pdf) and a thing that kinda built on it \"Closure Trees\" (https://www.cs.ucsb.edu/~dbl/papers/he_icde_2006.pdf). It does require building a graph and index but for sufficiently large structures it might be worth it. For smaller ones that index build time might be small enough. @yonicd has been layering in some recursion on tidyverse bits but we cld also likely scaffold a query language on to `rapply()` if `jq` cannot do it."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390336292",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390336292",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390336292,
    "user": {
     "login": "sckott",
     "id": 577668,
     "avatar_url": "https://avatars1.githubusercontent.com/u/577668?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/sckott",
     "html_url": "https://github.com/sckott",
     "followers_url": "https://api.github.com/users/sckott/followers",
     "following_url": "https://api.github.com/users/sckott/following{/other_user}",
     "gists_url": "https://api.github.com/users/sckott/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/sckott/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/sckott/subscriptions",
     "organizations_url": "https://api.github.com/users/sckott/orgs",
     "repos_url": "https://api.github.com/users/sckott/repos",
     "events_url": "https://api.github.com/users/sckott/events{/privacy}",
     "received_events_url": "https://api.github.com/users/sckott/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:24:11Z",
    "author_association": "MEMBER",
    "body": "just having a play @cboettig with your eg above cleaned up:\r\n\r\n```r\r\nx <- '{\r\n\"stuff\": {\r\n   \"buried\": {\r\n      \"deep\": [\r\n       {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Bob Rudis\",\r\n        \"secret_power\": 5\r\n       },\r\n       {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Amanda Dobbyn\",\r\n        \"secret_power\": 4, \r\n        \"more_nested_stuff\": 4\r\n        }\r\n      ],\r\n      \"alsodeep\": 2342423234,\r\n      \"deeper\": {\r\n        \"foo\": [\r\n          {\r\n            \"goodstuff\": 5,\r\n            \"name\": \"barb\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n}}'\r\n```\r\n\r\n```r\r\njqr::jq(x, 'recurse(.[]?) | objects | select(has(\"goodstuff\"))')\r\n[\r\n    {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Bob Rudis\",\r\n        \"secret_power\": 5\r\n    },\r\n    {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Amanda Dobbyn\",\r\n        \"secret_power\": 4,\r\n        \"more_nested_stuff\": 4\r\n    },\r\n    {\r\n        \"goodstuff\": 5,\r\n        \"name\": \"barb\"\r\n    }\r\n]\r\n```\r\n\r\nthe jq command `'recurse(.[]?) | objects | select(has(\"goodstuff\"))'` is clearly not something we'd want a end user to have to deal with, but could be hidden under some nicer syntax 😼 "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390353046",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390353046",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390353046,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T22:56:00Z",
    "author_association": "MEMBER",
    "body": "Thanks @sckott , that's awesome ✨ .  And thanks for getting us to a reproducible example.  \r\n\r\nMinor question first: that matches all blobs with the property `goodstuff`, it would be nice to match conditionally, so we only get the blob if `\"goodstuff\": \"here\"`, (i.e. `barb` should not be included).\r\n\r\nOne thing that I struggle with in JQ is that it's not clear how to walk up and down the graph though -- imagine I want the number from the `alsodeep` field as an `id` for everything in that blob?  And maybe I also want to descend deeper from the `goodstuff` and pull out some other element, like `more_nested_stuff.b` (if `more_nested_stuff` actually had more nesting in it, as in  my [modified toy example](https://gist.github.com/cboettig/e8a0947ced5224cd468af941dda002c6#file-ex-json).  \r\n\r\nThe syntax is super awkward, but it's possible to do this kind conditional filter and walking with SPARQL variables.  The query: \r\n\r\n```r\r\nq <- '\r\nPREFIX x: <x:>\r\nSELECT ?name, ?power ?b ?id\r\nWHERE { \r\n  ?object x:goodstuff \"here\" .\r\n  ?object x:name ?name .\r\n  OPTIONAL { ?object x:secret_power      ?power } .\r\n  OPTIONAL { ?object x:more_nested_stuff ?y .\r\n             ?y      x:b                 ?b} .\r\n  OPTIONAL {\r\n             ?parent x:deep ?object .\r\n             ?parent x:alsodeep ?id\r\n  }\r\n}'\r\nrdf_query(blob, q)\r\n```\r\n\r\nReturns a nice compact `tibble` containing only the columns named in `SELECT`.   (note that anything proceeded by a `?` is a variable, and we can call it wahtever we want.  Note that variables can be used to indicate the object (`?object`, `?parent`, the key (not shown), or the value `?power`, `?id`, `?y`)\r\n\r\n```\r\n# A tibble: 3 x 4\r\n  name          power     b          id\r\n  <chr>         <int> <int>       <dbl>\r\n1 scott            NA    NA         NA \r\n2 Amanda Dobbyn     4     2 2342423234.\r\n3 Bob Rudis         5    NA 2342423234.\r\n```\r\n\r\nNote that `barb` is absent (because she doesn't have `\"goodstuff\": \"here\"`, and `scott` is included.  Dropping the `OPTIONAL` bits would cause rows missing those elements to be omitted.  \r\n\r\nI know the SPARQL syntax is basically 💩 (particularly with the ugly prefix stuff), but it is perhaps amenable to being broken down into a `dplyr` like syntax in much the way `dplyr` already does for SQL?  I'm not sure that we really want to use `rdflib`, but I am intrigued by the ability to walk the graph with variables and select and filter with SQL like statements...\r\n\r\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390354034",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390354034",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390354034,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T23:02:49Z",
    "author_association": "MEMBER",
    "body": "(p.s. meant to include reproducible code link as [gist](https://gist.github.com/cboettig/e8a0947ced5224cd468af941dda002c6))"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390406859",
    "html_url": "https://github.com/ropensci/unconf18/issues/24#issuecomment-390406859",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/24",
    "id": 390406859,
    "user": {
     "login": "jimhester",
     "id": 205275,
     "avatar_url": "https://avatars3.githubusercontent.com/u/205275?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jimhester",
     "html_url": "https://github.com/jimhester",
     "followers_url": "https://api.github.com/users/jimhester/followers",
     "following_url": "https://api.github.com/users/jimhester/following{/other_user}",
     "gists_url": "https://api.github.com/users/jimhester/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jimhester/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jimhester/subscriptions",
     "organizations_url": "https://api.github.com/users/jimhester/orgs",
     "repos_url": "https://api.github.com/users/jimhester/repos",
     "events_url": "https://api.github.com/users/jimhester/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jimhester/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/19/2018",
    "updated_at": "2018-05-19T13:59:36Z",
    "author_association": "NONE",
    "body": "Alternatively we could just use R to walk the list, in [tidyversedashboard](https://github.com/jimhester/tidyversedashboard/blob/5e22668d80d7ab15efe237a2dfd961472ec06141/R/issue_progress.R#L10-L27) I wrote a simple function to do a depth first search of a nested list returning the index of the first location that matched a predicate function. Extending this to return indexes of all the matches rather than only the first would solve this problem, here is the example with the current implementation which returns only the first match.\r\n\r\n``` r\r\ndfs_idx <- function(x, f) {\r\n  res <- integer()\r\n  walk <- function(x, depth) {\r\n    for (i in seq_along(x)) {\r\n      if (isTRUE(tryCatch(f(x[[i]]), error = function(e) FALSE))) {\r\n        res[[depth]] <<- i\r\n        return(TRUE)\r\n      } else {\r\n        if (is.list(x[[i]]) && isTRUE(walk(x[[i]], depth + 1))) {\r\n          res[[depth]] <<- i\r\n          return(TRUE)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  walk(x, 1)\r\n  res\r\n}\r\n\r\nx <- jsonlite::fromJSON('{\r\n\"stuff\": {\r\n   \"buried\": {\r\n      \"deep\": [\r\n       {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Bob Rudis\",\r\n        \"secret_power\": 5\r\n       },\r\n       {\r\n        \"goodstuff\": \"here\",\r\n        \"name\": \"Amanda Dobbyn\",\r\n        \"secret_power\": 4, \r\n        \"more_nested_stuff\": 4\r\n        }\r\n      ],\r\n      \"alsodeep\": 2342423234,\r\n      \"deeper\": {\r\n        \"foo\": [\r\n          {\r\n            \"goodstuff\": 5,\r\n            \"name\": \"barb\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}', simplifyVector = FALSE)\r\n\r\nx[[dfs_idx(x, function(x) { x$goodstuff == \"here\" })]]$name\r\n#> [1] \"Bob Rudis\"\r\n```\r\n\r\nCreated on 2018-05-19 by the [reprex package](http://reprex.tidyverse.org) (v0.2.0).\r\n\r\n"
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/24/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#24"
 },
 {
  "id": 317821164,
  "url": "https://github.com/ropensci/unconf18/issues/42",
  "title": "Workflow for publications using Rmarkdown with users that won't get passed Word/Google docs",
  "created_by": "lauracion",
  "created_at": "4/25/2018",
  "body": "This is a specific issue related to #27 (and somewhat to #22). How to to successfully and painlessly collaborate in a publication workflow using Rmarkdown with researchers (or others) that are not interested at all in getting passed Google docs.\r\n\r\nI have no idea how to tackle this. I know this is something I would use *a lot*.\r\n\r\nThere is some discussion and ideas in this thread: https://twitter.com/CMastication/status/942151771627155457\r\n\r\nAnd a deeper discussion here: https://community.rstudio.com/t/publishing-rmarkdown-to-google-docs/832 where @jennybc says \"The problem we ran into is that compiling .Rmd to Google Doc is not that hard. But for the whole workflow to truly be useful, you then want to go the other direction. And that is really hard.\" Wondering if this got any easier since last time this was discussed.\r\n\r\nFWIW, my 2 cents for the 2018 unconf :slightly_smiling_face:   ",
  "state": "open",
  "comments": [
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384467358",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384467358",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384467358,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-25T23:42:02Z",
    "author_association": "NONE",
    "body": "This is maybe a bit off-topic here, but has anyone come up with a way to make the gdoc/work -> RMD conversion work s/t the R sections are retained? This would go for any backwards conversion from a 'final' document format a non-RMD user might use (TeX, Word, etc). For me, this would really close the collaboration loop for folks who want to edit the text but don't care at all about the nuts and bolts of a literate programming/data science document."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384501943",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384501943",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384501943,
    "user": {
     "login": "cboettig",
     "id": 222586,
     "avatar_url": "https://avatars3.githubusercontent.com/u/222586?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/cboettig",
     "html_url": "https://github.com/cboettig",
     "followers_url": "https://api.github.com/users/cboettig/followers",
     "following_url": "https://api.github.com/users/cboettig/following{/other_user}",
     "gists_url": "https://api.github.com/users/cboettig/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/cboettig/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/cboettig/subscriptions",
     "organizations_url": "https://api.github.com/users/cboettig/orgs",
     "repos_url": "https://api.github.com/users/cboettig/repos",
     "events_url": "https://api.github.com/users/cboettig/events{/privacy}",
     "received_events_url": "https://api.github.com/users/cboettig/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/25/2018",
    "updated_at": "2018-04-26T03:30:30Z",
    "author_association": "MEMBER",
    "body": "@jzelner The only practical approach I've found for letting collaborators edit the text in Word is to just paste the raw Rmd into a word document.  Like you say, I've found these collaborators are focused only on the text anyway, and are going to skip over any equations or code, so it doesn't matter a jot that equations aren't rendered and code isn't pretty or highlighted.  \r\n\r\nOf course you get a few errors pasting the Word edits back into Rmd (mostly rich-text characters corrupting some ascii code characters) but these are easy to spot and fix with a diff.  I know this is low-tech but relatively robust, I picked this up from a mathematician who works in TeX but also frequently collaborates with Word-only folks.  "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384509743",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384509743",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384509743,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T15:40:35Z",
    "author_association": "NONE",
    "body": "The best approach I've found* is using Rmd->Word & markdown on my end.  I send the Word doc to the collaborator(s) who edit(s) w/ track changes. When I get the edits back, I accept all changes and use pandoc to convert Word to markdown.  I can then diff the two markdown files, resolve changes into my Rmd, build report, commit, and send off a new version as necessary.   Pandoc does a pretty good job of Word->markdown.   (I haven't thought about it until now, but could the word->md and diff/resolve be built into a pkg and possibly integrate w/ RStudio in a slick way?)\r\n\r\nIn my consulting biostats work, I'm never on a project with someone who knows our R/markup/Git toolkit and getting MDs to use anything but Word is a massive endeavor in cultural change.  The other option a colleague tried was requiring collaborators to use the GitHub/GitLab/BitBucket web editor and save via commits.  [This project](https://www.researchgate.net/profile/Egon_L_Van_den_Broek/publication/314102138_HealthInf_2017_Proceedings_of_the_10th_International_Conference_on_Health_Informatics/links/58b59837aca27261e51659ff/HealthInf-2017-Proceedings-of-the-10th-International-Conference-on-Health-Informatics.pdf#page=249), though, had an MD/PhD primary investigator who was very motivated to conduct the study with reproducible tools and had the clout to enforce it. \r\n\r\n\r\n(this comment may be more #27, but sort of both)\r\n*Edited - a colleague and I started doing this in our RA consulting lab."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384592933",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384592933",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384592933,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T10:34:40Z",
    "author_association": "NONE",
    "body": "All are great suggestions. I am wondering if we could settle on a very good way to do this. Including both word and google docs as options for interacting with folks not interested in getting involved further.\r\n\r\n> could the word->md and diff/resolve be built into a pkg and possibly integrate w/ RStudio in a slick way?\r\n\r\nFor example, this :point_up_2:, particularly the integration in RStudio part :wink: \r\nHaving google docs as an starting option would be a nice have too."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384605858",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384605858",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384605858,
    "user": {
     "login": "batpigandme",
     "id": 831732,
     "avatar_url": "https://avatars0.githubusercontent.com/u/831732?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/batpigandme",
     "html_url": "https://github.com/batpigandme",
     "followers_url": "https://api.github.com/users/batpigandme/followers",
     "following_url": "https://api.github.com/users/batpigandme/following{/other_user}",
     "gists_url": "https://api.github.com/users/batpigandme/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/batpigandme/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/batpigandme/subscriptions",
     "organizations_url": "https://api.github.com/users/batpigandme/orgs",
     "repos_url": "https://api.github.com/users/batpigandme/repos",
     "events_url": "https://api.github.com/users/batpigandme/events{/privacy}",
     "received_events_url": "https://api.github.com/users/batpigandme/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T11:26:24Z",
    "author_association": "NONE",
    "body": "I vaguely remember being told this was all old hat when I shared it on Twitter awhile back, but possibly relevant nonetheless:\r\n[How to convert a Google Doc to RMarkdown and publish on Github pages](http://www.storybench.org/convert-google-doc-rmarkdown-publish-github-pages/)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384616380",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384616380",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384616380,
    "user": {
     "login": "Pakillo",
     "id": 1597843,
     "avatar_url": "https://avatars0.githubusercontent.com/u/1597843?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/Pakillo",
     "html_url": "https://github.com/Pakillo",
     "followers_url": "https://api.github.com/users/Pakillo/followers",
     "following_url": "https://api.github.com/users/Pakillo/following{/other_user}",
     "gists_url": "https://api.github.com/users/Pakillo/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/Pakillo/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/Pakillo/subscriptions",
     "organizations_url": "https://api.github.com/users/Pakillo/orgs",
     "repos_url": "https://api.github.com/users/Pakillo/repos",
     "events_url": "https://api.github.com/users/Pakillo/events{/privacy}",
     "received_events_url": "https://api.github.com/users/Pakillo/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T12:04:42Z",
    "author_association": "NONE",
    "body": "Great thread! A common bottleneck for many, I think.\r\n\r\nFor some time I thought that using Authorea or Overleaf, which can be easily synced to GitHub (e.g. see [here](https://support.authorea.com/en-us/article/syncing-articles-to-github-zubain/) & [here](https://www.overleaf.com/help/233-how-do-i-connect-an-overleaf-project-with-a-repo-on-github-gitlab-or-bitbucket)) could be a solution: just pull changes from github repo. But then you would have to persuade coauthors to switch platform, which is very hard (even the transition from Word to GDocs).\r\n\r\nBy now I incorporate changes manually into the Rmd, or use diff/merge of different versions. Now that we are at it, may I ask for a good tool to make diff & merge for manuscripts? I have been using SourceDiffMerge, but it would be great to be able to accept/reject changes word by word, rather than by line or paragraph. Does that tool exist?\r\n\r\nMany thanks, and looking forward to seeing what you develop.\r\n\r\nP.S. I think the Word -> markdown conversion can be done through rmarkdown::pandoc_convert"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384633913",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384633913",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384633913,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T13:05:33Z",
    "author_association": "NONE",
    "body": "This is great! To me, the ultimate outcome would be to let someone edit and\nuse track changes on a Word/GDoc compiled from RMD, and to then be able to\naccept changes, convert back to RMD and continue on with the underlying RMD\ndocument. I think this would make collaboration about 100x easier, and also\npotentially serve as a kind of 'gateway drug' to RMD for the Word-addled.\n\nFrom the bad old days of using Endnote, I remember fields in Word\n<https://support.office.com/en-us/article/insert-edit-and-view-fields-in-word-c429bbb0-8669-48a7-bd24-bab6ba6b06bb>.\nThese may be going the way of the dodo, but it seems like they can be used\nto reference potentially dynamic values. For example, if you want to use\nWord to make a bunch of envelopes for a big mailing, etc., you can perform\na mail merge using an excel sheet full of addresses and a Word doc with the\nunderlying formatting. (I recall doing something like this in high school\nusing a Visual Basic macro...). I wonder if fields could be used to\ndemarcate inline R output, with the underlying R block in a hidden field or\nsomething like that? Or perhaps have a companion document containing all of\nthe R chunks? Just thinking this out does make me somewhat queasy because\nit feels like it would be brittle, but if there were a consistent way to do\nit, I think it could be very powerful.\n\nI think the path forward for TeX is more straightforward.  For example, R\noutput could be inserted in the document in the form of commands that are\nauto-defined in the preamble (see here\n<https://tex.stackexchange.com/questions/151367/put-from-external-file>),\nor by sourcing from an external file, which I believe is possible without\nany non-TeX dependencies. R chunks could just be commented out in the TeX\nduring conversion and uncommented on the TeX -> Rnw or TeX -> RMD\nconversion.\n\nIn an ideal world, I think any approach to this would look a bit like the\nJSON/html relationship, in which an omnibus external data file is used to\npopulate dynamic fields in the resulting static document. In this setup,\nresults in the JSON would be referred to by automatically generated keys in\nthe document, and the true values would be populated at compile-time. I try\nto take this approach when writing papers, but it still leaves me with\nexternal R dependencies to pull the values out of the JSON/Yaml blob.\nPerhaps getting all non-TeX languages out of the pipeline for the\n'last-mile' in a document that can still be reversed to RMD is unrealistic,\nbut it would be ideal if possible...\n\n-Jon\n\nOn Thu, Apr 26, 2018 at 8:04 AM, Francisco Rodriguez-Sanchez <\nnotifications@github.com> wrote:\n\n> Great thread! A common bottleneck for many, I think.\n>\n> For some time I thought that using Authorea or Overleaf, which can be\n> easily synced to GitHub (e.g. see here\n> <https://support.authorea.com/en-us/article/syncing-articles-to-github-zubain/>\n> & here\n> <https://www.overleaf.com/help/233-how-do-i-connect-an-overleaf-project-with-a-repo-on-github-gitlab-or-bitbucket>\n> could be a solution: just pull changes from github repo. But then you would\n> have to persuade coauthors to switch platform, which is very hard (even the\n> transition from Word to GDocs).\n>\n> By now I incorporate changes manually into the Rmd, or use diff/merge of\n> different versions. Now that we are at it, may I ask for a good tool to\n> make diff & merge for manuscripts? I have been using SourceDiffMerge, but\n> it would be great to be able to accept/reject changes word by word, rather\n> than by line or paragraph. Does that tool exist?\n>\n> Many thanks, and looking forward to seeing what you develop.\n>\n> P.S. I think the Word -> markdown conversion can be done through\n> rmarkdown::pandoc_convert\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ropensci/unconf18/issues/42#issuecomment-384616380>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIUg9o0KFLjKR6_RCwAoeIGDjIWbcKmks5tsbe-gaJpZM4TkRk2>\n> .\n>\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384637268",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384637268",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384637268,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T13:17:02Z",
    "author_association": "NONE",
    "body": "Apologies for the weird HTML links inserted via gmail!"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384696258",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384696258",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384696258,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T16:02:26Z",
    "author_association": "MEMBER",
    "body": "To play the crotchety veteran, this too (or at least parts of it) has been an Unconf project before 🙂\r\n\r\nhttps://github.com/ropenscilabs/gdoc"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384713350",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384713350",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384713350,
    "user": {
     "login": "mmulvahill",
     "id": 1807425,
     "avatar_url": "https://avatars2.githubusercontent.com/u/1807425?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mmulvahill",
     "html_url": "https://github.com/mmulvahill",
     "followers_url": "https://api.github.com/users/mmulvahill/followers",
     "following_url": "https://api.github.com/users/mmulvahill/following{/other_user}",
     "gists_url": "https://api.github.com/users/mmulvahill/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mmulvahill/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mmulvahill/subscriptions",
     "organizations_url": "https://api.github.com/users/mmulvahill/orgs",
     "repos_url": "https://api.github.com/users/mmulvahill/repos",
     "events_url": "https://api.github.com/users/mmulvahill/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mmulvahill/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T16:55:22Z",
    "author_association": "NONE",
    "body": "I suspected so --  at least that it had at least been thoroughly considered by the R/rOpenSci/Rstudio community.  Curious if there's anything specific/narrow here for a smaller post-Unconf project or side-conversation?  I saw somewhere that file diff in the Rstudio text editor has been considered, but that's outside our realm.\r\n\r\nI've personally tried to come up with a system that allow me to avoid using MS Office/Gdocs as much as possible, and humbly prefer that to digging into VBA/Office internals.  A distant colleague has been developing StatTag -- a Word plugin that reverses our typical workflow (R/SAS/SPSS code goes in the the document and StatTag handles executing/printing it) -- which will work for some folks."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/384714703",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-384714703",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 384714703,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/26/2018",
    "updated_at": "2018-04-26T16:59:41Z",
    "author_association": "MEMBER",
    "body": "> at least that it had at least been thoroughly considered by the R/rOpenSci/Rstudio community\r\n\r\nAnd the goal of being able to un-knit is ... on the radar? Discussed? I want to convey that it's absolutely A Recognized Thing but also that no one should expect anything on a specific date or even at all. It's a very big task."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385284321",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385284321",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385284321,
    "user": {
     "login": "noamross",
     "id": 571752,
     "avatar_url": "https://avatars1.githubusercontent.com/u/571752?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/noamross",
     "html_url": "https://github.com/noamross",
     "followers_url": "https://api.github.com/users/noamross/followers",
     "following_url": "https://api.github.com/users/noamross/following{/other_user}",
     "gists_url": "https://api.github.com/users/noamross/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/noamross/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/noamross/subscriptions",
     "organizations_url": "https://api.github.com/users/noamross/orgs",
     "repos_url": "https://api.github.com/users/noamross/repos",
     "events_url": "https://api.github.com/users/noamross/events{/privacy}",
     "received_events_url": "https://api.github.com/users/noamross/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/29/2018",
    "updated_at": "2018-04-29T21:43:56Z",
    "author_association": "NONE",
    "body": "I started writing a response summarizing my attempts to solve this problem and realized it was becoming essay-length, so I put it here: https://github.com/noamross/rmd-rant . I do think there's some space to carve out an unconf-scale project on this issue, possibly along the lines of strategy No. 2 that I describe there."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385309431",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385309431",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385309431,
    "user": {
     "login": "njtierney",
     "id": 6488485,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6488485?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/njtierney",
     "html_url": "https://github.com/njtierney",
     "followers_url": "https://api.github.com/users/njtierney/followers",
     "following_url": "https://api.github.com/users/njtierney/following{/other_user}",
     "gists_url": "https://api.github.com/users/njtierney/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/njtierney/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/njtierney/subscriptions",
     "organizations_url": "https://api.github.com/users/njtierney/orgs",
     "repos_url": "https://api.github.com/users/njtierney/repos",
     "events_url": "https://api.github.com/users/njtierney/events{/privacy}",
     "received_events_url": "https://api.github.com/users/njtierney/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "4/30/2018",
    "updated_at": "2018-04-30T04:02:32Z",
    "author_association": "NONE",
    "body": "On @jennybc 's note of gdoc - @milesmcbain has a nifty R package for rendering google docs into markdown that could be handy? [markdrive](https://github.com/milesmcbain/markdrive)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385707179",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385707179",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385707179,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T15:55:28Z",
    "author_association": "NONE",
    "body": "I am super interested in this topic, particularly in terms of advising students on how best to collaborate on projects. While the students are working individually on homework assignments, they're all in rmarkdown-lalaland. Then final projects come along and it's crash and burn for that model.  They are all coders but yet they will not collaborate on text w/Git/Github; feedback on this approach from one group: \"It's insane to deal with merge conflicts involving text. No way.\" This group switched to Google Docs and then copied and pasted back to Rmd. Quite ironic, since Rmd was supposed to eliminate the copy and paste approach: now we've just flipped the model on its head and copy and paste text instead of code and output (an improvement I suppose but still). "
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385708004",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385708004",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385708004,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T15:58:25Z",
    "author_association": "NONE",
    "body": "One more thought: there's one small piece of the puzzle that I doubt would be hard to implement and would make a big difference. That is, having an echo=FALSE option for text, to provide the same flexibility for text in progress as we have with code in progress. I can think of so many uses: the ability for example to create assignments with and without solutions. (I know there are workarounds using comments in code chunks but that's not the same.)"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385732874",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385732874",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385732874,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T17:30:50Z",
    "author_association": "MEMBER",
    "body": "Writing prose, collaboratively, with plain text + version control tends to be WAY more difficult than working on code collaboratively.\r\n\r\nhttps://twitter.com/emhrt_/status/740777537547173889\r\n\r\n> Writing a multi-author paper on github is a far bigger test of git skills than any coding I've done."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385735412",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385735412",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385735412,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T17:39:05Z",
    "author_association": "MEMBER",
    "body": "> This group switched to Google Docs and then copied and pasted back to Rmd. Quite ironic, since Rmd was supposed to eliminate the copy and paste approach\r\n\r\nMaybe it's fine for them to do collaborative editing of prose as a Google Doc? You could even script the regular task of pulling that file down into the repo (possibly converting to a specific format?) and committing, so that the repo remains the definitive source of the entire project, even though a prose document has been vendored out to Google Docs, due to a more humane user interface for collaborative editing."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385738439",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385738439",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385738439,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T17:49:49Z",
    "author_association": "NONE",
    "body": "I do wonder if there's a solution to many of these problems that doesn't\nreinvent too many wheels and is more of a workflow solution. For example, I\ntry to construct my RMD, at least for manuscripts, so that there is minimal\ncomputation going on in the document. Instead, I try to 'compile' all of my\nresults to some kind of external data file. This way, the ultimate target\nof all the analysis code is this omnibus data file, rather than the PDF.  When\nI'm feeling extra-organized, it's JSON or YAML. When I'm feeling lazy (i.e.\nmost of the time), it's a bunch of R objects serialized to Rds files and\nCSVs.\n\nIf you had one omnibus RDS file or JSON/YAML, etc. file, that was the input\nto the RMD, you could still allow fields w/in the RMD to update in response\nto changing results, etc. And you could even do some computation, e.g. if\nwhole MCMC traces were stored in the input file.  But the analysis and\nwriting pipelines would be more-or-less decoupled. I'm not sure this is a\npackage-level solution, but something that enforced the mindset of a\ndatabase/client or json/html relationship in RMD could make it so that\nanyone with a working Rstudio installation could edit and compile and RMD\nwritten this way.\n\nThat would solve about 97% of my collaboration problems. It's just that\nwhen I try to do it in the ad-hoc way I usually do, I end up breaking the\ndiscipline of keeping everything in one place and introduce little hacks (a\nmillion CSVs w/4 lines each, an RDS with a model object in it) and the\ndocument is no longer truly shareable. I could imagine an rstudio plugin\nthat shows specific data hooks in the document and connects them to the\ninput data, etc. Wonder if something like this exists in the web-oriented\nworld that we could pirate?\n\n-Jon\n\nOn Tue, May 1, 2018 at 1:39 PM, Jennifer (Jenny) Bryan <\nnotifications@github.com> wrote:\n\n> This group switched to Google Docs and then copied and pasted back to Rmd.\n> Quite ironic, since Rmd was supposed to eliminate the copy and paste\n> approach\n>\n> Maybe it's fine for them to do collaborative editing of prose as a Google\n> Doc? You could even script the regular task of pulling that file down into\n> the repo (possibly converting to a specific format?) and committing, so\n> that the repo remains the definitive source of the entire project, even\n> though a prose document has been vendored out to Google Docs, due to a more\n> humane user interface for collaborative editing.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ropensci/unconf18/issues/42#issuecomment-385735412>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIUg5GnMljnbpVHq7qk6B-kEIy0oCmsks5tuJ25gaJpZM4TkRk2>\n> .\n>\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385742249",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385742249",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385742249,
    "user": {
     "login": "jennybc",
     "id": 599454,
     "avatar_url": "https://avatars3.githubusercontent.com/u/599454?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jennybc",
     "html_url": "https://github.com/jennybc",
     "followers_url": "https://api.github.com/users/jennybc/followers",
     "following_url": "https://api.github.com/users/jennybc/following{/other_user}",
     "gists_url": "https://api.github.com/users/jennybc/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jennybc/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jennybc/subscriptions",
     "organizations_url": "https://api.github.com/users/jennybc/orgs",
     "repos_url": "https://api.github.com/users/jennybc/repos",
     "events_url": "https://api.github.com/users/jennybc/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jennybc/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T18:03:13Z",
    "author_association": "MEMBER",
    "body": "> I do wonder if there's a solution to many of these problems that doesn't\r\nreinvent too many wheels and is more of a workflow solution\r\n\r\nYes, I have definitely counselled students working on group projects to solve this by breaking their report or website up into smaller pieces or pages with an index. This greatly reduces the problem of multiple people touching the same things at the same time."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385748143",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385748143",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385748143,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T18:25:20Z",
    "author_association": "NONE",
    "body": "> I do wonder if there's a solution to many of these problems that doesn't\r\nreinvent too many wheels and is more of a workflow solution. For example, I\r\ntry to construct my RMD, at least for manuscripts, so that there is minimal\r\ncomputation going on in the document. Instead, I try to 'compile' all of my\r\nresults to some kind of external data file. This way, the ultimate target\r\nof all the analysis code is this omnibus data file, rather than the PDF.  When\r\nI'm feeling extra-organized, it's JSON or YAML. When I'm feeling lazy (i.e.\r\nmost of the time), it's a bunch of R objects serialized to Rds files and\r\nCSVs.\r\n\r\nSorry if I have been repeating myself too much, but [`drake`](https://github.com/ropensci/drake) was designed to accommodate this use case. The user specifies a declarative workflow with intermediate data objects and files, R Markdown reports included. Here, a dynamic report is just a target in the workflow rather than the overarching workflow manager (minimal computational burden on `knitr`), and there are ways to tell `drake` about the dependencies of each report. Example: https://ropensci.github.io/drake/articles/drake.html. As @ldecicco-USGS pointed out in #30, things get tougher once we try to integrate with Google Drive / Google Docs."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385752703",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385752703",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385752703,
    "user": {
     "login": "jtr13",
     "id": 14161912,
     "avatar_url": "https://avatars1.githubusercontent.com/u/14161912?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jtr13",
     "html_url": "https://github.com/jtr13",
     "followers_url": "https://api.github.com/users/jtr13/followers",
     "following_url": "https://api.github.com/users/jtr13/following{/other_user}",
     "gists_url": "https://api.github.com/users/jtr13/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jtr13/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jtr13/subscriptions",
     "organizations_url": "https://api.github.com/users/jtr13/orgs",
     "repos_url": "https://api.github.com/users/jtr13/repos",
     "events_url": "https://api.github.com/users/jtr13/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jtr13/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T18:41:21Z",
    "author_association": "NONE",
    "body": "@jennybc I don't have a problem with Google Docs, at least until the tools get better. I haven't done an ethnography of how students work, but I hypothesize that they need different tools than seasoned researchers who can divvy up the work more readily (you do the abstract, I'll write up the methods...) Many are out of their comfort zone writing. They struggle together with how to write each piece of a report and then put the pieces together.  All that to say that some of them at least are truly working together on each sentence and derive a great deal of benefit from the Google Docs platform."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385783918",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385783918",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385783918,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-01T20:42:38Z",
    "author_association": "NONE",
    "body": "Hi Will,\n\nThanks! I think drake is definitely a big part of the solution here\n(currently trying to wean myself off of Makefiles towards drake to ease\ncollaboration with those are are not so-inclined). Although I do still\nthink that last step of how to construct the input data, what format it\nshould be in, what goes into it and what doesn't, etc. remains to be worked\nout. This may be something of a standards issue, and would be something I'd\nlove to chat about more at the unconf or whenever/wherever else!\n\n-Jon\n\nOn Tue, May 1, 2018 at 2:25 PM, Will Landau <notifications@github.com>\nwrote:\n\n> I do wonder if there's a solution to many of these problems that doesn't\n> reinvent too many wheels and is more of a workflow solution. For example, I\n> try to construct my RMD, at least for manuscripts, so that there is minimal\n> computation going on in the document. Instead, I try to 'compile' all of my\n> results to some kind of external data file. This way, the ultimate target\n> of all the analysis code is this omnibus data file, rather than the PDF.\n> When\n> I'm feeling extra-organized, it's JSON or YAML. When I'm feeling lazy (i.e.\n> most of the time), it's a bunch of R objects serialized to Rds files and\n> CSVs.\n>\n> Sorry if I have been repeating myself too much, but drake\n> <https://github.com/ropensci/drake> was designed to accommodate this use\n> case. The user specifies a declarative workflow with intermediate data\n> objects and files, R Markdown reports included. Here, a dynamic report is\n> just a target in the workflow rather than the overarching workflow manager\n> (minimal computational burden on knitr), and there are ways to tell drake\n> about the dependencies of each report. Example:\n> https://ropensci.github.io/drake/articles/drake.html. As @ldecicco-USGS\n> <https://github.com/ldecicco-USGS> pointed out in #30\n> <https://github.com/ropensci/unconf18/issues/30>, things get tougher once\n> we try to integrate with Google Drive / Google Docs.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ropensci/unconf18/issues/42#issuecomment-385748143>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIUgwlaQNjdlLlA50rJp5tvdQXPk0hXks5tuKiDgaJpZM4TkRk2>\n> .\n>\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385855795",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385855795",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385855795,
    "user": {
     "login": "wlandau",
     "id": 1580860,
     "avatar_url": "https://avatars1.githubusercontent.com/u/1580860?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/wlandau",
     "html_url": "https://github.com/wlandau",
     "followers_url": "https://api.github.com/users/wlandau/followers",
     "following_url": "https://api.github.com/users/wlandau/following{/other_user}",
     "gists_url": "https://api.github.com/users/wlandau/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/wlandau/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/wlandau/subscriptions",
     "organizations_url": "https://api.github.com/users/wlandau/orgs",
     "repos_url": "https://api.github.com/users/wlandau/repos",
     "events_url": "https://api.github.com/users/wlandau/events{/privacy}",
     "received_events_url": "https://api.github.com/users/wlandau/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/1/2018",
    "updated_at": "2018-05-02T03:37:53Z",
    "author_association": "NONE",
    "body": "Sure! Basically, that data frame is like a Makefile, your recipes are R code chunks, and you declare dependencies just by using them in the recipes. I am happy to receive questions as [new issues](https://github.com/ropensci/drake/issues), especially since they help build up the [FAQ](https://ropensci.github.io/drake/articles/faq.html)."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/385968901",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-385968901",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 385968901,
    "user": {
     "login": "jzelner",
     "id": 136323,
     "avatar_url": "https://avatars1.githubusercontent.com/u/136323?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/jzelner",
     "html_url": "https://github.com/jzelner",
     "followers_url": "https://api.github.com/users/jzelner/followers",
     "following_url": "https://api.github.com/users/jzelner/following{/other_user}",
     "gists_url": "https://api.github.com/users/jzelner/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/jzelner/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/jzelner/subscriptions",
     "organizations_url": "https://api.github.com/users/jzelner/orgs",
     "repos_url": "https://api.github.com/users/jzelner/repos",
     "events_url": "https://api.github.com/users/jzelner/events{/privacy}",
     "received_events_url": "https://api.github.com/users/jzelner/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/2/2018",
    "updated_at": "2018-05-02T12:58:46Z",
    "author_association": "NONE",
    "body": "Here's what I'm envisioning. This would work for most of my collaboration\nheadaches, but I don't know how many other folks' problems it would solve:\n\n1) Compile to a zipfile or other archive, with a) an RDS file containing\nall of the R objects needed in the course of generating the final\nPDF/HTML/MD document, b) a directory of binary or text files (e.g. figures,\ncsv files), c) a requirements.txt style manifest listing both what is in\nthe archive and any R dependencies.\n\n2) At document-generation time, the archive is mounted and accessed without\nexpanding it into the filesystem, and executed like a normal RMD.\n\nMost of my collaborators are willing to install (or have installed) RStudio\nand are comfortable using the GUI tools to generate a PDF from an RMD. But\nthey may be a bit more reticent about the filesystem, and almost all will\nbe using windows, whereas most of my stuff is coming from Linux.\n\nThis might be a package kind of solution, particularly if there are tools\nneeded to grease the process of making an archive and for enforcing a\nstandard archive structure that is transportable across projects. It also\nmight be useful to think about a 'tidy data' style paper? I would be\nexcited to spearhead something like that. My gut feeling is that the\nsolution here is 90% practice and 10% technology, maybe 80/20?\n\n-Jon\n\n\n\nOn Tue, May 1, 2018 at 11:37 PM, Will Landau <notifications@github.com>\nwrote:\n\n> Sure! Basically, that data frame is like a Makefile, your recipes are R\n> code chunks, and you declare dependencies just by using them in the\n> recipes. I am happy to receive questions as new issues\n> <https://github.com/ropensci/drake/issues>, especially since they help\n> build up the FAQ <https://ropensci.github.io/drake/articles/faq.html>.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ropensci/unconf18/issues/42#issuecomment-385855795>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIUg7QTPOzR25eilcxiyjHSh1QeClZJks5tuSoVgaJpZM4TkRk2>\n> .\n>\n"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/387569634",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-387569634",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 387569634,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/8/2018",
    "updated_at": "2018-05-08T23:04:17Z",
    "author_association": "NONE",
    "body": "Wow, such a great discussion is happening here. Thank you, everyone! I lost track of this until @stefaniebutland made me noticed the discussion was far from over. There is a lot to digest here for me. I will try to come back to it in the upcoming days before the unconf and see if I can summarize all the directions proposed for this issue thus far so we can choose which direction may be worth tackling in Seattle."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388027297",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-388027297",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 388027297,
    "user": {
     "login": "mpadge",
     "id": 6697851,
     "avatar_url": "https://avatars1.githubusercontent.com/u/6697851?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/mpadge",
     "html_url": "https://github.com/mpadge",
     "followers_url": "https://api.github.com/users/mpadge/followers",
     "following_url": "https://api.github.com/users/mpadge/following{/other_user}",
     "gists_url": "https://api.github.com/users/mpadge/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/mpadge/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/mpadge/subscriptions",
     "organizations_url": "https://api.github.com/users/mpadge/orgs",
     "repos_url": "https://api.github.com/users/mpadge/repos",
     "events_url": "https://api.github.com/users/mpadge/events{/privacy}",
     "received_events_url": "https://api.github.com/users/mpadge/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/10/2018",
    "updated_at": "2018-05-10T11:26:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's a pre-emptive unconf-y-thing happening as I write that overlaps somewhat with this issue: the [eLife Innovation Sprint](https://elifesciences.org/events/c40798c3/elife-innovation-sprint-2018) aiming\r\n\r\n> to collaboratively prototype new innovations that bring cutting-edge technology to open research communication.\r\n\r\nThe outputs of that will be well-worth keeping an eye on, and feeding back into this issue, and potentially the broader unconf in general."
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/388975356",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-388975356",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 388975356,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/14/2018",
    "updated_at": "2018-05-14T21:53:59Z",
    "author_association": "NONE",
    "body": "Ok, folks, initial step before getting to @noamross summary request. I summarize the items I see could conduct to unconf projects*:\r\n\r\n1. Develop further @noamross [strategy 2 ](https://github.com/noamross/rmd-rant#strategy-2-having-collaborators-provide-input-text-only)\r\n\r\n2. Add `echo = FALSE` for text in progress, a nice-have feature suggested by @jtr13  \r\n\r\n3. @jzelner's package approach for users who are willing to collaborate using RStudio: \r\n\r\n> 1) Compile to a zipfile or other archive, with a) an RDS file containing\r\nall of the R objects needed in the course of generating the final\r\nPDF/HTML/MD document, b) a directory of binary or text files (e.g. figures,\r\ncsv files), c) a requirements.txt style manifest listing both what is in\r\nthe archive and any R dependencies.\r\n\r\n> 2) At document-generation time, the archive is mounted and accessed without\r\nexpanding it into the filesystem, and executed like a normal RMD.\r\n\r\nI can open new issues for 1) and 2) (but Noam and Joyce may be better authors for those issues than I - please let me know your preference).\r\n\r\nI can't open a new issue for 3) because I don't follow the idea completely :grimacing:. Could you please do the honors, Jon?\r\n \r\n\\*  I am omitting workflow descriptions posted not because they lack interest, but 'cause I don't see a project there - if you see a project from something I am omitting, please open an issue with it :pray:"
   },
   {
    "url": "https://api.github.com/repos/ropensci/unconf18/issues/comments/390334824",
    "html_url": "https://github.com/ropensci/unconf18/issues/42#issuecomment-390334824",
    "issue_url": "https://api.github.com/repos/ropensci/unconf18/issues/42",
    "id": 390334824,
    "user": {
     "login": "lauracion",
     "id": 17729900,
     "avatar_url": "https://avatars3.githubusercontent.com/u/17729900?v=4",
     "gravatar_id": "",
     "url": "https://api.github.com/users/lauracion",
     "html_url": "https://github.com/lauracion",
     "followers_url": "https://api.github.com/users/lauracion/followers",
     "following_url": "https://api.github.com/users/lauracion/following{/other_user}",
     "gists_url": "https://api.github.com/users/lauracion/gists{/gist_id}",
     "starred_url": "https://api.github.com/users/lauracion/starred{/owner}{/repo}",
     "subscriptions_url": "https://api.github.com/users/lauracion/subscriptions",
     "organizations_url": "https://api.github.com/users/lauracion/orgs",
     "repos_url": "https://api.github.com/users/lauracion/repos",
     "events_url": "https://api.github.com/users/lauracion/events{/privacy}",
     "received_events_url": "https://api.github.com/users/lauracion/received_events",
     "type": "User",
     "site_admin": false
    },
    "created_at": "5/18/2018",
    "updated_at": "2018-05-18T21:17:32Z",
    "author_association": "NONE",
    "body": "Summary: All projects I identified from the discussion for this issue are now summarized in #73, #74, and #75."
   }
  ],
  "comments_url": "https://api.github.com/repos/ropensci/unconf18/issues/42/comments",
  "milestone": null,
  "quicklink": "ropensci/unconf18#42"
 }
]